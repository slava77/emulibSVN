#!/bin/bash

# Send SOAP message to XDAQ app.

# Example:
#          sendSOAP -u csc-C2D07-03.cms -p 39999 -A JobControl -L 10 -v -b "<xdaq:executeCommand  xmlns:xdaq=\\\"urn:xdaq-soap:3.0\\\" execPath=\\\"/bin/ls\\\" argv=\\\"-l ..\\\" user=\\\"cscdaq\\\"></xdaq:executeCommand>"

# default values

#SERVERURL=csc-C2D07-08.cms
#SERVERPORT=40200
#SERVERAPP=EmuDAQManager
#SERVERAPPINSTANCE=0

SERVERURL=csc-C2D07-08.cms
SERVERPORT=39999
SERVERAPP=jobcontrol::Application
SERVERAPPLID=10

VERBOSITY=0

# user's options
while [[ $1 = -* ]]; do
    case $1 in 
	-A ) SERVERAPP=$2
	    shift ;;
	-c ) CREDITS=$2
	    shift ;;
	-b ) SOAPBODY=$2
	    shift ;;
	-T ) TYPE=$2
	    shift ;;
	-I ) SERVERAPPINSTANCE=$2
	    SERVERAPPLID=
	    shift ;;
	-L ) SERVERAPPLID=$2
	    shift ;;
	-p ) SERVERPORT=$2
	    shift ;;
	-u ) SERVERURL=$2
	    shift ;;
	-v ) VERBOSITY=1 ;;
	*  ) 
	    echo 'Usage: '
	    echo '------'
	    echo '    sendSOAP [-u url] [-p port]'
	    echo '             [-A application] [-I app_instance | -L app_lid] [-b SOAP_body]'
	    echo '             [-v]'
	    echo
	    echo '  option   meaning                            default'
	    echo '  ------   -------                            -------'
	    echo '      -p   port                               39999'
	    echo '      -u   url                                csc-C2D07-08.cms'
	    echo '      -A   application                        jobcontrol::Application'
	    echo '      -I   server application instance        <not used; application local id used instead>'
	    echo '      -L   server application local id        10'
	    echo '      -b   SOAP body                          <get stateName>'
	    echo '      -h   print help                         do not print help'
	    echo '      -v   verbose                            not verbose'
	    echo
	    echo 'Example:'
	    echo '------'
	    echo 'sendSOAP -u csc-C2D07-03.cms -p 39999 -A JobControl -L 10 -v -b "<xdaq:executeCommand  xmlns:xdaq=\\\"urn:xdaq-soap:3.0\\\" execPath=\\\"/bin/ls\\\" argv=\\\"-l \$HOME\\\" user=\\\"cscdaq\\\"><EnvironmentVariable HOME=\\\"/nfshome0/cscdaq\\\"></EnvironmentVariable></xdaq:executeCommand>"'

	    exit 1 ;;
    esac
    shift
done

if [[ ${#SERVERAPPLID} == 0 ]]; then
    HEADER="\"SOAPAction: urn:xdaq-application:class=$SERVERAPP,instance=$SERVERAPPINSTANCE\""
else
    HEADER="\"SOAPAction: urn:xdaq-application:class=$SERVERAPP:lid=$SERVERAPPLID\""
fi

if [[ ${#SOAPBODY} = 0 ]]; then
    echo "No SOAP body specified, using default:"
    SOAPBODY="<xdaq:ParameterGet xmlns:xdaq=\\\"urn:xdaq-soap:3.0\\\"><xapp:properties xmlns:xapp=\\\"urn:xdaq-application:$SERVERAPP\\\" xsi:type=\\\"soapenc:Struct\\\"><xapp:stateName xsi:type=\\\"xsd:string\\\"/></xapp:properties></xdaq:ParameterGet>"
    echo $SOAPBODY
    echo
fi

MESSAGE="\"<soap-env:Envelope soap-env:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:soap-env=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:soapenc=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\"><soap-env:Header/><soap-env:Body>$SOAPBODY</soap-env:Body></soap-env:Envelope>\""

WRITEOUT=""
if [[ $VERBOSITY = "1" ]]; then
    WRITEOUT="--write-out \"\n\nGot %{size_download} bytes in total (%{size_header} in header) in %{time_total} s.\n\""
    echo "Command:"
    echo curl -H $HEADER http://$SERVERURL:$SERVERPORT $WRITEOUT -d $MESSAGE
    echo ""
    echo "Reply:"
fi

eval curl -H $HEADER http://$SERVERURL:$SERVERPORT $WRITEOUT -d $MESSAGE | sed -u -e :a -e 'N;s/\n/ /g; ta'| sed -u 's/>\([^<>]\+\)<\//>[1;31m\1[0m<\//g'
echo ""


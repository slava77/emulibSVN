//
// File generated by /opt/cern/root/bin/rootcint at Tue Feb 14 19:12:41 2006.
// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

#include "CHistogramDict.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TStreamerInfo.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TCollectionProxy.h"
#include "TIsAProxy.h"
namespace ROOT {
   namespace Shadow {
   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void CHistogram_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_CHistogram(void *p = 0);
   static void *newArray_CHistogram(Long_t size);
   static void delete_CHistogram(void *p);
   static void deleteArray_CHistogram(void *p);
   static void destruct_CHistogram(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::CHistogram*)
   {
      ::CHistogram *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CHistogram >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CHistogram", ::CHistogram::Class_Version(), "/home/dqm/TriDAS/emu/emuDQM/EmuROOTDisplayServer/include/CHistogram.hh", 22,
                  typeid(::CHistogram), DefineBehavior(ptr, ptr),
                  &::CHistogram::Dictionary, isa_proxy, 0,
                  sizeof(::CHistogram) );
      instance.SetNew(&new_CHistogram);
      instance.SetNewArray(&newArray_CHistogram);
      instance.SetDelete(&delete_CHistogram);
      instance.SetDeleteArray(&deleteArray_CHistogram);
      instance.SetDestructor(&destruct_CHistogram);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::CHistogram*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

//______________________________________________________________________________
TClass *CHistogram::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CHistogram::Class_Name()
{
   return "CHistogram";
}

//______________________________________________________________________________
const char *CHistogram::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::CHistogram*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CHistogram::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::CHistogram*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CHistogram::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::CHistogram*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CHistogram::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::CHistogram*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void CHistogram::Streamer(TBuffer &R__b)
{
   // Stream an object of class CHistogram.

   CObject::Streamer(R__b);
}

//______________________________________________________________________________
void CHistogram::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class CHistogram.

      TClass *R__cl = ::CHistogram::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fSubtractHisto", &fSubtractHisto);
      R__insp.Inspect(R__cl, R__parent, "*fRefHisto", &fRefHisto);
      R__insp.Inspect(R__cl, R__parent, "*fHistoDrawn", &fHistoDrawn);
      CObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CHistogram(void *p) {
      return  p ? new(p) ::CHistogram : new ::CHistogram;
   }
   static void *newArray_CHistogram(Long_t size) {
      return new ::CHistogram[size];
   }
   // Wrapper around operator delete
   static void delete_CHistogram(void *p) {
      delete ((::CHistogram*)p);
   }
   static void deleteArray_CHistogram(void *p) {
      delete [] ((::CHistogram*)p);
   }
   static void destruct_CHistogram(void *p) {
      typedef ::CHistogram current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CHistogram

/********************************************************
* /home/dqm/TriDAS/emu/emuDQM/EmuROOTDisplayServer/src/common/CHistogramDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableCHistogramDict();

extern "C" void G__set_cpp_environmentCHistogramDict() {
  G__add_macro("G__CINTVERSION=50160005");
  G__add_compiledheader("TROOT.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/home/dqm/TriDAS/emu/emuDQM/EmuROOTDisplayServer/include/CHistogram.hh");
  G__cpp_reset_tagtableCHistogramDict();
}
class G__dIhomedIdqmdITriDASdIemudIemuDQMdIEmuROOTDisplayServerdIsrcdIcommondICHistogramDictdOcc_tag {};

void* operator new(size_t size,G__dIhomedIdqmdITriDASdIemudIemuDQMdIEmuROOTDisplayServerdIsrcdIcommondICHistogramDictdOcc_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__dIhomedIdqmdITriDASdIemudIemuDQMdIEmuROOTDisplayServerdIsrcdIcommondICHistogramDictdOcc_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_dIhomedIdqmdITriDASdIemudIemuDQMdIEmuROOTDisplayServerdIsrcdIcommondICHistogramDictdOcc() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevCHistogramDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* CHistogram */
static int G__CHistogramDict_281_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   CHistogram *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new CHistogram(
(TH1*)G__int(libp->para[0]),(const TObject*)G__int(libp->para[1])
,(TH1*)G__int(libp->para[2]),(TH1*)G__int(libp->para[3]));
      break;
   case 3:
      p = new CHistogram(
(TH1*)G__int(libp->para[0]),(const TObject*)G__int(libp->para[1])
,(TH1*)G__int(libp->para[2]));
      break;
   case 2:
      p = new CHistogram((TH1*)G__int(libp->para[0]),(const TObject*)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__CHistogramDictLN_CHistogram);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CHistogramDict_281_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   CHistogram *p=NULL;
      p = new CHistogram(*(CHistogram*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__CHistogramDictLN_CHistogram);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CHistogramDict_281_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   CHistogram *p=NULL;
      p = new CHistogram(*(CObject*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__CHistogramDictLN_CHistogram);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CHistogramDict_281_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   CHistogram *p=NULL;
   if(G__getaryconstruct()) {
     if(G__PVOID==G__getgvp()) {
       p=new CHistogram[G__getaryconstruct()];
     } else {
       p=new CHistogram[G__getaryconstruct()];
     }
   }
   else p=new CHistogram;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__CHistogramDictLN_CHistogram);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CHistogramDict_281_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const CHistogram*)(G__getstructoffset()))->GetSubtractHisto());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CHistogramDict_281_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const CHistogram*)(G__getstructoffset()))->GetRefHisto());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CHistogramDict_281_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((CHistogram*)(G__getstructoffset()))->SetSubtractHisto((TH1*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CHistogramDict_281_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((CHistogram*)(G__getstructoffset()))->SetRefHisto((TH1*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CHistogramDict_281_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((CHistogram*)(G__getstructoffset()))->SubtractedHisto());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CHistogramDict_281_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((CHistogram*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((CHistogram*)(G__getstructoffset()))->Draw();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CHistogramDict_281_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((CHistogram*)(G__getstructoffset()))->Paint((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((CHistogram*)(G__getstructoffset()))->Paint();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CHistogramDict_281_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const CHistogram*)(G__getstructoffset()))->GetHistoDrawn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CHistogramDict_281_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const CHistogram& obj=((CHistogram*)(G__getstructoffset()))->operator=(*(CHistogram*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CHistogramDict_281_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)CHistogram::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CHistogramDict_281_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)CHistogram::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CHistogramDict_281_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)CHistogram::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CHistogramDict_281_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      CHistogram::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CHistogramDict_281_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const CHistogram*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CHistogramDict_281_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((CHistogram*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CHistogramDict_281_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((CHistogram*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CHistogramDict_281_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((CHistogram*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CHistogramDict_281_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)CHistogram::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CHistogramDict_281_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)CHistogram::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CHistogramDict_281_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)CHistogram::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CHistogramDict_281_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)CHistogram::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CHistogram G__TCHistogram;
static int G__CHistogramDict_281_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (CHistogram *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (CHistogram *)((G__getstructoffset())+sizeof(CHistogram)*i);
   else  delete (CHistogram *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* CHistogram */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncCHistogramDict {
 public:
  G__Sizep2memfuncCHistogramDict() {p=&G__Sizep2memfuncCHistogramDict::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncCHistogramDict::*p)();
};

size_t G__get_sizep2memfuncCHistogramDict()
{
  G__Sizep2memfuncCHistogramDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceCHistogramDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__CHistogramDictLN_CHistogram))) {
     CHistogram *G__Lderived;
     G__Lderived=(CHistogram*)0x1000;
     {
       CObject *G__Lpbase=(CObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CHistogramDictLN_CHistogram),G__get_linked_tagnum(&G__CHistogramDictLN_CObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CHistogramDictLN_CHistogram),G__get_linked_tagnum(&G__CHistogramDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableCHistogramDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,
-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__CHistogramDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: CHistogramDict.cc,v 1.1 2006/02/16 00:05:14 barvic Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CHistogramDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CHistogramDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: CHistogramDict.cc,v 1.1 2006/02/16 00:05:14 barvic Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CHistogramDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CHistogramDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: CHistogramDict.cc,v 1.1 2006/02/16 00:05:14 barvic Exp $",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* CHistogram */
static void G__setup_memvarCHistogram(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CHistogramDictLN_CHistogram));
   { CHistogram *p; p=(CHistogram*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CHistogramDictLN_TH1),-1,-1,2,"fSubtractHisto=",0,"histo to be subtracted after reset.");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CHistogramDictLN_TH1),-1,-1,2,"fRefHisto=",0,"reference histo.");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CHistogramDictLN_TH1),-1,-1,2,"fHistoDrawn=",0,"histo to be drawn. (TH1*)fTObject - fSubtractHisto");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__CHistogramDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarCHistogramDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncCHistogram(void) {
   /* CHistogram */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CHistogramDictLN_CHistogram));
   G__memfunc_setup("UpdateHisto",1130,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("free",418,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("copy",443,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"u 'CHistogram' - 11 - chisto",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CHistogram",1009,G__CHistogramDict_281_4_0,105,G__get_linked_tagnum(&G__CHistogramDictLN_CHistogram),-1,0,4,1,1,0,
"U 'TH1' - 0 - h1 U 'TObject' - 10 - inputsource "
"U 'TH1' - 0 0 subtracthisto U 'TH1' - 0 0 refhisto",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CHistogram",1009,G__CHistogramDict_281_5_0,105,G__get_linked_tagnum(&G__CHistogramDictLN_CHistogram),-1,0,1,1,1,0,"u 'CHistogram' - 11 - chisto",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CHistogram",1009,G__CHistogramDict_281_6_0,105,G__get_linked_tagnum(&G__CHistogramDictLN_CHistogram),-1,0,1,1,1,0,"u 'CObject' - 11 - cobj",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CHistogram",1009,G__CHistogramDict_281_7_0,105,G__get_linked_tagnum(&G__CHistogramDictLN_CHistogram),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSubtractHisto",1647,G__CHistogramDict_281_8_0,85,G__get_linked_tagnum(&G__CHistogramDictLN_TH1),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRefHisto",1092,G__CHistogramDict_281_9_0,85,G__get_linked_tagnum(&G__CHistogramDictLN_TH1),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSubtractHisto",1659,G__CHistogramDict_281_0_1,121,-1,-1,0,1,1,1,0,"U 'TH1' - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetRefHisto",1104,G__CHistogramDict_281_1_1,121,-1,-1,0,1,1,1,0,"U 'TH1' - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SubtractedHisto",1560,G__CHistogramDict_281_2_1,85,G__get_linked_tagnum(&G__CHistogramDictLN_TH1),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Draw",398,G__CHistogramDict_281_3_1,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Paint",508,G__CHistogramDict_281_4_1,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetHistoDrawn",1315,G__CHistogramDict_281_5_1,85,G__get_linked_tagnum(&G__CHistogramDictLN_TH1),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__CHistogramDict_281_6_1,117,G__get_linked_tagnum(&G__CHistogramDictLN_CHistogram),-1,1,1,1,1,0,"u 'CHistogram' - 11 - chisto",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__CHistogramDict_281_7_1,85,G__get_linked_tagnum(&G__CHistogramDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&CHistogram::Class),0);
   G__memfunc_setup("Class_Name",982,G__CHistogramDict_281_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&CHistogram::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__CHistogramDict_281_9_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&CHistogram::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__CHistogramDict_281_0_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&CHistogram::Dictionary),0);
   G__memfunc_setup("IsA",253,G__CHistogramDict_281_1_2,85,G__get_linked_tagnum(&G__CHistogramDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__CHistogramDict_281_2_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__CHistogramDict_281_3_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CHistogramDict_281_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__CHistogramDict_281_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&CHistogram::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__CHistogramDict_281_6_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&CHistogram::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__CHistogramDict_281_7_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&CHistogram::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__CHistogramDict_281_8_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&CHistogram::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~CHistogram",1135,G__CHistogramDict_281_9_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncCHistogramDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalCHistogramDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcCHistogramDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__CHistogramDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__CHistogramDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__CHistogramDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__CHistogramDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__CHistogramDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__CHistogramDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CHistogramDictLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__CHistogramDictLN_CObject = { "CObject" , 99 , -1 };
G__linked_taginfo G__CHistogramDictLN_CHistogram = { "CHistogram" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableCHistogramDict() {
  G__CHistogramDictLN_TClass.tagnum = -1 ;
  G__CHistogramDictLN_TBuffer.tagnum = -1 ;
  G__CHistogramDictLN_TMemberInspector.tagnum = -1 ;
  G__CHistogramDictLN_TObject.tagnum = -1 ;
  G__CHistogramDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__CHistogramDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CHistogramDictLN_TH1.tagnum = -1 ;
  G__CHistogramDictLN_CObject.tagnum = -1 ;
  G__CHistogramDictLN_CHistogram.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableCHistogramDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__CHistogramDictLN_TClass);
   G__get_linked_tagnum(&G__CHistogramDictLN_TBuffer);
   G__get_linked_tagnum(&G__CHistogramDictLN_TMemberInspector);
   G__get_linked_tagnum(&G__CHistogramDictLN_TObject);
   G__get_linked_tagnum(&G__CHistogramDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__CHistogramDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__CHistogramDictLN_TH1);
   G__get_linked_tagnum(&G__CHistogramDictLN_CObject);
   G__tagtable_setup(G__get_linked_tagnum(&G__CHistogramDictLN_CHistogram),sizeof(CHistogram),-1,65280,(char*)NULL,G__setup_memvarCHistogram,G__setup_memfuncCHistogram);
}
extern "C" void G__cpp_setupCHistogramDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupCHistogramDict()");
  G__set_cpp_environmentCHistogramDict();
  G__cpp_setup_tagtableCHistogramDict();

  G__cpp_setup_inheritanceCHistogramDict();

  G__cpp_setup_typetableCHistogramDict();

  G__cpp_setup_memvarCHistogramDict();

  G__cpp_setup_memfuncCHistogramDict();
  G__cpp_setup_globalCHistogramDict();
  G__cpp_setup_funcCHistogramDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncCHistogramDict();
  return;
}
class G__cpp_setup_initCHistogramDict {
  public:
    G__cpp_setup_initCHistogramDict() { G__add_setup_func("CHistogramDict",(G__incsetup)(&G__cpp_setupCHistogramDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initCHistogramDict() { G__remove_setup_func("CHistogramDict"); }
};
G__cpp_setup_initCHistogramDict G__cpp_setup_initializerCHistogramDict;


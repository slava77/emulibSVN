<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<tstore:configuration xmlns:tstore="urn:xdaq-tstore:1.0">

	<tstore:view id="urn:tstore-view-SQL:EMUFEDsystem">
		<tstore:connection dbname="cms_rcms" xmlns:tstore="urn:xdaq-tstore:1.0"/>
		 <!--<tstore:connection dbname="devdb10" xmlns:tstore="urn:xdaq-tstore:1.0"/>--> 
		
		<!-- add some mappings because TStore doesn't know which tables the values in queries come from
		so it can't look at the column check constraints etc. to figure out what types to read the results as.-->
		<tstore:maptype source="unsigned short" column=".*_NUMBER$"/>
		<tstore:maptype source="unsigned int" column="FMM_ID"/>
		<tstore:maptype source="unsigned short" column="RUI"/>
		<tstore:maptype source="unsigned int 64" column="KEY"/>
		<tstore:maptype source="unsigned int 64" column="^ID$"/>
		<tstore:maptype source="unsigned short" column="GBE_PRESCALE"/>
		<tstore:maptype source="unsigned short" column="SLOT"/>
		<tstore:maptype source="unsigned short" column="^CAEN_.*"/>
		<tstore:maptype source="unsigned int" column="^SLINK._ID"/>
		<tstore:maptype source="bool" column="USED"/>
		<tstore:maptype source="bool" column="^FORCE_.*"/>
		<tstore:maptype source="bool" column="^ENABLE_.*"/>
		<tstore:maptype source="bool" column="INVERT_CCB_COMMAND_SIG.*"/>
		<tstore:maptype source="bool" column="KILLED"/>
		<tstore:maptype source="bool" column=".*SLINK"/>
		<tstore:maptype source="bool" column=".*BIT.*"/>
		<tstore:maptype source="bool" column="TTCRX_NOT_READY"/>
		 
		<!-- Select statments for configuration -->
		
		<!-- Select the crates on a certain system given a certain key  -->
		<sql:query xmlns:sql="urn:tstore-view-SQL" name="crates">
			<sql:parameter name="KEY" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<![CDATA[select * from EMU_FED_CRATES where KEY=$KEY]]>
		</sql:query>
		
				<sql:insert xmlns:sql="urn:tstore-view-SQL" name="FEDCrates">
			<table name="EMU_FED_CRATES"/>
		</sql:insert>
		
		<!-- Select the controller in a certain crate given a certain crate ID -->
		<sql:query xmlns:sql="urn:tstore-view-SQL" name="controller">
			<sql:parameter name="CRATE_ID" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<![CDATA[select EMU_FED_CONTROLLERS.ID, EMU_FED_CONTROLLERS.CAEN_DEVICE, EMU_FED_CONTROLLERS.CAEN_LINK from EMU_FED_CRATES inner join EMU_FED_CONTROLLERS on (EMU_FED_CRATES.CRATE_NUMBER = EMU_FED_CONTROLLERS.CRATE_NUMBER and EMU_FED_CRATES.KEY = EMU_FED_CONTROLLERS.KEY) where EMU_FED_CRATES.ID = $CRATE_ID]]>
		</sql:query>
		<sql:insert xmlns:sql="urn:tstore-view-SQL" name="VMEControllers">
			<table name="EMU_FED_CONTROLLERS"/>
		</sql:insert>
		<!-- Select the DDUs on a certain system given a certain crate ID -->
		<sql:query xmlns:sql="urn:tstore-view-SQL" name="ddus">
			<sql:parameter name="CRATE_ID" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<![CDATA[select EMU_FED_DDUS.ID, EMU_FED_DDUS.SLOT, EMU_FED_DDUS.RUI, EMU_FED_DDUS.FMM_ID, EMU_FED_DDUS.ENABLE_FORCE_CHECKS, EMU_FED_DDUS.FORCE_ALCT_CHECKS, EMU_FED_DDUS.FORCE_TMB_CHECKS, EMU_FED_DDUS.FORCE_CFEB_CHECKS, EMU_FED_DDUS.FORCE_NORMAL_DMB, EMU_FED_DDUS.GBE_PRESCALE, EMU_FED_DDUS.INVERT_CCB_COMMAND_SIGNALS from EMU_FED_CRATES inner join EMU_FED_DDUS on (EMU_FED_DDUS.KEY = EMU_FED_CRATES.KEY and EMU_FED_DDUS.CRATE_NUMBER = EMU_FED_CRATES.CRATE_NUMBER) where EMU_FED_CRATES.ID = $CRATE_ID]]>
		</sql:query>
		
		<!-- Select the fibers/CSCs on a certain DDU given a certain DDU ID -->
		<sql:query xmlns:sql="urn:tstore-view-SQL" name="fibers">
			<sql:parameter name="DDU_ID" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<![CDATA[select EMU_FED_DDU_FIBERS.FIBER_ID, EMU_FED_DDU_FIBERS.FIBER_NUMBER, EMU_FED_DDU_FIBERS.KILLED, EMU_FED_DDU_FIBERS.CHAMBER_NAME from EMU_FED_DDUS, EMU_FED_DDU_FIBERS where EMU_FED_DDU_FIBERS.RUI = EMU_FED_DDUS.RUI and EMU_FED_DDU_FIBERS.KEY = EMU_FED_DDUS.KEY and EMU_FED_DDUS.ID = $DDU_ID]]>
		</sql:query>
		
		<!-- Select the DCCs on a certain system given a certain crate ID -->
		<sql:query xmlns:sql="urn:tstore-view-SQL" name="dccs">
			<sql:parameter name="CRATE_ID" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<![CDATA[select EMU_FED_DCCS.ID, EMU_FED_DCCS.SLOT, EMU_FED_DCCS.FMM_ID, EMU_FED_DCCS.SLINK1_ID, EMU_FED_DCCS.SLINK2_ID, EMU_FED_DCCS.ENABLE_SW_SWITCH, EMU_FED_DCCS.TTCRX_NOT_READY, EMU_FED_DCCS.IGNORE_SLINK_BACKPRESSURE, EMU_FED_DCCS.IGNORE_SLINK_NOT_PRESENT, EMU_FED_DCCS.SW_BIT4, EMU_FED_DCCS.SW_BIT5 from EMU_FED_CRATES inner join EMU_FED_DCCS on (EMU_FED_DCCS.KEY = EMU_FED_CRATES.KEY and EMU_FED_DCCS.CRATE_NUMBER = EMU_FED_CRATES.CRATE_NUMBER) where EMU_FED_CRATES.ID = $CRATE_ID]]>
		</sql:query>
		
		<!-- Select the fifos on a certain DCC given a certain DCC ID -->
		<sql:query xmlns:sql="urn:tstore-view-SQL" name="fifos">
			<sql:parameter name="DCC_ID" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<![CDATA[select EMU_FED_DCC_FIFOS.ID, EMU_FED_DCC_FIFOS.FIFO_NUMBER, EMU_FED_DCC_FIFOS.RUI, EMU_FED_DCC_FIFOS.USED from EMU_FED_DCCS, EMU_FED_DCC_FIFOS where EMU_FED_DCC_FIFOS.FMM_ID = EMU_FED_DCCS.FMM_ID and EMU_FED_DCC_FIFOS.KEY = EMU_FED_DCCS.KEY and EMU_FED_DCCS.ID = $DCC_ID]]>
		</sql:query>
		
		<!-- Select statements for modification and customization -->
		
		<!-- Select all from a given table -->
		<sql:query xmlns:sql="urn:tstore-view-SQL" name="get_all">
			<sql:parameter name="TABLE">
				<![CDATA[]]>
			</sql:parameter>
			<![CDATA[select * from $TABLE]]>
		</sql:query>
		
		<!-- Select everything from a given table specified by a given ID -->
		<sql:query xmlns:sql="urn:tstore-view-SQL" name="get_all_by_id">
			<sql:parameter name="TABLE">
				<![CDATA[]]>
			</sql:parameter>
			<sql:parameter name="ID" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<![CDATA[select * from $TABLE where ID = $ID]]>
		</sql:query>
		
		<!-- Select everything from a given table specified by a configuration key -->
		<sql:query xmlns:sql="urn:tstore-view-SQL" name="get_all_by_key">
			<sql:parameter name="TABLE">
				<![CDATA[]]>
			</sql:parameter>
			<sql:parameter name="KEY" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<![CDATA[select * from $TABLE where KEY = $KEY]]>
		</sql:query>
		
		<!-- Add a new configuration -->
		<sql:insert xmlns:sql="urn:tstore-view-SQL" name="configuration">
			<sql:table name="EMU_FED_CONFIGURATIONS" />
		</sql:insert>

		<!-- Select system given a configuration key -->
		<sql:query xmlns:sql="urn:tstore-view-SQL" name="get_configuration">
			<sql:parameter name="ID" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<![CDATA[select * from EMU_FED_CONFIGURATIONS where ID = $ID]]>
		</sql:query>

		<!-- Select all systems given a system name -->
		<sql:query xmlns:sql="urn:tstore-view-SQL" name="get_configuration">
			<sql:parameter name="DESCRIPTION" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<![CDATA[select * from EMU_FED_CONFIGURATIONS where DESCRIPTION = $DESCRIPTION]]>
		</sql:query>

		
		        <sql:query xmlns:sql="urn:tstore-view-SQL" name="getMax">
      <sql:parameter name="column">
        <![CDATA[]]>
      </sql:parameter>
            <sql:parameter name="table">
        <![CDATA[]]>
      </sql:parameter>
      <![CDATA[select NVL(MAX($column),0) $column from $table]]>
    </sql:query>
    
      <!--sql:query xmlns:sql="urn:tstore-view-SQL" name="getallconfigids">
<sql:parameter name="SIDE" bind="yes">
        <![CDATA[]]>
      </sql:parameter>
      <![CDATA[select key from emu_fed_systems where name=NLS_INITCAP($SIDE)||'-Side' order by key desc]]>
      </sql:query-->

		
		<!-- Select crates given a configuration key and a crate number -->
		<sql:query xmlns:sql="urn:tstore-view-SQL" name="get_crates_by_key_number">
			<sql:parameter name="KEY" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<sql:parameter name="CRATE_NUMBER" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<![CDATA[select * from EMU_FED_CRATES where KEY = $KEY and CRATE_NUMBER = $CRATE_NUMBER]]>
		</sql:query>
		
		<!-- Add a new crate -->
		<sql:insert xmlns:sql="urn:tstore-view-SQL" name="crate">
			<sql:table name="EMU_FED_CRATES" />
		</sql:insert>
		
		<!-- Select controllers given a configuration key and a crate number -->
		<sql:query xmlns:sql="urn:tstore-view-SQL" name="get_controller_by_key_crate">
			<sql:parameter name="KEY" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<sql:parameter name="CRATE_NUMBER" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<![CDATA[select * from EMU_FED_CONTROLLERS where KEY = $KEY and CRATE_NUMBER = $CRATE_NUMBER]]>
		</sql:query>
		
		<sql:query xmlns:sql="urn:tstore-view-SQL" name="controller_diff">
		      <sql:parameter name="OLD_KEY">
        <![CDATA[]]>
      </sql:parameter>
            <sql:parameter name="NEW_KEY">
        <![CDATA[]]>
      </sql:parameter>
     <sql:parameter name="CRATE_NUMBER" bind="yes">
        <![CDATA[]]>
      </sql:parameter>
			<![CDATA[select
oldconfig.CAEN_DEVICE "CAEN_DEVICE $OLD_KEY",newconfig.CAEN_DEVICE "CAEN_DEVICE $NEW_KEY",
oldconfig.CAEN_LINK "CAEN_LINK $OLD_KEY",newconfig.CAEN_LINK "CAEN_LINK $NEW_KEY"
from EMU_FED_CONTROLLERS oldconfig,EMU_FED_CONTROLLERS newconfig where
oldconfig.KEY=$OLD_KEY and oldconfig.CRATE_NUMBER=$CRATE_NUMBER
and newconfig.KEY=$NEW_KEY and newconfig.CRATE_NUMBER=$CRATE_NUMBER
and
(oldconfig.CAEN_DEVICE!=newconfig.CAEN_DEVICE or 
oldconfig.CAEN_LINK!=newconfig.CAEN_LINK)]]>
		</sql:query> 
		
		<!-- Add a new controller -->
		<sql:insert xmlns:sql="urn:tstore-view-SQL" name="controller">
			<sql:table name="EMU_FED_CONTROLLERS" />
		</sql:insert>
		
		<!-- Select DDUs given a configuration key and an RUI -->
		<sql:query xmlns:sql="urn:tstore-view-SQL" name="get_ddus_by_key_rui">
			<sql:parameter name="KEY" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<sql:parameter name="RUI" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<![CDATA[select * from EMU_FED_DDUS where KEY = $KEY and RUI = $RUI]]>
		</sql:query>
		
				<!-- Select DDUs given a configuration key and a crate number -->
		<sql:query xmlns:sql="urn:tstore-view-SQL" name="get_ddus_by_key_crate">
			<sql:parameter name="KEY" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<sql:parameter name="CRATE_NUMBER" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<![CDATA[select * from EMU_FED_DDUS where KEY = $KEY and CRATE_NUMBER = $CRATE_NUMBER]]>
		</sql:query>
<sql:query xmlns:sql="urn:tstore-view-SQL" name="fiber_diff">
	<sql:parameter name="OLD_KEY">
        <![CDATA[]]>
      </sql:parameter>
            <sql:parameter name="NEW_KEY">
        <![CDATA[]]>
      </sql:parameter>
     <sql:parameter name="RUI" bind="yes">
        <![CDATA[]]>
      </sql:parameter>
<![CDATA[select
oldconfig.CHAMBER "CHAMBER $OLD_KEY",newconfig.CHAMBER "CHAMBER $NEW_KEY",
oldconfig.FIBER_NUMBER,
oldconfig.KILLED "KILLED $OLD_KEY",newconfig.KILLED "KILLED $NEW_KEY"
from EMU_FED_DDU_FIBERS oldconfig,EMU_FED_DDU_FIBERS newconfig where
oldconfig.KEY=$OLD_KEY and oldconfig.RUI=$RUI
and newconfig.KEY=$NEW_KEY and newconfig.RUI=$RUI
and oldconfig.fiber_number=newconfig.fiber_number
and
(oldconfig.CHAMBER!=newconfig.CHAMBER or 
oldconfig.KILLED!=newconfig.KILLED)]]>
		</sql:query> 
<sql:query xmlns:sql="urn:tstore-view-SQL" name="ddu_diff">
		      <sql:parameter name="OLD_KEY">
        <![CDATA[]]>
      </sql:parameter>
            <sql:parameter name="NEW_KEY">
        <![CDATA[]]>
      </sql:parameter>
     <sql:parameter name="CRATE_NUMBER" bind="yes">
        <![CDATA[]]>
      </sql:parameter>
<![CDATA[select
oldconfig.RUI,
oldconfig.ENABLE_FORCE_CHECKS "ENABLE_FORCE_CHECKS $OLD_KEY",newconfig.ENABLE_FORCE_CHECKS "ENABLE_FORCE_CHECKS $NEW_KEY",
oldconfig.FMM_ID "FMM_ID $OLD_KEY",newconfig.FMM_ID "FMM_ID $NEW_KEY",
oldconfig.FORCE_ALCT_CHECKS "FORCE_ALCT_CHECKS $OLD_KEY",newconfig.FORCE_ALCT_CHECKS "FORCE_ALCT_CHECKS $NEW_KEY",
oldconfig.FORCE_CFEB_CHECKS "FORCE_CFEB_CHECKS $OLD_KEY",newconfig.FORCE_CFEB_CHECKS "FORCE_CFEB_CHECKS $NEW_KEY",
oldconfig.FORCE_NORMAL_DMB "FORCE_NORMAL_DMB $OLD_KEY",newconfig.FORCE_NORMAL_DMB "FORCE_NORMAL_DMB $NEW_KEY",
oldconfig.FORCE_TMB_CHECKS "FORCE_TMB_CHECKS $OLD_KEY",newconfig.FORCE_TMB_CHECKS "FORCE_TMB_CHECKS $NEW_KEY",
oldconfig.GBE_PRESCALE "GBE_PRESCALE $OLD_KEY",newconfig.GBE_PRESCALE "GBE_PRESCALE $NEW_KEY",
oldconfig.INVERT_CCB_COMMAND_SIGNALS "INVERT_CCB_COMMAND_SIG $OLD_KEY",newconfig.INVERT_CCB_COMMAND_SIGNALS "INVERT_CCB_COMMAND_SIG $NEW_KEY",
oldconfig.SLOT "SLOT $OLD_KEY",newconfig.SLOT "SLOT $NEW_KEY"
from EMU_FED_DDUS oldconfig,EMU_FED_DDUS newconfig where
oldconfig.KEY=$OLD_KEY and oldconfig.CRATE_NUMBER=$CRATE_NUMBER and
newconfig.KEY=$NEW_KEY and newconfig.CRATE_NUMBER=$CRATE_NUMBER and 
newconfig.RUI=oldconfig.RUI and (
	oldconfig.ENABLE_FORCE_CHECKS!=newconfig.ENABLE_FORCE_CHECKS or 
	oldconfig.FMM_ID!=newconfig.FMM_ID or 
	oldconfig.FORCE_ALCT_CHECKS!=newconfig.FORCE_ALCT_CHECKS or 
	oldconfig.FORCE_CFEB_CHECKS!=newconfig.FORCE_CFEB_CHECKS or 
	oldconfig.FORCE_NORMAL_DMB!=newconfig.FORCE_NORMAL_DMB or 
	oldconfig.FORCE_TMB_CHECKS!=newconfig.FORCE_TMB_CHECKS or 
	oldconfig.GBE_PRESCALE!=newconfig.GBE_PRESCALE or 
	oldconfig.INVERT_CCB_COMMAND_SIGNALS!=newconfig.INVERT_CCB_COMMAND_SIGNALS or 
	oldconfig.SLOT!=newconfig.SLOT
	or exists (
		select *
		from EMU_FED_DDU_FIBERS oldfiber,EMU_FED_DDU_FIBERS newfiber where
		oldfiber.KEY=$OLD_KEY and oldfiber.RUI=oldconfig.RUI
		and newfiber.KEY=$NEW_KEY and newfiber.RUI=newconfig.RUI
		and oldfiber.fiber_number=newfiber.fiber_number
		and (
			oldfiber.CHAMBER!=newfiber.CHAMBER or 
			oldfiber.KILLED!=newfiber.KILLED
		)
	)
)]]>
		</sql:query> 
		
		<!-- Add a new DDU -->
		<sql:insert xmlns:sql="urn:tstore-view-SQL" name="ddu">
			<sql:table name="EMU_FED_DDUS" />
		</sql:insert>
		
		<!-- Select DCCs given a configuration key and an FMM ID -->
		<sql:query xmlns:sql="urn:tstore-view-SQL" name="get_dccs_by_key_fmmid">
			<sql:parameter name="KEY" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<sql:parameter name="FMM_ID" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<![CDATA[select * from EMU_FED_DCCS where KEY = $KEY and FMM_ID = $FMM_ID]]>
		</sql:query>
		
			<sql:query xmlns:sql="urn:tstore-view-SQL" name="get_dccs_by_key_crate">
			<sql:parameter name="KEY" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<sql:parameter name="CRATE_NUMBER" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<![CDATA[select * from EMU_FED_DCCS where KEY = $KEY and CRATE_NUMBER = $CRATE_NUMBER]]>
		</sql:query>
		
		<!-- Add a new DCC -->
		<sql:insert xmlns:sql="urn:tstore-view-SQL" name="dcc">
			<sql:table name="EMU_FED_DCCS" />
		</sql:insert>
		
<sql:query xmlns:sql="urn:tstore-view-SQL" name="dcc_diff">
		      <sql:parameter name="OLD_KEY">
        <![CDATA[]]>
      </sql:parameter>
            <sql:parameter name="NEW_KEY">
        <![CDATA[]]>
      </sql:parameter>
     <sql:parameter name="CRATE_NUMBER" bind="yes">
        <![CDATA[]]>
      </sql:parameter>
<![CDATA[select
oldconfig.FMM_ID,
oldconfig.ENABLE_SW_SWITCH "ENABLE_SW_SWITCH $OLD_KEY",newconfig.ENABLE_SW_SWITCH "ENABLE_SW_SWITCH $NEW_KEY",
oldconfig.IGNORE_SLINK_BACKPRESSURE "IGNORE_SLINK_BACKPRESS $OLD_KEY",newconfig.IGNORE_SLINK_BACKPRESSURE "IGNORE_SLINK_BACKPRESS $NEW_KEY",
oldconfig.IGNORE_SLINK_NOT_PRESENT "IGNORE_SLINK_NOT_PRESE $OLD_KEY",newconfig.IGNORE_SLINK_NOT_PRESENT "IGNORE_SLINK_NOT_PRESE $NEW_KEY",
oldconfig.SLINK1_ID "SLINK1_ID $OLD_KEY",newconfig.SLINK1_ID "SLINK1_ID $NEW_KEY",
oldconfig.SLINK2_ID "SLINK2_ID $OLD_KEY",newconfig.SLINK2_ID "SLINK2_ID $NEW_KEY",
oldconfig.SLOT "SLOT $OLD_KEY",newconfig.SLOT "SLOT $NEW_KEY",
oldconfig.SW_BIT4 "SW_BIT4 $OLD_KEY",newconfig.SW_BIT4 "SW_BIT4 $NEW_KEY",
oldconfig.SW_BIT5 "SW_BIT5 $OLD_KEY",newconfig.SW_BIT5 "SW_BIT5 $NEW_KEY",
oldconfig.TTCRX_NOT_READY "TTCRX_NOT_READY $OLD_KEY",newconfig.TTCRX_NOT_READY "TTCRX_NOT_READY $NEW_KEY"

from EMU_FED_DCCS oldconfig,EMU_FED_DCCS newconfig where
oldconfig.KEY=$OLD_KEY and oldconfig.CRATE_NUMBER=$CRATE_NUMBER
and newconfig.KEY=$NEW_KEY and newconfig.CRATE_NUMBER=$CRATE_NUMBER
and oldconfig.FMM_ID=newconfig.FMM_ID and

(oldconfig.ENABLE_SW_SWITCH!=newconfig.ENABLE_SW_SWITCH or 
oldconfig.FMM_ID!=newconfig.FMM_ID or 
oldconfig.IGNORE_SLINK_BACKPRESSURE!=newconfig.IGNORE_SLINK_BACKPRESSURE or 
oldconfig.IGNORE_SLINK_NOT_PRESENT!=newconfig.IGNORE_SLINK_NOT_PRESENT or 
oldconfig.SLINK1_ID!=newconfig.SLINK1_ID or 
oldconfig.SLINK2_ID!=newconfig.SLINK2_ID or 
oldconfig.SLOT!=newconfig.SLOT or 
oldconfig.SW_BIT4!=newconfig.SW_BIT4 or 
oldconfig.SW_BIT5!=newconfig.SW_BIT5 or 
oldconfig.TTCRX_NOT_READY!=newconfig.TTCRX_NOT_READY

or exists (select * 
from EMU_FED_DCC_FIFOS oldfifo,EMU_FED_DCC_FIFOS newfifo where
oldfifo.KEY=$OLD_KEY and oldfifo.FMM_ID=oldconfig.FMM_ID
and newfifo.KEY=$NEW_KEY and newfifo.FMM_ID=newconfig.FMM_ID
and oldfifo.RUI=newfifo.RUI and
(oldfifo.USED!=newfifo.USED)))]]>
</sql:query>		
		<!-- Select DDU fibers given a configuration key and RUI -->
		<sql:query xmlns:sql="urn:tstore-view-SQL" name="get_fibers_by_key_rui">
			<sql:parameter name="KEY" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<sql:parameter name="RUI" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<![CDATA[select * from EMU_FED_DDU_FIBERS where KEY = $KEY and RUI = $RUI]]>
		</sql:query>
		
		<!-- Select DDU fibers given a configuration key and RUI and fiber number -->
		<sql:query xmlns:sql="urn:tstore-view-SQL" name="get_fibers_by_key_rui_number">
			<sql:parameter name="KEY" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<sql:parameter name="RUI" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<sql:parameter name="FIBER_NUMBER" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<![CDATA[select * from EMU_FED_DDU_FIBERS where KEY = $KEY and RUI = $RUI and FIBER_NUMBER = $FIBER_NUMBER]]>
		</sql:query>
		
		<!-- Add a new DDU fiber -->
		<sql:insert xmlns:sql="urn:tstore-view-SQL" name="fiber">
			<sql:table name="EMU_FED_DDU_FIBERS" />
		</sql:insert>
		
		<!-- Select DCC fifos given a configuration key and DCC FMM ID -->
		<sql:query xmlns:sql="urn:tstore-view-SQL" name="get_fifos_by_key_fmmid">
			<sql:parameter name="KEY" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<sql:parameter name="FMM_ID" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<![CDATA[select * from EMU_FED_DCC_FIFOS where KEY = $KEY and FMM_ID = $FMM_ID]]>
		</sql:query>
		
<sql:query xmlns:sql="urn:tstore-view-SQL" name="fifo_diff">
		      <sql:parameter name="OLD_KEY">
        <![CDATA[]]>
      </sql:parameter>
            <sql:parameter name="NEW_KEY">
        <![CDATA[]]>
      </sql:parameter>
     <sql:parameter name="FMM_ID" bind="yes">
        <![CDATA[]]>
      </sql:parameter>
			<![CDATA[select
oldconfig.FMM_ID "FMM_ID $OLD_KEY",newconfig.FMM_ID "FMM_ID $NEW_KEY",
oldconfig.RUI "RUI $OLD_KEY",newconfig.RUI "RUI $NEW_KEY",
oldconfig.USED "USED $OLD_KEY",newconfig.USED "USED $NEW_KEY"
from EMU_FED_DCC_FIFOS oldconfig,EMU_FED_DCC_FIFOS newconfig where
oldconfig.KEY=$OLD_KEY and oldconfig.FMM_ID=$FMM_ID
and newconfig.KEY=$NEW_KEY and newconfig.FMM_ID=$FMM_ID
and oldconfig.RUI=newconfig.RUI and
(oldconfig.USED!=newconfig.USED)]]>
		</sql:query> 
		
		<!-- Select DCC fifos given a configuration key -->
		<sql:query xmlns:sql="urn:tstore-view-SQL" name="get_fifos_by_key_fmmid_number">
			<sql:parameter name="KEY" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<sql:parameter name="RUI" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<sql:parameter name="FIFO_NUMBER" bind="yes">
				<![CDATA[]]>
			</sql:parameter>
			<![CDATA[select * from EMU_FED_DCC_FIFOS where KEY = $KEY and FMM_ID = $FMM_ID and FIFO_NUMBER = $FIFO_NUMBER]]>
		</sql:query>
		
		<!-- Add a new DCC fifo -->
		<sql:insert xmlns:sql="urn:tstore-view-SQL" name="fifo">
			<sql:table name="EMU_FED_DCC_FIFOS" />
		</sql:insert>

		
		<!-- Table definitions-->
		<tstore:table key="ID" name="EMU_FED_CONFIGURATIONS">
			<tstore:column name="ID" type="unsigned int 64"/>
			<tstore:column name="DESCRIPTION" type="string"/>
			<tstore:column name="TIMESTAMP" type="time"/>
		</tstore:table>
		
		<tstore:table key="KEY,CRATE_NUMBER" name="EMU_FED_CRATES">
			<!--tstore:column name="ID" type="unsigned int 64"/-->
			<tstore:column name="CRATE_NUMBER" type="unsigned short"/>
			<tstore:column name="KEY" type="unsigned int 64"/>
			<tstore:foreignkey references="EMU_FED_CONFIGURATIONS">
				<tstore:keycolumn column="KEY" references="ID"/>
			</tstore:foreignkey>
		</tstore:table>

		<tstore:table key="KEY,CRATE_NUMBER" name="EMU_FED_CONTROLLERS">
			<!--tstore:column name="ID" type="unsigned int 64"/-->
			<tstore:column name="CRATE_NUMBER" type="unsigned short"/>
			<tstore:column name="CAEN_DEVICE" type="unsigned short"/>
			<tstore:column name="CAEN_LINK" type="unsigned short"/>
			<tstore:column name="KEY" type="unsigned int 64"/>
			<tstore:foreignkey references="EMU_FED_CONFIGURATIONS">
				<tstore:keycolumn column="KEY" references="ID"/>
			</tstore:foreignkey>
		</tstore:table>
		
		<tstore:table key="KEY,RUI" name="EMU_FED_DDUS">
			<!--tstore:column name="ID" type="unsigned int 64"/-->
			<tstore:column name="CRATE_NUMBER" type="unsigned short"/>
			<tstore:column name="SLOT" type="unsigned short"/>
			<tstore:column name="RUI" type="unsigned short"/>
			<tstore:column name="FMM_ID" type="unsigned int"/>
			<tstore:column name="ENABLE_FORCE_CHECKS" type="bool"/>
			<tstore:column name="FORCE_ALCT_CHECKS" type="bool"/>
			<tstore:column name="FORCE_TMB_CHECKS" type="bool"/>
			<tstore:column name="FORCE_CFEB_CHECKS" type="bool"/>
			<tstore:column name="FORCE_NORMAL_DMB" type="bool"/>
			<tstore:column name="GBE_PRESCALE" type="unsigned short"/>
			<tstore:column name="INVERT_CCB_COMMAND_SIGNALS" type="bool"/>
			<tstore:column name="KEY" type="unsigned int 64"/>
			<tstore:foreignkey references="EMU_FED_CONFIGURATIONS">
				<tstore:keycolumn column="KEY" references="ID"/>
			</tstore:foreignkey>
		</tstore:table>

		<tstore:table key="KEY,FMM_ID" name="EMU_FED_DCCS">
			<!--tstore:column name="ID" type="unsigned int 64"/-->
			<tstore:column name="CRATE_NUMBER" type="unsigned short"/>
			<tstore:column name="SLOT" type="unsigned short"/>
			<tstore:column name="FMM_ID" type="unsigned int"/>
			<tstore:column name="SLINK1_ID" type="unsigned int"/>
			<tstore:column name="SLINK2_ID" type="unsigned int"/>
			<tstore:column name="ENABLE_SW_SWITCH" type="bool"/>
			<tstore:column name="TTCRX_NOT_READY" type="bool"/>
			<tstore:column name="IGNORE_SLINK_BACKPRESSURE" type="bool"/>
			<tstore:column name="IGNORE_SLINK_NOT_PRESENT" type="bool"/>
			<tstore:column name="SW_BIT4" type="bool"/>
			<tstore:column name="SW_BIT5" type="bool"/>
			<tstore:column name="KEY" type="unsigned int 64"/>
			<tstore:foreignkey references="EMU_FED_CONFIGURATIONS">
				<tstore:keycolumn column="KEY" references="ID"/>
			</tstore:foreignkey>
		</tstore:table>

		<tstore:table key="KEY,RUI,FIBER_NUMBER" name="EMU_FED_DDU_FIBERS">
			<!--tstore:column name="ID" type="unsigned int 64"/-->
			<tstore:column name="RUI" type="unsigned short"/>
			<tstore:column name="FIBER_NUMBER" type="unsigned short"/>
			<tstore:column name="CHAMBER" type="string"/>
			<tstore:column name="KILLED" type="bool"/>
			<tstore:column name="KEY" type="unsigned int 64"/>
			<tstore:foreignkey references="EMU_FED_CONFIGURATIONS">
				<tstore:keycolumn column="KEY" references="ID"/>
			</tstore:foreignkey>
		</tstore:table>
		
		<tstore:table key="KEY,FMM_ID,FIFO_NUMBER" name="EMU_FED_DCC_FIFOS">
			<!--tstore:column name="ID" type="unsigned int 64"/-->
			<tstore:column name="FMM_ID" type="unsigned int"/>
			<tstore:column name="FIFO_NUMBER" type="unsigned short"/>
			<tstore:column name="RUI" type="unsigned short"/>
			<tstore:column name="USED" type="bool"/>
			<tstore:column name="KEY" type="unsigned int 64"/>
			<tstore:foreignkey references="EMU_FED_CONFIGURATIONS">
				<tstore:keycolumn column="KEY" references="ID"/>
			</tstore:foreignkey>
		</tstore:table>

		
	</tstore:view>

</tstore:configuration>

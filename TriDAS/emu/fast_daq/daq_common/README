

======================================================================
This README file has not been checked, but I I'm adding it to SVN
incase it has useful info.
jhaley@cern.ch
======================================================================

DAQ_COMMON README:

daq_common contains routines that are used by the rest of the daq project.

daq_ipc.c:
	void my_msg_send();
	int daq_global_ipc_setup();
	int daq_global_ipc_clear();
	int evt_buf_ipc_setup(int irun);
	int daq_conf_ipc_setup(int irun);
	int daq_conf_ipc_clear(int irun);
	int create_msg_queue();
	int create_msg_queue_tm();
	int send_message(long type, int msg, int irun);
	int send_message_tm(long type, int msg, int irun);
	int read_message(long type, int *msg, int *irun);
	int read_message_tm(long type, int *msg, int *irun);
	int remove_msg_queue();
	int remove_msg_queue_tm();
	void my_msg_send(char*m, int type);
	int my_msg_receive_sync(char*m, int type);
	int my_mesg_receive_async(char*m, int type);
	
get_next_event.c:
	unsigned long combine_shorts(short upper, short lower);
	void dump_block(short* buf);
	int get_next_event(short*buf);
	int decode_EVTHEAD(short *buf);
	int decode_TMB(short* buf);
	int extract_config_file(char *file_name, short *buf);
	int decode_DDU(short *buf);
	int decode_ALCT(short *buf, int ibuf, int version);
	int decode_CLCT(short *buf, int ibuf, int version);
	int decode_CFEB(short *buf, int ibuf, int version);
	int decode_ALCTCAL(short *buf);
	int decode_STRIPCAL(short *buf);
	int decode_TDC3377(short *buf);
	int decode_TDC2277(short *buf);
	int decode_DSC7106(short *buf);
	int decode_SCL4434(short *buf);
	int decode_SCL2551(short *buf);
	
pedestal.c:
	int write_peds(float *mean, float *rms, char *out_file);	
	int read_peds(float *mean, float *rms, char *in_file);
	int get_default_peds(float *mean, float *rms);
	int subtract_monitor_peds( float *mean, float *rms);
	int calc_monitor_peds(float *mean, float *rms);
	
crcdivide.c:
	void crcdivide_(short int *datastream, unsigned short int *crc);
	unsigned short int crcdivide(unsigned short int *datastream);
	
read_afeb_config.c:
	int read_afeb_config(int config_file_num,alct_params_type *a);

lex_cable_map.c: generated from lex_cable_map.l, which contains
	a lexical description of how to read the cable map file.
	
This build is dependent upon the existence of $DAQHOME/aclt_jtag/include

Please define DAQHOME to point to the directory _above_ the daq_common
directory.

Please define CERNDIR to point to the location of your CERN head.  On
most FAST systems, this would be /cern/pro




#!/bin/bash

ECHO=

RSH=ssh
PORT=40000
LOG=/tmp/xdaq.$USER
XDAQ_EXE=$XDAQ_ROOT/bin/linux/x86/xdaq.exe
XDAQ_FLAGS="-l DEBUG"
CONFIG=$PWD/test/config.xml

LIBPATH=.:$XDAQ_ROOT/lib/linux/x86

run() {
	with_host=`echo "$@" | sed -e "s/HOST/localhost/"`
	$ECHO bash -c "$with_host"
}

check() {
	wget -T 1 -o /dev/null -O /dev/null http://localhost:$PORT \
			|| echo XDAQ executive was not found in localhost
}

start() {
	run "LD_LIBRARY_PATH=$LIBPATH $XDAQ_EXE -h HOST -p $PORT -c $CONFIG $XDAQ_FLAGS >|$LOG.$PORT 2>&1 &"

	count=0
	result=`check "$@"`
	while [[ -n $result ]]
	do
		if [[ $count -gt 10 ]]
		then
			echo "Waited for 10 seconds without success."
			exit 1;
		fi
		sleep 2
		result=`check "$@"`
		let count=count+1
	done
}

stop() {
	run "killall xdaq.exe 2>/dev/null; mv $LOG.$PORT xdaq.log.$PORT"

	count=0
	lines=`check "$@" | grep 'not found' | wc -l`
	while [[ $lines -lt $# ]]
	do
		if [[ $count -gt 10 ]]
		then
			echo "Waited for 10 seconds without success."
			exit 1;
		fi
		sleep 1
		lines=`check "$@" | grep 'not found' | wc -l`
		let count=count+1
	done
}

RESULT=0

command=$1; shift
[[ $# -eq 1 ]] && CONFIG=$1

for port in `grep 'Context url' $CONFIG | sed -e 's/^.*:\([0-9][0-9]*\).*$/\1/'`
do
	PORT=$port

	case $command in
	check)   check;;
	start)   start;;
	stop)    stop;;
	*)       echo "Usage: bootxdaq {start|stop|check} ..."
	esac
done

exit $RESULT

# End of file
# vim: set ai ts=4 sw=4:

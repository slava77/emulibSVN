V 10
1
LANG:1 8 (NoName)
PANEL,361 153 440 180 N "_3DFace" 5
"$iBusSpeed"
"$sBusName"
"$sDpName"
"$sInterface"
"$sPort"
EEE E E 1 -1 -1 0  20 162
"" 0 1
E"void pnlGetAvailablePortList(dyn_string &dsAvailablePortListKVASER, dyn_string &dsAvailablePortListNICAN)
{
	int i;

	string sPortElement = \".interfacePort:_online.._value\";
	string sCardElement = \".id:_online.._value\";
	string sPort;
	string sCard;

	dyn_string dsAllocatedPortListKVASER;
	dyn_string dsAllocatedPortListNICAN;
	dyn_string dsAllPortListKVASER = makeDynString(\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\");
	dyn_string dsAllPortListNICAN = makeDynString(\"can0\",\"can1\",\"can2\",\"can3\",\"can4\",\"can5\",\"can6\",\"can7\",\"can8\",\"can9\",\"can10\",\"can11\",\"can12\",\"can13\",\"can14\",\"can15\");
	dyn_string dsExistingCANbusList;

	dyn_string exceptionInfo;

	//Now we look at the ports already allocated by the existing CANbuses in the project								
	fwDevice_getChildren($sDpName, fwDevice_HARDWARE, dsExistingCANbusList, exceptionInfo);

	// Loop through all buses, finding the allocated ports;
	for (i = 1; i <= dynlen(dsExistingCANbusList); i++) {
		dpGet(dsExistingCANbusList[i] + sPortElement, sPort,
					dsExistingCANbusList[i] + sCardElement, sCard);
	
		if (sCard == ELMB_CAN_CARD_NICAN) {
			dynAppend(dsAllocatedPortListNICAN, sPort);
		} else {
			dynAppend(dsAllocatedPortListKVASER, sPort);
		}
	}

	// Loop through all allocated Kvaser ports, removing them from the list
	for (i = 1; i <= dynlen(dsAllocatedPortListKVASER); i++) {
		dynRemove(dsAllPortListKVASER, dynContains(dsAllPortListKVASER, dsAllocatedPortListKVASER[i]));
	}
	
	// Loop through all allocated NICAN ports, removing them from the list
	for (i = 1; i <= dynlen(dsAllocatedPortListNICAN); i++) {
		dynRemove(dsAllPortListNICAN, dynContains(dsAllPortListNICAN, dsAllocatedPortListNICAN[i]));
	}
	
	
	dsAvailablePortListKVASER = dsAllPortListKVASER;
	dsAvailablePortListNICAN = dsAllPortListNICAN;

	return;

}

void pnlDisplayAvailablePorts()
{
// Local Variables
// ---------------
	int i;
	int iPos;
	
	dyn_string dsAvailablePortListKvaser;
	dyn_string dsAvailablePortListNICAN;
	dyn_string dsAvailablePortList;
	
// Executable Code
// ---------------
	// Call function to get all available ports
	pnlGetAvailablePortList(dsAvailablePortListKvaser, dsAvailablePortListNICAN);
	
	// Set the correct list into the local one
	if (rdbInterfaceSelector.number == 1)
		dsAvailablePortList = dsAvailablePortListNICAN;
	else
		dsAvailablePortList = dsAvailablePortListKvaser;

	// Check for same card type selection and set
	if (((rdbInterfaceSelector.number == 1) && ($sInterface == ELMB_CAN_CARD_NICAN)) ||
			((rdbInterfaceSelector.number == 0) && ($sInterface == ELMB_CAN_CARD_KVASER))) {
		dynAppend(dsAvailablePortList, $sPort);
	}
	
	// Sort the list and if 'our' port is contained, get the index
	dynSortAsc(dsAvailablePortList);
	iPos = dynContains(dsAvailablePortList, $sPort);
	if (iPos <= 0)
		iPos = 1;
	cmbPortSelector.items = dsAvailablePortList;
	cmbPortSelector.selectedPos(iPos);
	
	// Return to calling routine
	return;
}" 0
 2
"CBRef""1"
"EClose"E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
30 5
"frmCardAndPort"
""
1 10 138 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
6 0 0 0 0 0
EE E
1
1
LANG:1 0 
0
E E 0 1 1 0 1 E U  0 E 10 70 260 138
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 30 Interface Type and Port Number
30 8
"frmBusSpeed"
""
1 270 137 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
9 0 0 0 0 0
EE E
1
1
LANG:1 0 
0
E E 0 1 1 0 1 E U  0 E 270 70 430 137
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 17 Bus Speed (kbaud)
2 11
"lblTitle"
""
1 10 10 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
12 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
"main()
{
	dyn_string dsTmp;
	
	dsTmp = strsplit($sBusName, fwDevice_HIERARCHY_SEPARATOR);
	this.text = \"Change parameters for bus: \" + dsTmp[dynlen(dsTmp)];
}" 0
 E 0 1 1 0 1 E U  0 E 12 12 428 34
0 2 0 "s" 0 0 0 64 0 0  12 12
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-160-100-100-*-*-iso8859-1|-19,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 0 
2 15
"lblBits"
""
1 375 103 E E E 1 E 1 E N {0,0,0} E N "_3DFace" E E
 E E
15 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  1 E 377 105 407 120
0 2 0 "s" 0 0 0 64 0 0  377 105
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-12,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 6 bits/s
2 16
"lblComment"
""
1 10 42 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
16 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 12 44 111 62
0 2 0 "s" 0 0 0 64 0 0  12 44
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 7 Comment
13 0
"btnOk"
""
1 260 140 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
1 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
258 138 342 172
T 
1
LANG:1 2 OK
"main()
{
// Local Variables
// ---------------
	int iBusSpeed;
	
	string sInterfacePort;
	string sInterfaceCard;
	string sComment;
	
// Executable Code
// ---------------
	// Get information from panel
	iBusSpeed = cmbBusSpeedSelector.text;
	sInterfacePort = cmbPortSelector.text;
	sComment = txtComment.text;
	
	if (rdbInterfaceSelector.number == 1)
		sInterfaceCard = ELMB_CAN_CARD_NICAN;
	else
		sInterfaceCard = ELMB_CAN_CARD_KVASER;

	// Set information into DP
	dpSet($sBusName + \".interfacePort\", sInterfacePort,
				$sBusName + \".id\", sInterfaceCard,
				$sBusName + \".busSpeed\", iBusSpeed);
	// If comment is the same as full DP name, don't set it
	if (sComment != ($sBusName + \".\"))
	  dpSetComment($sBusName + \".\", sComment);
				
	// Return to calling routine
	PanelOff(myPanelName());
}" 0
 E E E
13 1
"btnClose"
""
1 350 140 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
2 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
348 138 432 172
T 
1
LANG:1 6 Cancel
"main()
{
	PanelOff(myPanelName());
}" 0
 E E E
22 12
"cmbPortSelector"
""
1 180 100 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
13 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-12,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
178 98 252 124
0
E
E
E
 0 0
19 13
"rdbInterfaceSelector"
""
1 20 88 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
14 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-12,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
18 86 162 130
2
T 
1
LANG:1 6 Kvaser
 1
1
LANG:1 0 
 E  E  0 0 0 0 0
T 
1
LANG:1 20 National Instruments
 0
1
LANG:1 0 
 E  E  0 0 0 0 0
 1
"main()
{
	if ($sInterface == ELMB_CAN_CARD_NICAN)
		this.number = 1;
	pnlDisplayAvailablePorts();
}
" 0

"main(int button)
{
	pnlDisplayAvailablePorts();
}" 0

22 14
"cmbBusSpeedSelector"
""
1 280 100 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
15 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-12,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
278 98 367 124
7
1
LANG:1 5 10000
 0
1
LANG:1 5 20000
 0
1
LANG:1 5 50000
 0
1
LANG:1 6 125000
 1
1
LANG:1 6 250000
 0
1
LANG:1 6 500000
 0
1
LANG:1 7 1000000
 0
"main()
{
	int iPos;
	
	switch ($iBusSpeed) {
		case 10000:
			iPos = 1;
			break;
		case 20000:
			iPos = 2;
			break;
		case 50000:
			iPos = 3;
			break;
		case 125000:
			iPos = 4;
			break;
		case 250000:
			iPos = 5;
			break;
		case 500000:
			iPos = 6;
			break;
		case 1000000:
			iPos = 7;
			break;
		default:
			DebugN(\"Unknown Bus Speed\");
	}
	
	this.selectedPos(iPos);
}" 0

E
E
 0 0
14 17
"txtComment"
""
1 130 40 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
17 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
128 38 432 65
3 "s" 0 0 0 0 0 0 
E
"main()
{
	// Get any existing comment
	langString lsComment = dpGetDescription($sBusName + \".\");
	this.text = lsComment;
}" 0

E
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
0
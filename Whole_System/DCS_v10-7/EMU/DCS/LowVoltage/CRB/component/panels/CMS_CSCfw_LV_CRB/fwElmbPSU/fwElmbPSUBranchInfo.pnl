V 10
1
LANG:1 8 (NoName)
PANEL,390 286 430 275 N "_3DFace" 1
"$sDpName"
EEE E E 1 -1 -1 0  10 210
"" 0 1
EE 2
"CBRef""1"
"EClose"E
""
NC
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
30 0
"frmBranchInfo"
""
1 10 240 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
1 0 0 0 0 0
EE E
1
1
LANG:1 0 
0
"main()
{
// Local Variables
// ---------------
	int iBranchNumber;
	int iSlotNumber;
	int i;
	
	string sPosition;
	string sBusDP;
	string sBusName;
	string sCANVoltsDPE;
	string sCANCurrentDPE;
	string sADVoltsDPE;
	string sADCurrentDPE;
	string sCrate;
	string sElmb;
	string sToolTip;
	string sSystem;
	
	dyn_string dsChannel;
	dyn_string dsTemp;

// Executable Code
// ---------------
	// Get all required information
	dpGet($sDpName + \".id\", iBranchNumber,
				$sDpName + \".slot\", iSlotNumber,
				$sDpName + \".position\", sPosition,
				$sDpName + \".bus\", sBusDP,
				$sDpName + \".CAN.volts\", sCANVoltsDPE,
				$sDpName + \".CAN.current\", sCANCurrentDPE,
				$sDpName + \".AD.volts\", sADVoltsDPE,
				$sDpName + \".AD.current\", sADCurrentDPE);
				
	// Set constant information into panel fields
	txtBranchNumber.text = iBranchNumber;
	txtSlotNumber.text = iSlotNumber;
	txtPositionInSlot.text = sPosition;
	
	// Get name of bus from DP name (if assigned)
	if (strlen(sBusDP) > 0) {
		dsTemp = strsplit(sBusDP, fwDevice_HIERARCHY_SEPARATOR);
		sSystem = dpSubStr(sBusDP, DPSUB_SYS);
		sBusName = sSystem + dsTemp[dynlen(dsTemp)];
		txtControlledBus.text = sBusName;
	} else {
		txtControlledBus.text = \"None assigned\";
	}
	
	// Get the crate DP and so find which ELMB is controlling it
	dsTemp = strsplit($sDpName, fwDevice_HIERARCHY_SEPARATOR);
	if (dynlen(dsTemp) == 3) {
		sCrate = dsTemp[1] + fwDevice_HIERARCHY_SEPARATOR + dsTemp[2];
		
		dpGet(sCrate + \".node\", sElmb);
		dsTemp = strsplit(sElmb, fwDevice_HIERARCHY_SEPARATOR);
		sElmb = dsTemp[dynlen(dsTemp)];
	
		// Get the channel ID(s) for the CAN voltage
		dsTemp = strsplit(sCANVoltsDPE, \".\");
		dpGet(dsTemp[1] + \".channel\", dsChannel);
		if (dynlen(dsChannel) > 1) {
			sprintf(sToolTip, \"%s channels %s\", sElmb, dsChannel[1]);
			for (i = 2; i <= dynlen(dsChannel); i++)
				sToolTip += \" && \" + dsChannel[i];
		} else if (dynlen(dsChannel) == 1) {
			sToolTip = sElmb + \" channel \" + dsChannel[1];
		} else {
			sToolTip = \"\";
		}
		lblCANVoltage.toolTipText = sToolTip;
	
		// Get the channel ID(s) for the CAN current
		dsTemp = strsplit(sCANCurrentDPE, \".\");
		dpGet(dsTemp[1] + \".channel\", dsChannel);
		if (dynlen(dsChannel) > 1) {
			sprintf(sToolTip, \"%s channels %s\", sElmb, dsChannel[1]);
			for (i = 2; i <= dynlen(dsChannel); i++)
				sToolTip += \" && \" + dsChannel[i];
		} else if (dynlen(dsChannel) == 1) {
			sToolTip = sElmb + \" channel \" + dsChannel[1];
		} else {
			sToolTip = \"\";
		}
		lblCANCurrent.toolTipText = sToolTip;
	
		// Get the channel ID(s) for the analog and digital voltage
		dsTemp = strsplit(sADVoltsDPE, \".\");
		dpGet(dsTemp[1] + \".channel\", dsChannel);
		if (dynlen(dsChannel) > 1) {
			sprintf(sToolTip, \"%s channels %s\", sElmb, dsChannel[1]);
			for (i = 2; i <= dynlen(dsChannel); i++)
				sToolTip += \" && \" + dsChannel[i];
		} else if (dynlen(dsChannel) == 1) {
			sToolTip = sElmb + \" channel \" + dsChannel[1];
		} else {
			sToolTip = \"\";
		}
		lblAnalogDigitalVoltage.toolTipText = sToolTip;
	
		// Get the channel ID(s) for the analog and digital current
		dsTemp = strsplit(sADCurrentDPE, \".\");
		dpGet(dsTemp[1] + \".channel\", dsChannel);
		if (dynlen(dsChannel) > 1) {
			sprintf(sToolTip, \"%s channels %s\", sElmb, dsChannel[1]);
			for (i = 2; i <= dynlen(dsChannel); i++)
				sToolTip += \" && \" + dsChannel[i];
		} else if (dynlen(dsChannel) == 1) {
			sToolTip = sElmb + \" channel \" + dsChannel[1];
		} else {
			sToolTip = \"\";
		}
		lblAnalogDigitalCurrent.toolTipText = sToolTip;
	}
	
	// Connect to each of the variable values
	dpConnect(\"cbkCANVolts\", sCANVoltsDPE);
	dpConnect(\"cbkCANCurrent\", sCANCurrentDPE);
	dpConnect(\"cbkADVolts\", sADVoltsDPE);
	dpConnect(\"cbkADCurrent\", sADCurrentDPE);

	// Return to calling routine
	return;
}

void cbkCANVolts(string argsDpe, float fValue)
{
// Local Variables
// ---------------
	string sValue;

// Executable Code
// ---------------
	// Format the value
	sprintf(sValue, \"%1.2f V\", fValue);
	
	// Display the value
	txtCANVoltage.text = sValue;

	// Return to calling routine
	return;
}

void cbkCANCurrent(string argsDpe, float fValue)
{
// Local Variables
// ---------------
	string sValue;

// Executable Code
// ---------------
	// Format the value
	sprintf(sValue, \"%1.2f A\", fValue);
	
	// Display the value
	txtCANCurrent.text = sValue;

	// Return to calling routine
	return;
}


void cbkADVolts(string argsDpe, float fValue)
{
// Local Variables
// ---------------
	string sValue;

// Executable Code
// ---------------
	// Format the value
	sprintf(sValue, \"%1.2f V\", fValue);
	
	// Display the value
	txtAnalogDigitalVoltage.text = sValue;

	// Return to calling routine
	return;
}


void cbkADCurrent(string argsDpe, float fValue)
{
// Local Variables
// ---------------
	string sValue;

// Executable Code
// ---------------
	// Format the value
	sprintf(sValue, \"%1.2f A\", fValue);
	
	// Display the value
	txtAnalogDigitalCurrent.text = sValue;

	// Return to calling routine
	return;
}" 0
 E 0 1 1 0 1 E U  0 E 10 40 420 240
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 26 Controlled Bus Information
2 1
"lblBranchNumber"
""
1 20 60 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
2 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 22 62 141 78
0 2 0 "s" 0 0 0 64 0 0  22 62
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 18 Branch/Bus number:
2 2
"lblSlotNumber"
""
1 20 90 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
3 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 22 92 128 108
0 2 0 "s" 0 0 0 64 0 0  22 92
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 18 Crate slot number:
2 4
"lblPositionInSlot"
""
1 20 120 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
5 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 22 122 148 138
0 2 0 "s" 0 0 0 64 0 0  22 122
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 23 Position in slot (A/B):
2 5
"lblControlledBus"
""
1 20 150 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
6 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 22 152 108 168
0 2 0 "s" 0 0 0 64 0 0  22 152
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 15 Controlled bus:
2 6
"lblCANVoltage"
""
1 20 180 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
7 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 22 182 98 198
0 2 0 "s" 0 0 0 64 0 0  22 182
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 12 CAN voltage:
2 7
"lblCANCurrent"
""
1 20 210 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
8 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 22 212 98 228
0 2 0 "s" 0 0 0 64 0 0  22 212
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 12 CAN current:
2 8
"lblAnalogDigitalVoltage"
""
1 180 180 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
9 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 182 182 338 198
0 2 0 "s" 0 0 0 64 0 0  182 182
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 27 Analog and Digital voltage:
2 9
"lblAnalogDigitalCurrent"
""
1 180 210 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
10 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 182 212 338 228
0 2 0 "s" 0 0 0 64 0 0  182 212
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 27 Analog and Digital current:
2 21
"txtBranchNumber"
""
1 150 60 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
22 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 152 62 218 78
0 2 0 "s" 0 0 0 64 0 0  152 62
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 0 
2 22
"txtSlotNumber"
""
1 150 90 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
23 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 152 92 218 108
0 2 0 "s" 0 0 0 64 0 0  152 92
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 0 
2 23
"txtPositionInSlot"
""
1 150 120 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
24 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 152 122 218 138
0 2 0 "s" 0 0 0 64 0 0  152 122
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 0 
2 24
"txtControlledBus"
""
1 150 150 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
25 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 152 152 408 168
0 2 0 "s" 0 0 0 64 0 0  152 152
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 0 
2 25
"txtCANVoltage"
""
1 100 180 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
26 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 102 182 168 198
0 2 0 "s" 0 0 0 64 0 0  102 182
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 0 
2 26
"txtCANCurrent"
""
1 100 210 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
27 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 102 212 168 228
0 2 0 "s" 0 0 0 64 0 0  102 212
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 0 
2 27
"txtAnalogDigitalVoltage"
""
1 340 180 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
28 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 342 182 408 198
0 2 0 "s" 0 0 0 64 0 0  342 182
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 0 
2 28
"txtAnalogDigitalCurrent"
""
1 340 210 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
29 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 342 212 408 228
0 2 0 "s" 0 0 0 64 0 0  342 212
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 0 
13 31
"cmdCrateDetails"
""
1 310 245 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
32 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
308 243 422 267
T 
1
LANG:1 18 Show Crate details
"main()
{
// Local Variables
// --------------

// Executable Code
// ---------------
	// Check whether to show or hide the crate details
	if (this.text == \"Show Crate details\") {
		this.text = \"Hide Crate details\";
		setPanelSize(myModuleName(), myPanelName(), FALSE, 429, 416);
		addSymbol(myModuleName(),
							myPanelName(),
							\"CMS_CSCfw_LV_CRB/fwElmbPSU/fwElmbPSUCrateInfo.pnl\",
							\"CrateDetails\",
							makeDynString(\"$sDpName:\" + $sDpName),
							0, 260,
							0.0, 1.0, 1.0);
							
	} else {
		this.text = \"Show Crate details\";
		removeSymbol(myModuleName(), myPanelName(), \"CrateDetails\");
		setPanelSize(myModuleName(), myPanelName(), FALSE, 429, 275);
	}
	
	// Return to calling routine
	return;
}" 0
 E E E
1 32 0 "" 0
0
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
3 0 "Group2"
"objects\\fwGeneral\\fwHelpButton.pnl" 794 10 T 33 1 0 1  -400 0  
1
"$sPanelRelativePath""fwElmbPSU/fwElmbPSUBranchInfo"
0
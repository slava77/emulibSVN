V 10
1
LANG:1 8 (NoName)
PANEL,542 498 132 265 N "_3DFace" 1
"$sDpName"
EEE E E 1 -1 -1 0  0 0
"" 0 1
EE 2
"CBRef""1"
"EClose"E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
2 11
"txtBranch"
""
1 10 230 E E E 1 E 1 E N "_WindowText" E N "Weiss" E E
 "main()
{
// Local Variables
// ---------------
	int iReturn;
	int iBranch;
	
	string sLabel;
	
	dyn_float df;
	
	dyn_string dsMenu;
	dyn_string ds;

// Executable Code
// ---------------
	// Create the dyn_string required for the popup menu
	dsMenu = makeDynString(	\"PUSH_BUTTON, Information, 1, 1\",
													\"PUSH_BUTTON, Calibration, 2, 1\",
													\"PUSH_BUTTON, Change Text, 3, 1\");/*,
													\"PUSH_BUTTON, Switch OFF, 2, 1\",
													\"PUSH_BUTTON, Show States, 3, 1\",
													\"CASCADE_BUTTON, Send Command, 1\",
													\"Send Command\",
													\"PUSH_BUTTON, Start, 4, 1\",
													\"PUSH_BUTTON, Stop, 5, 1\",
													\"PUSH_BUTTON, Reset, 6, 1\");*/

	// Display the popup menu
	if (popupMenu(dsMenu, iReturn) == 0) {
	
		// Action the required selection
		switch (iReturn) {
			case 1:	// Show information panel
//				dpGet($sDpName + \".power\", sPowerDpe);
//				dpSet(sPowerDpe, 0);
				ChildPanelOnCentral(\"CMS_CSCfw_LV_CRB/fwElmbPSU/fwElmbPSUBranchInfo.pnl\",
														\"Branch Information\",
														makeDynString(\"$sDpName:\" + $sDpName));
				break;
			case 2:	// Show calibration panel
				ChildPanelOnCentral(\"CMS_CSCfw_LV_CRB/fwElmbPSU/objects/fwElmbPSUBranchCalibrationRef.pnl\",
														\"Branch Calibration\",
														makeDynString(\"$sDpName:\" + $sDpName));
				break;
			case 3:	// Change Text displayed
				sLabel = this.text;
				ChildPanelOnCentralReturn(\"vision/MessageInput\",
																	\"Change Text\",
																	makeDynString(\"$1:Please enter the text to be displayed for this branch\", \"$2:%s\", \"$3:\" + sLabel),
																	df, ds);
				sLabel = ds[1];
				dpSet($sDpName + \".label\", sLabel);
	
				// Format the caption
				if (strlen(sLabel) == 0) {
					dpGet($sDpName + \".id\", iBranch);
					sprintf(sLabel, \"BRANCH %d\", iBranch);
				}
				this.text = sLabel;
				break;
/*
			case 2:	// Switch OFF power
				dpGet($sDpName + \".power\", sPowerDpe);
				dpSet(sPowerDpe, 1);
				break;
			case 3:	// Display panel showing the states of each ELMB on the bus
				break;
			case 4:	// Send NMT Start command to bus
				dpGet($sDpName + \".bus\", sControlledBus);
				dpSet(sControlledBus + \".management\", 1);
				break;
			case 5:	// Send NMT Stop command to bus
				dpGet($sDpName + \".bus\", sControlledBus);
				dpSet(sControlledBus + \".management\", 2);
				break;
			case 6:	// Send NMT Reset command to bus
				dpGet($sDpName + \".bus\", sControlledBus);
				dpSet(sControlledBus + \".management\", 129);
				break;
*/
		}
	}

	// Return to calling routine
	return;
}" 0
 E
3 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
"main()
{
// Local Variables
// ---------------
	int iBranch;
	
	string sCaption;
	
// Executable Code
// ---------------
	// Get the branch ID
	dpGet($sDpName + \".id\", iBranch,
				$sDpName + \".label\", sCaption);
	
	// Format the caption
	if (strlen(sCaption) == 0)
		sprintf(sCaption, \"BRANCH %d\", iBranch);
	
	// Display the text
	this.text = sCaption;
	
	// Return to calling routine
	return;
}" 0
 E 0 5 1 0 1 E U  1 E 12 232 118 248
1 2 0 "s" 0 0 0 65 0 0  12 232
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-130-100-100-*-*-iso8859-1|-15,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 6 BRANCH
6 37
"Border1"
""
1 8 253 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
9 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 8 10 122 253
1 38 4 "" 0
0
1 39 7 "" 0
0
1 40 7 "" 1
0
1 41 7 "" 2
0
1 42 7 "" 4
0
1 43 8 "" 0
0
1 44 8 "" 1
0
1 45 8 "" 2
0
1 46 8 "" 4
0
2 68
"txtPowerOnOff"
""
1 10 204 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
17 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
"main()
{
// Local Variables
// ---------------
	string sPowerDpe;

// Executable Code
// ---------------
	// Get the DPE of the element to connect to
	dpGet($sDpName + \".power\", sPowerDpe);
	
	// Connect to the required element
  dpConnect(\"cbkPowerOnOff\", sPowerDpe);
	
	// Return to calling routine
	return;
}

void cbkPowerOnOff(string sPowerDpe, int iPower)
{
// Local Variables
// ---------------
// None

// Executable Code
// ---------------
	// Check if the power is on or off
	if (iPower == EPSU_POWER_ON_VALUE) {
		// Power is on
		this.foreCol = \"FwStateOKPhysics\";
		this.text = \"Power ON\";
	} else {
		// Power is off
		this.foreCol = \"FwStateOKNotPhysics\";
		this.text = \"Power OFF\";
	}

	// Return to calling routine
	return;
}" 0
 E 0 1 1 0 1 E U  0 E 12 206 118 222
0 2 0 "s" 0 0 0 65 0 0  12 206
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 0 
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
3 4 ""
"CMS_CSCfw_LV_CRB\\fwElmbPSU\\objects\\fwElmbPSUBurndyRef.pnl" 10 100 T 12 1 0 1  54 77  
1
"$sDpName""$sDpName"
3 7 ""
"CMS_CSCfw_LV_CRB\\fwElmbPSU\\objects\\fwElmbPSULedRef.pnl" 60 100 T 15 1 0 1  5 -45  
2
"$sDpName""$sDpName"
"$sPower""\"CAN\""
3 8 ""
"CMS_CSCfw_LV_CRB\\fwElmbPSU\\objects\\fwElmbPSULedRef.pnl" 10 100 T 16 1 0 1  55 25  
2
"$sDpName""$sDpName"
"$sPower""\"AD\""
0
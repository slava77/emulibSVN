V 11
1
LANG:1 29 Xmas Monitoring Control Panel
PANEL,-1 -1 400 408 N "_3DFace" 0
"main()
{
  emuui_init();
  
  // ==== access control ====
  if (isFunctionDefined(\"fwAccessControl_setupPanel\")) {
    initAcConstants();
    dyn_string ex;
    fwAccessControl_setupPanel(\"accessPrivilegesChangedCB\", ex);
    if (emu_checkException(ex)) { return; }
    fwCU_connectOperationMode(\"accessPrivilegesChangedCB\", \"CMS_CSC::CMS_CSC\");
  }
  //=========================
  
  dyn_string ex;
  int minMidLayerNumP = 10,  // used to get the lowest mid. layer num for plus side
      maxMidLayerNumM = -1; // used to get the highest mid. layer num for minus side
  
  dyn_string xmasControlDPs = emuui_getDpNames(\"xmas_control\", emuui_dummyMapping, ex);
  if (emu_checkException(ex)) { return; }
  for (int i=1; i <= dynlen(xmasControlDPs); i++) {
    // connect the DPs to listen for last command
    string side = emuui_getMappingValue(\"sysNameToSide\", emuui_getSystemName(xmasControlDPs[i]), ex);
    if (emu_checkException(ex)) { return; }
    dpConnect(\"xmasControlUpdated\" + side + \"CB\", true, xmasControlDPs[i]);
    
    // check if the project is valid, if so, then assign it for a control DP
    dyn_string validDps = dpNames(dpSubStr(xmasControlDPs[i], DPSUB_SYS) + \"CMS_CSC_HV_CC_*\",\"MUDCS_STRING\");
    for (int j=1; j <= dynlen(validDps); j++) {
      string isValid;
      dpGet(validDps[j] + \".value\", isValid);
      if (isValid == \"valid\") {
        dyn_string split = strsplit(validDps[j], \"_\");
        int sysNum = split[dynlen(split)];
        if (side == \"P\") {
          if (sysNum < minMidLayerNumP) {
            controlSystemPlus = dpSubStr(xmasControlDPs[i], DPSUB_SYS);
            btnStopPlus.enabled = true;
            btnResumePlus.enabled = true;
            minMidLayerNumP = sysNum;
          }
        } else if (side == \"M\") {
          if (sysNum > maxMidLayerNumM) {
            controlSystemMinus = dpSubStr(xmasControlDPs[i], DPSUB_SYS);
            btnStopMinus.enabled = true;
            btnResumeMinus.enabled = true;
            maxMidLayerNumM = sysNum;
          }
        }
        break;
      }
    }
  }
  
  if (controlSystemPlus == \"\") {
    lblPlusNotValid.visible = true;
  }
  if (controlSystemMinus == \"\") {
    lblMinusNotValid.visible = true;
  }
  
  emu_info(\"Control System for Plus: \" + controlSystemPlus);
  emu_info(\"Control System for Minus: \" + controlSystemMinus);
}

/** initialize constants required for access control - basically just fill in the arrays of control and expert control button names. */
void initAcConstants() {
  controlButtons = makeDynString(\"btnStopPlus\", \"btnResumePlus\",    // stop/resume plus side
                                 \"btnStopMinus\", \"btnResumeMinus\"); // stop/resume minus side
  expertControlButtons = makeDynString();
}
" 0
 E E E E 1 -1 -1 0  100 30
""0  1
E "// Common libs
#uses \"CMS_CSC_common/emu_common.ctl\"
#uses \"CMS_CSC_common/emu_accessControl.ctl\"

/** for access control - arrays of control and expert control buttons which should be under access control */
dyn_string controlButtons;
dyn_string expertControlButtons;

string controlSystemPlus, controlSystemMinus;

void xmasControlUpdatedPCB(dyn_string dp, dyn_string command) {
  lblLastActionPlus.text = getCommandMeaning(command);
  lblLastActionTimePlus.text = emuui_getLastUpdateTime(dp);
}

void xmasControlUpdatedMCB(dyn_string dp, dyn_string command) {
  lblLastActionMinus.text = getCommandMeaning(command);
  lblLastActionTimeMinus.text = emuui_getLastUpdateTime(dp);
}

string getCommandMeaning(string command) {
  if (strpos(command, \"SLOW_CONTROL\") >= 0) {
    dyn_string commandSplit = strsplit(command, \"_\");
    if (dynlen(commandSplit) > 0) {
      return commandSplit[1];
    }
  }
  return command;
}

/** This function is called whenever the user privileges change and just passes that to emu_enableDisableControl() which takes care of enabling/disabling buttons. */
void accessPrivilegesChangedCB(string dummy1, string dummy2) {
  emu_enableDisableControl(\"CMS_CSC::CMS_CSC\", controlButtons, true, \"lblNoControl\", expertControlButtons, true);
}
" 0
 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
2 0
"lblTitle"
""
1 0 10 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
0 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  0 E 0 10 395 28
0 2 2 "0s" 0 0 0 65 0 0  0 10 1
1
LANG:1 26 Arial,11,-1,5,75,0,0,0,0,0
0 1
LANG:1 29 Xmas Monitoring Control Panel
2 1
"lblTitle2"
""
1 0 30 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
1 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  0 E 0 30 395 45
0 2 2 "0s" 0 0 0 65 0 0  0 30 1
1
LANG:1 25 Arial,8,-1,5,50,0,0,0,0,0
0 1
LANG:1 21 Expert operation only
30 2
"framePlusSide"
""
1 20 73 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
2 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 0 1 0 1 E 2.25 0 0.7614213197969543 -25 14.41624365482233 0 E 20 73 181 271
1
LANG:1 25 Arial,9,-1,5,50,0,0,0,0,0
0 1
LANG:1 9 Plus Side
30 4
"frameMinusSide"
""
1 20 73 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
4 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 0 1 0 1 E 2.25 0 0.7614213197969543 -25 184.4162436548223 0 E 20 73 181 271
1
LANG:1 25 Arial,9,-1,5,50,0,0,0,0,0
0 1
LANG:1 10 Minus Side
13 5
"btnStopPlus"
""
1 30 150 E E E 0 E 1 E N "_ButtonText" E N "_Button" E E
 E E
5 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 25 Arial,9,-1,5,50,0,0,0,0,0
0  28 148 372 175

T 
1
LANG:1 25 Stop Plus Side Monitoring
"main()
{
  string last_command;
  dpGet(controlSystemPlus + \"STOP_SLOW_CONTROL.value\", last_command);
  
  if(strpos(last_command, \"PREPARE_POWER_UP\") < 0){
    dpSet(controlSystemPlus + \"LV_1_COM.command\", \"STOP_SLOW_CONTROL\"); 
    dpSet(controlSystemPlus + \"STOP_SLOW_CONTROL.value\", \"STOP_SLOW_CONTROL\"); 
    dpSet(controlSystemPlus + \"SPECIAL_STOP_SC.value\", \"STOP\");
    emu_info(\"Xmas monitoring STOPPED on PLUS side\");
  } else {
    mudcsDebug(\"LV IS PREPARING TO POWER UP: \\n TRY TO DO IT LATER (in 1 minute)\");
  }
}" 0
 E E E
2 6
"lblForLastActionPlus"
""
1 30 100 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
6 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  0 E 30 100 95 115
0 2 2 "0s" 0 0 0 192 0 0  30 100 1
1
LANG:1 25 Arial,9,-1,5,50,0,0,0,0,0
0 1
LANG:1 12 Last Action:
2 7
"lblLastActionPlus"
""
1 100 100 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
7 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  0 E 100 100 151 115
0 2 2 "0s" 0 0 0 192 0 0  100 100 1
1
LANG:1 25 Arial,9,-1,5,50,0,0,0,0,0
0 1
LANG:1 7 unknown
2 8
"lblForLastActionMinus"
""
1 30 270 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
8 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  0 E 30 270 95 285
0 2 2 "0s" 0 0 0 192 0 0  30 270 1
1
LANG:1 25 Arial,9,-1,5,50,0,0,0,0,0
0 1
LANG:1 12 Last Action:
2 9
"lblLastActionMinus"
""
1 100 270 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
9 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  0 E 100 270 151 285
0 2 2 "0s" 0 0 0 192 0 0  100 270 1
1
LANG:1 25 Arial,9,-1,5,50,0,0,0,0,0
0 1
LANG:1 7 unknown
13 10
"btnResumePlus"
""
1 30 180 E E E 0 E 1 E N "_ButtonText" E N "_Button" E E
 E E
10 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 25 Arial,9,-1,5,50,0,0,0,0,0
0  28 178 372 205

T 
1
LANG:1 27 Resume Plus Side Monitoring
"main()
{
  string last_command;
  dpGet(controlSystemPlus + \"STOP_SLOW_CONTROL.value\", last_command);
  
  if(strpos(last_command, \"PREPARE_POWER_UP\") < 0){
    dpSetWait(controlSystemPlus + \"LV_1_COM.command\", \"EXIT_SLOW_CONTROL\");
    dpSetWait(controlSystemPlus + \"LV_1_COM.command\", \"RESUME_SLOW_CONTROL\"); //for x2p
    dpSet(controlSystemPlus + \"STOP_SLOW_CONTROL.value\", \"RESUME_SLOW_CONTROL\");
    dpSet(controlSystemPlus + \"SPECIAL_STOP_SC.value\", \"RESUME\");
    emu_info(\"Xmas monitoring RESUMED on PLUS side\");
  } else {
    mudcsDebug(\"LV IS PREPARING TO POWER UP: \\n TRY TO DO IT LATER (in 1 minute)\");
  }
}" 0
 E E E
13 11
"btnStopMinus"
""
1 30 320 E E E 0 E 1 E N "_ButtonText" E N "_Button" E E
 E E
11 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 25 Arial,9,-1,5,50,0,0,0,0,0
0  28 318 372 345

T 
1
LANG:1 26 Stop Minus Side Monitoring
"main()
{
  string last_command;
  dpGet(controlSystemMinus + \"STOP_SLOW_CONTROL.value\", last_command);
  
  if(strpos(last_command, \"PREPARE_POWER_UP\") < 0){
    dpSet(controlSystemMinus + \"LV_1_COM.command\", \"STOP_SLOW_CONTROL\");
    dpSet(controlSystemMinus + \"STOP_SLOW_CONTROL.value\", \"STOP_SLOW_CONTROL\"); 
    dpSet(controlSystemMinus + \"SPECIAL_STOP_SC.value\", \"STOP\");
    emu_info(\"Xmas monitoring STOPPED on MINUS side\");
  } else {
    mudcsDebug(\"LV IS PREPARING TO POWER UP: \\n TRY TO DO IT LATER (in 1 minute)\");
  }
}" 0
 E E E
13 12
"btnResumeMinus"
""
1 30 350 E E E 0 E 1 E N "_ButtonText" E N "_Button" E E
 E E
12 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 25 Arial,9,-1,5,50,0,0,0,0,0
0  28 348 372 375

T 
1
LANG:1 28 Resume Minus Side Monitoring
"main()
{
  string last_command;
  dpGet(controlSystemMinus + \"STOP_SLOW_CONTROL.value\", last_command);
  
  if(strpos(last_command, \"PREPARE_POWER_UP\") < 0){
    dpSetWait(controlSystemMinus + \"LV_1_COM.command\", \"EXIT_SLOW_CONTROL\");
    dpSetWait(controlSystemMinus + \"LV_1_COM.command\", \"RESUME_SLOW_CONTROL\"); //for x2p
    dpSet(controlSystemMinus + \"STOP_SLOW_CONTROL.value\", \"RESUME_SLOW_CONTROL\");
    dpSet(controlSystemMinus + \"SPECIAL_STOP_SC.value\", \"RESUME\");
    emu_info(\"Xmas monitoring RESUMED on MINUS side\");
  } else {
    mudcsDebug(\"LV IS PREPARING TO POWER UP: \\n TRY TO DO IT LATER (in 1 minute)\");
  }
}" 0
 E E E
2 13
"lblForLastActionTimePlus"
""
1 30 120 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
13 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  0 E 30 120 158 135
0 2 2 "0s" 0 0 0 192 0 0  30 120 1
1
LANG:1 25 Arial,9,-1,5,50,0,0,0,0,0
0 1
LANG:1 22 Last Action Timestamp:
2 14
"lblLastActionTimePlus"
""
1 160 120 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
14 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  0 E 160 120 218 135
0 2 2 "0s" 0 0 0 192 0 0  160 120 1
1
LANG:1 25 Arial,9,-1,5,50,0,0,0,0,0
0 1
LANG:1 9 timestamp
2 17
"lblForLastActionTimeMinus"
""
1 30 290 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
17 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  0 E 30 290 158 305
0 2 2 "0s" 0 0 0 192 0 0  30 290 1
1
LANG:1 25 Arial,9,-1,5,50,0,0,0,0,0
0 1
LANG:1 22 Last Action Timestamp:
2 18
"lblLastActionTimeMinus"
""
1 160 290 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
18 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  0 E 160 290 218 305
0 2 2 "0s" 0 0 0 192 0 0  160 290 1
1
LANG:1 25 Arial,9,-1,5,50,0,0,0,0,0
0 1
LANG:1 9 timestamp
2 19
"lblPlusNotValid"
""
1 100 70 E E E 1 E 0 E N "_WindowText" E N "FwStateAttention3" E E
 E E
19 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 100 70 350 85
0 2 2 "0s" 0 0 0 192 0 0  100 70 1
1
LANG:1 25 Arial,9,-1,5,50,0,0,0,0,0
0 1
LANG:1 49 Plus side DCS is not ready for control, try later
2 20
"lblMinusNotValid"
""
1 100 240 E E E 1 E 0 E N "_WindowText" E N "FwStateAttention3" E E
 E E
20 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 100 240 359 255
0 2 2 "0s" 0 0 0 192 0 0  100 240 1
1
LANG:1 25 Arial,9,-1,5,50,0,0,0,0,0
0 1
LANG:1 50 Minus side DCS is not ready for control, try later
2 21
"lblNoControl"
""
1 625 -391 E E E 1 E 1 E N "_3DText" E N "_Window" E E
 E E
21 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 0 0 0 1 E U  1 E 97 47 298 66
1 2 2 "0s" 0 0 0 192 0 0  97 47 1
1
LANG:1 38 Helvetica [Adobe],-1,14,5,50,0,0,0,0,0
0 1
LANG:1 32 You don't have control privilege
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
0

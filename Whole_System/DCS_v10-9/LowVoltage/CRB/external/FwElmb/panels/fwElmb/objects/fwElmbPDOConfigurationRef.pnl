V 10
1
LANG:1 8 (NoName)
PANEL,394 316 409 333 N "_3DFace" 3
"$bEdit"
"$sDirection"
"$sDpName"
"main()
{
// Local Variables
// ---------------
	bool bEdit;
	bool bAll;
	bool bMuxed = true;
	
	int iDataByte;
	int iMuxByte;
	int iTimesMuxed;
	int iNumber;
	int iPos;
	
	string sNodeID;
	string sOPCItem;
	string sDirection;
	string sProfile;
	string sDataType;
	string sTemp;
	string sDpName;
	
	dyn_string dsItems;
	
// Executable Code
// ---------------
	// Check if a PDO is being edited or created
	if (isDollarDefined(\"$bEdit\")) {
		bEdit = $bEdit;
		if (bEdit) {
			lblPrefixInfo.visible = false;
			txtItemName.enabled = false;
			sDpName = $sDpName;
		} else {
			lblPrefixInfo.visible = true;
			txtItemName.enabled = true;
		}
	}
	
	// Check if a direction has been given (therefore don't allow any changes)
	if (isDollarDefined(\"$sDirection\")) {
		if ($sDirection == \"IN\") {
			radDirection.number = 0;
			radDirection.enabled = false;
		 } else if ($sDirection == \"OUT\") {
			radDirection.number = 1;
			radDirection.enabled = false;
		}
	}
	
	if (bEdit) {
		// Get all data from the DP
		dpGet(sDpName + \".cobid\", sNodeID,
					sDpName + \".name\", sOPCItem,
					sDpName + \".direction\", sDirection,
					sDpName + \".profile\", sProfile,
					sDpName + \".dataType\", sDataType,
					sDpName + \".dataByte\", iDataByte,
					sDpName + \".mux.muxByte\", iMuxByte,
					sDpName + \".mux.timesMuxed\", iTimesMuxed,
					sDpName + \".mux.all\", bAll,
					sDpName + \".mux.number\", iNumber);
					
		// Enter data into panel
		txtCobId.text = sNodeID;
		txtItemName.text = sOPCItem;
		
		if (radDirection.enabled) {
			if (sDirection == \"OUT\")
				radDirection.number = 1;
		}
			
		switch (sProfile) {
			case \"404\":
				radProfile.number = 1;
				break;
			case \"LMB\":
				radProfile.number = 2;
				break;
			default:
				radProfile.number = 0;
				bMuxed = false;
				break;
		}
		
		dsItems = cmbDataType.items;
		iPos = dynContains(dsItems, sDataType);
		cmbDataType.selectedPos = iPos;
		sTemp = iDataByte;
		spnDataByte.text = sTemp;
		
		if (bMuxed) {
			sTemp = iMuxByte;
			spnMultiplexByte.text = sTemp;
			txtTimesMultiplexed.text = iTimesMuxed;
			if (bAll) {
				chkMultiplexAll.state(0) = true;
			} else {
				chkMultiplexAll.state(0) = false;
				sTemp = iNumber;
				spnMultiplexNumber.text = sTemp;
			}
		}
	}
					
	// Update all other panel controls
	modUpdatePanel();
	
	// Return to calling routine
	return;
}" 0
"main()
{
	int i;
}" 0
E E E 1 0 0 0  10 10
"" 0 1
E"void modUpdatePanel()
{
// Local Variables
// ---------------
	bool bMultiplexAll;
	
	int iProfile;
	int iTimesMultiplexed;
	int iDataSize;
	
	string sTemp;

// Executable Code
// ---------------
	// Get all data from the panel
	bMultiplexAll = chkMultiplexAll.state(0);
	iProfile = radProfile.number;
	sTemp = txtTimesMultiplexed.text;
	iTimesMultiplexed = sTemp;
	sTemp = cmbDataType.selectedText;
	switch (sTemp) {
		case \"VT_BOOL\":
			iDataSize = 1;
			break;
		case \"VT_I1\":
			iDataSize = 8;
			break;
		case \"VT_I2\":
		case \"VT_UI2\":
			iDataSize = 16;
			break;
		case \"VT_I4\":
		case \"VT_UI4\":
		case \"VT_R4\":
			iDataSize = 32;
			break;
		case \"VT_I8\":
		case \"VT_UI8\":
		case \"VT_R8\":
			iDataSize = 64;
			break;
		default:
			iDataSize = 8;
			break;
	}
	
	// Set controls firstly for profile
	switch (iProfile) {
		case 0:	// Profile 401, no multiplexing
			// Disable all multiplex controls
			frmMultiplex.enabled = false;
			lblMultiplexByte.enabled = false;
			spnMultiplexByte.enabled = false;
			lblTimesMultiplexed.enabled = false;
			txtTimesMultiplexed.enabled = false;
			Border1.enabled = false;
			chkMultiplexAll.enabled = false;
			lblMultiplexNumber.enabled = false;
			spnMultiplexNumber.enabled = false;
			break;
		default: // Profile 404 or LMB, multiplexed
			// Enable all multiplex controls
			frmMultiplex.enabled = true;
			lblMultiplexByte.enabled = true;
			spnMultiplexByte.enabled = true;
			lblTimesMultiplexed.enabled = true;
			txtTimesMultiplexed.enabled = true;
			Border1.enabled = true;
			chkMultiplexAll.enabled = true;
			if (bMultiplexAll) {
				lblMultiplexNumber.enabled = false;
				spnMultiplexNumber.enabled = false;
			} else {
				lblMultiplexNumber.enabled = true;
				spnMultiplexNumber.enabled = true;
				
				// Set limits on spin button for multiplex number
				spnMultiplexNumber.sbMaximum = ((iTimesMultiplexed < 1) ? 0 : (iTimesMultiplexed - 1));
			}
			break;
	}
	
	// Set limits on data start byte from data size
	spnDataByte.sbMaximum = ((iDataSize < 8) ? 7 : (8 - (iDataSize / 8)));

	// Return to calling routine
	return;
}
" 0
 2
"CBRef""1"
"EClose""main()
{
	int i;
}" 0

""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
2 0
"lblCobId"
""
1 10 10 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
1 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 12 12 58 28
0 2 0 "s" 0 0 0 64 0 0  12 12
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 7 COB-ID:
2 1
"lblNodeIdPlus"
""
1 150 10 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
2 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 152 12 218 28
0 2 0 "s" 0 0 0 64 0 0  152 12
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 9 Node ID +
30 4
"frmProfile"
""
1 90 160 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
5 0 0 0 0 0
EE E
1
1
LANG:1 0 
0
E E 0 1 1 0 1 E U  0 E 90 70 170 160
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 8 Profile:
30 6
"frmDirection"
""
1 10 160 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
7 0 0 0 0 0
EE E
1
1
LANG:1 0 
0
E E 0 1 1 0 1 E U  0 E 10 70 80 160
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 10 Direction:
30 8
"frmMultiplex"
""
1 180 160 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
9 0 0 0 0 0
EE E
1
1
LANG:1 0 
0
E E 0 1 1 0 1 E U  0 E 180 70 400 160
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 13 Multiplexing:
2 10
"lblMultiplexByte"
""
1 190 90 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
11 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 192 92 278 108
0 2 0 "s" 0 0 0 64 0 0  192 92
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 15 Multiplex Byte:
2 12
"lblTimesMultiplexed"
""
1 190 120 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
13 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 192 122 308 138
0 2 0 "s" 0 0 0 64 0 0  192 122
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 18 Times Multiplexed:
2 14
"lblItemName"
""
1 10 40 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
15 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 12 42 148 58
0 2 0 "s" 0 0 0 64 0 0  12 42
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 21 OPC Item Name/Prefix:
2 17
"lblDataType"
""
1 20 190 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
18 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 22 192 88 208
0 2 0 "s" 0 0 0 64 0 0  22 192
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 10 Data Type:
30 18
"frmDataValue"
""
1 10 289 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
19 0 0 0 0 0
EE E
1
1
LANG:1 0 
0
E E 0 1 1 0 1 E U  0 E 10 170 400 290
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 5 Data:
2 19
"lblDataStartIndex"
""
1 240 190 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
20 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 242 192 318 208
0 2 0 "s" 0 0 0 64 0 0  242 192
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 13 Data at Byte:
2 21
"lblMultiplexNumber"
""
1 20 250 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
22 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 22 252 128 268
0 2 0 "s" 0 0 0 64 0 0  22 252
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 17 Multiplex Number:
2 26
"lblHex"
""
1 280 10 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
27 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 282 12 318 28
0 2 0 "s" 0 0 0 64 0 0  282 12
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 6 (Hex.)
2 31
"lblPrefixInfo"
""
1 280 36 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
32 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 282 38 398 64
0 2 0 "s" 0 0 0 64 0 0  282 38
 2
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 23 This cannot be modified
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 12 once applied
1 32 0 "" 0
0
14 2
"txtCobId"
""
1 220 10 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
3 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
218 8 272 35
3 "3s" 3 0 0 0 0 0 
E
E
E
19 5
"radProfile"
""
1 100 90 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
6 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
98 88 162 152
3
T 
1
LANG:1 3 401
 1
1
LANG:1 0 
 E  E  0 0 0 0 0
T 
1
LANG:1 3 404
 0
1
LANG:1 0 
 E  E  0 0 0 0 0
T 
1
LANG:1 3 LMB
 0
1
LANG:1 0 
 E  E  0 0 0 0 0
 1
E
"main(int button)
{
// Local Variables
// ---------------

// Executable Code
// ---------------
	modUpdatePanel();

	// Return to calling routine
	return;
}" 0

19 7
"radDirection"
""
1 20 90 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
8 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
18 88 72 152
2
T 
1
LANG:1 2 IN
 1
1
LANG:1 0 
 E  E  0 0 0 0 0
T 
1
LANG:1 3 OUT
 0
1
LANG:1 0 
 E  E  0 0 0 0 0
 1
E
E
21 11
"spnMultiplexByte"
""
1 310 90 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
12 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
308 88 372 115
0
E
"main()
{
// Local Variables
// ---------------

// Executable Code
// ---------------
	modUpdatePanel();

	// Return to calling routine
	return;
}" 0

E

N 0 7 1 0 0 1
14 13
"txtTimesMultiplexed"
""
1 310 120 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
14 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
308 118 372 145
3 "3d" 3 0 0 0 0 0 
E
E
"main()
{
// Local Variables
// ---------------

// Executable Code
// ---------------
	modUpdatePanel();

	// Return to calling routine
	return;
}" 0

14 15
"txtItemName"
""
1 150 40 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
16 0 0 0 0 0
EE E
0
1
LANG:1 41 Only alpha-numeric and underscore allowed
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
148 38 272 65
3 "s" 0 0 0 0 0 0 
E
E
E
22 16
"cmbDataType"
""
1 140 190 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
17 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
138 188 232 215
10
1
LANG:1 7 VT_BOOL
 1
1
LANG:1 5 VT_I1
 0
1
LANG:1 5 VT_I2
 0
1
LANG:1 6 VT_UI2
 0
1
LANG:1 5 VT_I4
 0
1
LANG:1 6 VT_UI4
 0
1
LANG:1 5 VT_R4
 0
1
LANG:1 5 VT_I8
 0
1
LANG:1 6 VT_UI8
 0
1
LANG:1 5 VT_R8
 0
E
"main()
{
// Local Variables
// ---------------

// Executable Code
// ---------------
	modUpdatePanel();

	// Return to calling routine
	return;
}" 0

E
 0 0
21 20
"spnDataByte"
""
1 330 190 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
21 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
328 188 392 215
0
E
E
E

N 0 7 1 0 0 1
21 22
"spnMultiplexNumber"
""
1 140 250 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
23 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
138 248 202 275
0
E
E
E

N 0 100 1 0 0 1
20 23
"chkMultiplexAll"
""
1 20 220 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
24 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
18 218 132 242
1
T 
1
LANG:1 14 Multiplex All?
 1
1
LANG:1 0 
 E  E  0 0 0 0 0
1
E E 
E"main(int button, bool state)
{
// Local Variables
// ---------------

// Executable Code
// ---------------
	modUpdatePanel();
	
	// Return to calling routine
	return;
}" 0
13 24
"cmdOK"
""
1 270 300 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
25 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
268 298 332 325
T 
1
LANG:1 2 OK
"main()
{
// Local Variables
// ---------------
	bool bAll;
	bool bEdit = false;
	bool bCreate = false;
	
	int iDataByte;
	int iMuxByte;
	int iTimesMuxed;
	int iNumber;
	int iTemp;
	int iLen;
	
	string sCobID;
	string sOPCItem;
	string sDirection;
	string sProfile;
	string sDataType;
	string sTemp;
	string sDpName;

// Executable Code
// ---------------
	// Get required information from panel
	sCobID = txtCobId.text;
	iLen = strlen(sCobID);
	
	// Get $params
	bEdit = $bEdit;
	if (bEdit)
		sDpName = $sDpName;
	
	// Check this is a valid hex value
	sscanf(sCobID, \"%x\", iTemp);
	sprintf(sTemp, \"%0\" + iLen + \"x\", iTemp);
	if (sTemp != sCobID) {
		ChildPanelOnCentral(\"vision/MessageInfo1\",
												\"Warning\",
												makeDynString(\"COB-ID '\" + sCobID + \"' is not a valid hexadecimal value\"));
		return;
	}
	
	// Need to check this value
	sOPCItem = txtItemName.text;
	
	// Check OPC item as sensor prefix
	if (!bEdit) {
		if (!fwElmb_checkSensorPrefix(sOPCItem)) {
			ChildPanelOnCentral(\"vision/MessageInfo1\",
													\"Warning\",
													makeDynString(\"OPC item '\" + sOPCItem + \"' is reserved for an existing raw sensor and cannot be used\"));
			return;
		}
	}
	
	// Get data information
	iTemp = radDirection.number;
	if (iTemp == 1)
		sDirection = \"OUT\";
	else
		sDirection = \"IN\";
	iTemp = radProfile.number;
	if (iTemp == 1)
		sProfile = \"404\";
	else if (iTemp == 2)
		sProfile = \"LMB\";
	else
		sProfile = \"401\";
	if (sProfile != \"401\") {
		// PDO is multiplexed, so get information
		sTemp = spnMultiplexByte.text;
		iMuxByte = sTemp;
		sTemp = txtTimesMultiplexed.text;
		iTimesMuxed = sTemp;
	}
	sDataType = cmbDataType.text;
	sTemp = spnDataByte.text;
	iDataByte = sTemp;
	
	// Get multiplex information
	if (chkMultiplexAll.state(0)) {
		iNumber = 0;
		bAll = true;
	} else {
		bAll = false;
		sTemp = spnMultiplexNumber.text;
		iNumber = sTemp;
	}
	
	if ((strlen(sDpName) > 0) && bEdit) {
		if (!dpExists(sDpName))
			bCreate = true;
	} else {
		// Create DP name
		sDpName = \"fwElmbPDO\" + sOPCItem + \"Info\";
		bCreate = true;
	}
	
	if (bCreate)
		dpCreate(sDpName, ELMB_PDO_INFO_TYPE_NAME);
	
	// Enter data into correct datapoint
	dpSet(sDpName + \".cobid\", sCobID,
				sDpName + \".name\", sOPCItem,
				sDpName + \".direction\", sDirection,
				sDpName + \".profile\", sProfile,
				sDpName + \".dataType\", sDataType,
				sDpName + \".dataByte\", iDataByte,
				sDpName + \".mux.muxByte\", iMuxByte,
				sDpName + \".mux.timesMuxed\", iTimesMuxed,
				sDpName + \".mux.all\", bAll,
				sDpName + \".mux.number\", iNumber);
		
	// Close panel
  PanelOffReturn(makeDynFloat(1.0), makeDynString(sOPCItem));
}
" 0
 E E E
13 25
"cmdCancel"
""
1 340 300 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
26 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
338 298 402 325
T 
1
LANG:1 6 Cancel
"main()
{
	// Close panel
  PanelOffReturn(makeDynFloat(0.0), makeDynString(\"\"));
}
" 0
 E E E
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
3 0 "Group2"
"gedi\\EP_enter.ref" 550 70 T 32 1 0 1  -180 50  
0
0
<?xml version='1.0'?>

<!-- Edit access rights in ${XDAQ_ROOT}/daq/xaccess/etc/htaccess -->

<!-- To run the client: -->
<!-- xdaq.sh -h 137.138.11.172 -p 45000 -l INFO -c xml/EmuDAQ_with_remote_I2O_client.xml -->
<!-- To run EmuDAQ: -->
<!-- xdaq.sh -h 137.138.11.172 -p 44000 -l INFO -c xml/EmuDAQ_with_remote_I2O_client.xml -->
<!-- Then go to -->
<!-- http://137.138.11.172:44000 -->
<!-- Click on EmuDAQtester -> Control -> configure -> start -->

<xc:Partition xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:xc="http://xdaq.web.cern.ch/xdaq/xsd/2004/XMLConfiguration-30" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  
  <i2o:protocol xmlns:i2o="http://xdaq.web.cern.ch/xdaq/xsd/2004/I2OConfiguration-30">
    <i2o:target class="EVM" instance="0" tid="23"/>
    <i2o:target class="RU"  instance="0" tid="24"/>
    <i2o:target class="BU"  instance="0" tid="25"/>
    <i2o:target class="EmuFU"  instance="0" tid="26"/>
    <i2o:target class="EmuTA"  instance="0" tid="27"/>
    <i2o:target class="EmuRUI" instance="0" tid="28"/>
    <i2o:target class="EmuClient"     instance="0" tid="29"/>
  </i2o:protocol>
  
  <xc:Context url="http://137.138.11.172:44000">
    
    <xc:Endpoint protocol="tcp" service="i2o" hostname="137.138.11.172" port="44001" network="tcp1"/>

    <xc:Application class="PeerTransportTCP" id="20" network="tcp1">
      <properties xmlns="urn:xdaq-application:PeerTransportTCP" xsi:type="soapenc:Struct">
	<autoSize xsi:type="xsd:boolean">true</autoSize>
	<maxPacketSize xsi:type="xsd:unsignedLong">65536</maxPacketSize>
      </properties>
    </xc:Application>
    <xc:Module>${XDAQ_ROOT}/daq/pt/tcp/lib/linux/x86/libpttcp.so</xc:Module>
    
    <!-- EmuReadout replaces DDUReadout -->
    <xc:Module>${XDAQ_ROOT}/emu/emuDAQ/emuReadout/lib/linux/x86/libEmuReadout.so</xc:Module>
    <!-- EmuServer is an auxiliary class used by EmuRUI and EmuFU -->
    <xc:Module>${XDAQ_ROOT}/emu/emuDAQ/emuUtil/lib/linux/x86/libEmuServer.so</xc:Module>
    
    <!-- EmuDAQtester is a simple run control with a hyperDAQ interface -->
    <xc:Application class="EmuDAQtester" id="12" instance="0" network="tcp1"/>
    <xc:Module>${XDAQ_ROOT}/emu/emuDAQ/emuDAQtester/lib/linux/x86/libEmuDAQtester.so</xc:Module>
    
    <!-- Event Manager -->
    <xc:Application class="EVM" id="13" instance="0" network="tcp1">
      <properties xmlns="urn:xdaq-application:EVM" xsi:type="soapenc:Struct">
	<classnameOfTA xsi:type="xsd:string">EmuTA</classnameOfTA>
      </properties>
    </xc:Application>
    <xc:Module>${XDAQ_ROOT}/daq/evb/evm/lib/linux/x86/libEVM.so</xc:Module>
    
    <!-- Readout Unit -->
    <xc:Application class="RU" id="14" instance="0" network="tcp1"/>
    <xc:Module>${XDAQ_ROOT}/daq/evb/ru/lib/linux/x86/libRU.so</xc:Module>
    
    <!-- Builder Unit -->
    <xc:Application class="BU" id="15" instance="0" network="tcp1"/>
    <xc:Module>${XDAQ_ROOT}/daq/evb/bu/lib/linux/x86/libBU.so</xc:Module>
    
    <!-- Filter Unit -->
    <xc:Application class="EmuFU" id="16" instance="0" network="tcp1">
      <properties xmlns="urn:xdaq-application:FU" xsi:type="soapenc:Struct">
	
	<!-- Data will be written to file(s) in derictory pathToDataOutFile (no file written if empty)-->
	<pathToDataOutFile xsi:type="xsd:string">/tmp/slicedev/hw</pathToDataOutFile>
	<!-- Data will be written to file(s) of size fileSizeInMegaBytes (no file written if zero)-->
	<fileSizeInMegaBytes xsi:type="xsd:unsignedLong">20</fileSizeInMegaBytes>
	
	<!-- The names of the classes that request data from EmuFU -->
	<clientsClassName xsi:type="soapenc:Array" soapenc:arrayType="xsd:ur-type[5]">
	  <!-- 	<item xsi:type="xsd:string" soapenc:position="[0]">EmuClient</item> -->
	</clientsClassName>
	
      </properties>
    </xc:Application>
    <xc:Module>${XDAQ_ROOT}/emu/emuDAQ/emuFU/lib/linux/x86/libEmuFU.so</xc:Module>
    
    <!-- Trigger Adapter generates dummy triggers -->
    <xc:Application class="EmuTA" id="17" instance="0" network="tcp1">
      <properties xmlns="urn:xdaq-application:TA" xsi:type="soapenc:Struct">
	<!-- The run number. -->
	<runNumber xsi:type="xsd:unsignedLong">57005</runNumber>
	<!-- Stop after having taken maxNumTriggers events. -->
	<maxNumTriggers xsi:type="xsd:unsignedLong">10000</maxNumTriggers>
      </properties>
    </xc:Application>
    <xc:Module>${XDAQ_ROOT}/emu/emuDAQ/emuTA/lib/linux/x86/libEmuTA.so</xc:Module>
    
    <!-- Readout Unit Input -->
    <xc:Application class="EmuRUI" id="18" instance="0" network="tcp1">
      <properties xmlns="urn:xdaq-application:RUI" xsi:type="soapenc:Struct">
	<!-- If passDataOnToRUBuilder is false, EmuRUI will not pass the data on to the event builder (->RU->BU->FU) -->
	<passDataOnToRUBuilder xsi:type="xsd:boolean">true</passDataOnToRUBuilder>
	<!-- Type of the  input devices [ file | spy | slink ]-->
<!-- 	<inputDeviceType xsi:type="xsd:string">file</inputDeviceType> -->
	<inputDeviceType xsi:type="xsd:string">spy</inputDeviceType>
	<!-- The input devices [ file name | /dev/scharN | Slink board ]-->
	<inputDeviceNames xsi:type="soapenc:Array" soapenc:arrayType="xsd:ur-type[5]">
	  <item xsi:type="xsd:string" soapenc:position="[0]">/dev/schar3</item>
<!-- 	  <item xsi:type="xsd:string" soapenc:position="[0]">/tmp/slicedev/RunNum670Evs0to999.bin</item> -->
<!-- 	  <item xsi:type="xsd:string" soapenc:position="[1]">/tmp/slicedev/RunNum670Evs0to999.bin</item> -->
	</inputDeviceNames>
	<!-- The data format [ DDU | DCC ] -->
	<inputDataFormat xsi:type="xsd:string">DDU</inputDataFormat>
	<!-- Data will be written to file(s) in derictory pathToRUIDataOutFile (no file written if empty)-->
	<pathToRUIDataOutFile xsi:type="xsd:string">/tmp/slicedev/hw</pathToRUIDataOutFile>
	<!-- Data will be written to file(s) of size ruiFileSizeInMegaBytes (no file written if zero)-->
	<ruiFileSizeInMegaBytes xsi:type="xsd:unsignedLong">20</ruiFileSizeInMegaBytes>
	<!-- The names of the classes that request data from EmuRUI -->
	<clientsClassName xsi:type="soapenc:Array" soapenc:arrayType="xsd:ur-type[5]">
	  <item xsi:type="xsd:string" soapenc:position="[0]">EmuClient</item>
	</clientsClassName>
      </properties>
    </xc:Application>
    <xc:Module>${XDAQ_ROOT}/emu/emuDAQ/emuRUI/lib/linux/x86/libEmuRUI.so</xc:Module>
    
  </xc:Context>
  
  
  <xc:Context url="http://137.138.11.172:45000">
    
    <xc:Endpoint protocol="tcp" service="i2o" hostname="137.138.11.172" port="45001" network="tcp1"/>
    
    <xc:Application class="PeerTransportTCP" id="21" network="tcp1">
      <properties xmlns="urn:xdaq-application:PeerTransportTCP" xsi:type="soapenc:Struct">
	<autoSize xsi:type="xsd:boolean">true</autoSize>
	<maxPacketSize xsi:type="xsd:unsignedLong">65536</maxPacketSize>
      </properties>
    </xc:Application>
    <xc:Module>${XDAQ_ROOT}/daq/pt/tcp/lib/linux/x86/libpttcp.so</xc:Module>

    <!-- A simple client example, sending an I2O credit message every second. -->
    <xc:Application class="EmuClient" id="19" instance="0" network="tcp1">
      <properties xmlns="urn:xdaq-application:EmuClient" xsi:type="soapenc:Struct">
	<!-- The size of the memory pool for credit messages -->
	<committedPoolSize xsi:type="xsd:unsignedLong">100</committedPoolSize>
	<!-- Ask the server to send nEventCredits events -->
	<nEventCredits xsi:type="xsd:unsignedLong">1</nEventCredits>
	<!-- Ask the server to wait prescalingFactor events before sending another -->
	<prescalingFactor xsi:type="xsd:unsignedLong">1</prescalingFactor>
	<!-- The name of the server -->
	<serversClassName xsi:type="xsd:string">EmuRUI</serversClassName>
	<!--       <serversClassName xsi:type="xsd:string">EmuFU</serversClassName> -->
	<!-- The instance of the server -->
	<serversClassInstance xsi:type="xsd:unsignedLong">0</serversClassInstance>
      </properties>
    </xc:Application>
    <xc:Module>${XDAQ_ROOT}/emu/emuDAQ/emuClient/lib/linux/x86/libEmuClient.so</xc:Module>
    
  </xc:Context>
  
</xc:Partition>

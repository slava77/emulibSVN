<?xml version="1.0"?>

<xsl:transform 
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
    xmlns:a="http://cms.cern.ch/emu/afeb/teststand/application" 
    version="1.0">

  <xsl:output method="html" indent="yes"/>

  <xsl:template match="a:application">
    <table class="layout">
      <tr>
	<td><span class="{@a:state}"><xsl:value-of select="@a:state"/></span></td>
	<td><xsl:copy-of select="a:message"/></td>
	<td><xsl:value-of select="@a:dateTime"/></td>
      </tr>
      <tr>
	<td colspan="3"><hr/></td>
      </tr>
      <tr>
	<td>
	  <input type="submit" name="fsm" value="Configure" class="submit" title="Configure for the selected mode.">
	    <xsl:if test="@a:state!='Halted'"><xsl:attribute name="disabled">disabled</xsl:attribute></xsl:if>
	  </input>
	  <select name="mode">
	    <xsl:if test="@a:state!='Halted'"><xsl:attribute name="disabled">disabled</xsl:attribute></xsl:if>
	    <option title="Perform measurements.">
	      <xsl:if test="@a:mode='measurement'"><xsl:attribute name="selected">selected</xsl:attribute></xsl:if>
	      measurement
	    </option>
	    <option title="Perform calibrations.">
	      <xsl:if test="@a:mode='calibration'"><xsl:attribute name="selected">selected</xsl:attribute></xsl:if>
	      calibration
	    </option>
	  </select>
	</td>
	<td>
	  <xsl:choose>
	    <xsl:when test="@a:mode='calibration'">
	      <input type="submit" name="fsm" class="submit">
		<xsl:choose>
		  <xsl:when test="@a:state='Enabled'">
		    <xsl:attribute name="value">Stop</xsl:attribute>
		    <xsl:attribute name="title">Stop the calibration to change DAC values.</xsl:attribute>
		  </xsl:when>
		  <xsl:otherwise>
		    <xsl:attribute name="value">Enable</xsl:attribute>
		    <xsl:attribute name="title">Start the calibration with the given DAC values.</xsl:attribute>
		  </xsl:otherwise>
		</xsl:choose>
		<xsl:if test="@a:state='Halted' or @a:state='Failed'"><xsl:attribute name="disabled">disabled</xsl:attribute></xsl:if>
	      </input>
	    </xsl:when>
	    <xsl:otherwise>
	      <input type="submit" name="fsm" value="Enable" class="submit" title="Start the measurement.">
		<xsl:if test="@a:state!='Configured'"><xsl:attribute name="disabled">disabled</xsl:attribute></xsl:if>
	      </input>
	    </xsl:otherwise>
	  </xsl:choose>
	</td>
	<td>
	  <input type="submit" name="fsm" value="Halt" class="submit">
	    <xsl:if test="@a:mode='calibration'"><xsl:attribute name="title">Halt the calibration to reconfigure the setup.</xsl:attribute></xsl:if>
	    <xsl:if test="@a:mode='measurement'"><xsl:attribute name="title">Halt the measurement.</xsl:attribute></xsl:if>
	    <xsl:if test="@a:state='Halted' or @a:state='Failed'"><xsl:attribute name="disabled">disabled</xsl:attribute></xsl:if>
	  </input>
	</td>
      </tr>
      <tr>
	<td colspan="3">
	  <hr/>
	  <xsl:if test="$APPMODE='measurement'"><xsl:apply-templates mode="application" select="../a:results"/></xsl:if>
	  <xsl:if test="$APPMODE='calibration'"><xsl:apply-templates select="a:calibration"/></xsl:if>
	</td>
      </tr>
      <xsl:if test="@a:state='Halted'">
	<tr>
	  <td colspan="3">
	    Select a previously defined configuration:
	    <xsl:apply-templates select="a:configuration"/>
	    <input type="submit" name="config" value="load" title="Load the selected configuration." class="submit"/>
	  </td>
	</tr>
      </xsl:if>
    </table>
  </xsl:template>

  <xsl:template mode="application" match="a:results">
    <xsl:variable name="NDEVICES" select="count(a:measurement[position()=1]/a:device)"/>
    <xsl:if test="$NDEVICES != 0">
      <table>
	<tr>
	  <th colspan="{number($NDEVICES)+3}">measurement</th>
	</tr>      
	<tr>
	  <th>index</th><th>type</th><th>name</th><th colspan="{$NDEVICES}">devices</th>
	</tr>
	<xsl:apply-templates mode="application" select="a:measurement">
	  <xsl:sort select="@a:index"/>
	</xsl:apply-templates>
      </table>
    </xsl:if>
    <xsl:for-each select="a:measurement[@a:status='running']/a:device">
      <xsl:sort select="@a:id"/>
      <img src="{../../@a:urlPath}{a:plot/@a:name}.png"/>
    </xsl:for-each>
  </xsl:template>

  <xsl:template mode="application" match="a:measurement">
    <tr>
      <td><xsl:value-of select="@a:index"/></td>
      <td><xsl:value-of select="@a:type"/></td>
      <td><xsl:value-of select="@a:name"/></td>
      <xsl:apply-templates mode="application" select="a:device">
	<xsl:sort select="@a:id"/>
      </xsl:apply-templates>
    </tr>
  </xsl:template>

  <xsl:template mode="application" match="a:device">
    <td>
      <a href="{/root/a:application/@a:urlPath}/results" class="{../@a:status}" target="_blank"><xsl:value-of select="@a:id"/></a>
    </td>
  </xsl:template>

  <xsl:template mode="results" match="a:results">
    <p>
      These results can also be accessed offline by opening <a href="file://{@a:systemPath}/{@a:file}">file://<xsl:value-of select="@a:systemPath"/>/<xsl:value-of select="@a:file"/></a> in a browser running on host <xsl:value-of select="@a:host"/>.
    </p>
    <table class="layout">
      <xsl:apply-templates mode="results" select="a:measurement/a:device">
	<xsl:sort select="../@a:index"/>
 	<xsl:sort select="@a:id"/>
      </xsl:apply-templates>
   </table>
  </xsl:template>

  <xsl:template mode="results" match="a:device">
    <tr>
      <td colspan="2">
	<table class="title">
	  <tr><th colspan="3">measurement</th><th>device</th></tr>
	  <tr><th>index</th><th>type</th><th>name</th><th>id</th></tr>
	  <tr><td><xsl:value-of select="../@a:index"/></td><td><xsl:value-of select="../@a:type"/></td><td><xsl:value-of select="../@a:name"/></td><td><xsl:value-of select="@a:id"/></td></tr>
	</table>
      </td>
    </tr>
    <tr>
      <td>
	<a name="{a:plot/@a:name}"/>
	<img src="{../../@a:urlPath}{a:plot/@a:name}.png"/>
      </td>
      <td style="vertical-align:top;">
	<table>
	  <xsl:apply-templates mode="header" select="a:channel[@a:number=1]"/>
	  <xsl:apply-templates mode="data" select="a:channel"/>
	</table>
	<xsl:apply-templates select="a:statistics"/>
      </td>
    </tr>
  </xsl:template>

  <xsl:template mode="header" match="a:channel">
      <tr>
	<th rowspan="2">channel</th>
	<xsl:for-each select="a:parameter">
	  <xsl:choose>
	    <xsl:when test="@a:name='chi2ndf'">
	      <th rowspan="2">&#x03c7;&#xb2;/ndf</th>
	    </xsl:when>
	    <xsl:otherwise>
	      <th colspan="2"><xsl:value-of select="@a:name"/></th>
	    </xsl:otherwise>
	  </xsl:choose>
	</xsl:for-each>
      </tr>
      <tr>
	<xsl:for-each select="a:parameter">
	  <xsl:choose>
	    <xsl:when test="@a:name='time on plateau [TDC]'">
	      <th>mean</th><th>rms</th>
	    </xsl:when>
	    <xsl:when test="@a:name='chi2ndf'">
	    </xsl:when>
	    <xsl:otherwise>
	      <th>value</th><th>error</th>
	    </xsl:otherwise>
	  </xsl:choose>
	</xsl:for-each>
      </tr>
  </xsl:template>

  <xsl:template mode="data" match="a:channel">
      <tr>
	<th><xsl:value-of select="@a:number"/></th>
	<xsl:for-each select="a:parameter">
	  <!-- <td style="width: 25x;"><xsl:value-of select="@a:value"/> &#177; <xsl:value-of select="@a:error"/></td> -->
	  <td><xsl:value-of select="@a:value"/></td>
	  <xsl:if test="@a:name!='chi2ndf'">
	    <td><xsl:value-of select="@a:error"/></td>
	  </xsl:if>
	</xsl:for-each>
      </tr>
  </xsl:template>

  <xsl:template match="a:statistics">
    <table>
      <tr><th colspan="{count(a:statistics/a:parameter[position=1]/@*)}">Uniformity</th></tr>
      <xsl:apply-templates mode="header" select="a:parameter[position()=1]"/>
      <xsl:apply-templates mode="data" select="a:parameter"/>
    </table>
  </xsl:template>

  <xsl:template mode="header" match="a:parameter">
      <tr>
	<th>parameter name</th>
	<xsl:for-each select="@a:*[local-name()!='name']">
	  <th style="width: 25x;"><xsl:value-of select="local-name()"/></th>
	</xsl:for-each>
      </tr>
  </xsl:template>

  <xsl:template mode="data" match="a:parameter">
      <tr>
	<th><xsl:value-of select="@a:name"/></th>
	<xsl:for-each select="@a:*[local-name()!='name']">
	  <td style="width: 25x;"><xsl:value-of select="."/></td>
	</xsl:for-each>
      </tr>
  </xsl:template>


  <xsl:template match="a:configuration">
    <select name="file" size="3" title="Select a configuration file to load.">
      <xsl:apply-templates select="a:file"/>
    </select>
  </xsl:template>

  <xsl:template match="a:file">
    <option value="{@a:name}"><xsl:value-of select="@a:time"/><xsl:text> </xsl:text><b><xsl:value-of select="@a:name"/></b></option>
  </xsl:template>

  <xsl:template match="a:calibration">
    <p>Enter the DAC values, and click 'Enable' to set them.</p>
    <table class="calibrations">
      <tr><th>all DACs of type</th><th>value [DAC units]</th></tr>
      <tr><td>test pulse</td><td><input type="text" name="pulseApmlitude" value="{@a:pulseAmplitude}" title="Enter a negative integer if test pulse DACs are not to be pulsed." size="4"/></td></tr>
      <tr><td>threshold</td><td><input type="text" name="thresholdLevel" value="{@a:thresholdLevel}" title="Enter a negative integer if threshold DACs are not to be set." size="4"/></td></tr>
    </table>
  </xsl:template>

</xsl:transform>

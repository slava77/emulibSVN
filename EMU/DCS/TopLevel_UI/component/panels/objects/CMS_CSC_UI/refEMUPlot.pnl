V 10
1
LANG:1 0 
PANEL,-1 -1 1348 532 N "_3DFace" 2
"$group"
"$width"
"main()
{
  initParams();
  
  dyn_string ex;
  layoutParams = emuui_getMapping(\"chamberLayout\", ex);
  if (emu_checkException(ex)) { return; }
  
  int myPosX, myPosY;
  getValue(\"refPoint\", \"position\", myPosX, myPosY);
  myPosY += 200;
  
  float paramWidthFloat = paramWidth;
  int chamberWidthHeight = floor(paramWidthFloat / 37); // max 36 chambers + gradient scale
  int height = chamberWidthHeight * 16; // 16 rings
  
  drawEMU(myPosX, myPosY, chamberWidthHeight);
  drawGradientScale(myPosX + paramWidth - chamberWidthHeight, myPosY + height, height, chamberWidthHeight);
}

void drawEMU(int x, int y, int chamberWidthHeight) {
  int currentY = y;
  for (int i=4; i >= -4; i--) {
    string side = \"P\";
    if (i < 0) { side = \"M\"; }
    if (i == 0) { continue; } // no such station
    int station = emu_abs(i);
    
    if (side == \"M\") { // count rings increasingly
      for (int ring = 1; ring <= layoutParams[\"ringCount_ME_\" + side + station]; ring++) {
        drawStation(x, currentY, side, station, ring, chamberWidthHeight);
        currentY += chamberWidthHeight;
      }
    } else { // count ring decresingly
      for (int ring = layoutParams[\"ringCount_ME_\" + side + station]; ring >= 1; ring--) {
        drawStation(x, currentY, side, station, ring, chamberWidthHeight);
        currentY += chamberWidthHeight;
      }
    }
  }
}

void drawStation(int x, int y, string side, int station, int ring, int chamberWidthHeight) {
  int chamberCount = 18;
  int scaleWidth = 2;
  if ((station == 1) || (ring > 1)) {
    chamberCount = 36;
    scaleWidth = 1;
  }
  
  for (int i=1; i <= chamberCount; i++) {
    string chamberName;
    string strChamberNumber;
    sprintf(strChamberNumber, \"%02d\", i);
    chamberName = strChamberNumber;
    
    int chamberX = x + (chamberWidthHeight * scaleWidth * (i - 1));
    
    //import the chamber panel (no changes in the panel shape; position - [0,0])
    string refName = \"refChamber_\" + side + station + ring + \"_\" + i;
    if (shapeExists(refName)) { refName += \"_1\"; }
    addSymbol(myModuleName(), myPanelName(),
              \"objects/CMS_CSC_UI/refDevice.pnl\",
              refName,
              makeDynString(\"$caption:VALUE\", \"$deviceType:chamber\",
                            \"$deviceParams:\" + \"side=\" + side + 
                                               \";station=\" + station + 
                                               \";ring=\" + ring + 
                                               \";chamberNumber=\" + strChamberNumber,
                            \"$group:\" + paramGroup,
                            \"$shapeParams:type=rectangle\"),
              chamberX, y, 0, 1, 1);
    dynAppend(references, refName);
    setValue(refName + \".rectangle\", \"scale\", scaleWidth, 1);
  }
}

void drawGradientScale(int bottomLeftX, int bottomLeftY, int height, int width) {
  for (int i=0; i < height; i++) {
    string refName = \"gradientScaleLine\" + i;
    if (shapeExists(refName)) { refName += \"_1\"; }
    addSymbol(myModuleName(), myPanelName(),
              \"objects/CMS_CSC_UI/refLine.pnl\",
              refName,
              makeDynString(),
              bottomLeftX, bottomLeftY - i, 0, 1, 1);
    dynAppend(references, refName);
    setValue(refName + \".lineHorizontal\", \"foreCol\", emuui_getGradientColor(i, 0, height));
    setValue(refName + \".lineHorizontal\", \"size\", width, 1);
  }
}" 0
 "main()
{
  destroyReferences();
}
" 0
 E E E 1 -1 -1 0  70 450
""0  1
E "// init parameters
string paramGroup;
int paramWidth;

// some panel-wide constants
mapping layoutParams;
dyn_string references;

void destroyReferences() {
  for (int i=1; i <= dynlen(references); i++) {
    removeSymbol(myModuleName(), myPanelName(), references[i]);
  }
}

/** coppies dollar parameters to local variables. If any dollar parameter is missing 
   then local variable is given a default value to allow to run the panel separatelly for debugging purposes. */
void initParams() {
  //default values
  if ((strlen($group) == 0) &&
      (strlen($width) == 0)) {
    
    emuui_init();
    paramGroup = emuui_getSessionDp(\"temperatureMonitor\");
    paramWidth = 740;
  } else { // copy from dollar params
    paramGroup = $group;
    paramWidth = $width;
  }
}" 0
 2
"CBRef" "1"
"EClose" "main()
{
  destroyReferences();
}
" 0

""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
7 0
"refPoint"
""
1 140 110 E E E 1 E 0 E N {0,0,0} E N {255,255,255} E E
 E E
1 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E 1 0 1 -140 -110 1 E 140 110 10 10
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
0
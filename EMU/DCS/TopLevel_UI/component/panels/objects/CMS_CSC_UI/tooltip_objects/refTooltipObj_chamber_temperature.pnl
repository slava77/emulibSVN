V 10
1
LANG:1 0 
PANEL,-1 -1 368 113 N "_3DFace" 1
"$deviceParams"
"main()
{
  dyn_string ex;
  deviceParams = emuui_parseParameterString($deviceParams, ex);
  if (emu_checkException(ex)) { return; }

  getValue(\"refPoint\", \"position\", posX, posY);
  // ----------========== FSM NODE ==========----------
  fsmNode = emuui_getFsmNode(\"chamber_temperature\", deviceParams, ex);
  if (emu_checkException(ex)) { return; }
  int fsmX, fsmY;
  getValue(\"fsmRefPoint\", \"position\", fsmX, fsmY);
  dyn_string refs = emuui_addFsmNode(fsmNode, fsmX, fsmY, true);
  dynAppend(references, refs);
  dpConnect(\"positionChangedCB\", false, emuui_getSessionDp(\"tooltipPositionUpdated\"));  
  
  // connect to the temperature    
  dyn_string dps = emuui_getDpNames(\"chamber_temperature\", deviceParams, ex);
  if (emu_checkException(ex)) { return; }
  
  initGui(dps);
  
  dpConnect(\"updateTemperatureCB\", true, dps);
  
  // ALARM COLORS
  for (int i=1; i <= dynlen(dps); i++) {
    dps[i] += \":_alert_hdl.._act_state_color\";
  }
  
  dpConnect(\"updateTemperatureAlarmColorsCB\", true, dps);
  
  // ----------========== DISCONNECTED WARNING ==========----------
  if (dynlen(dps) > 1) {
    deviceParams[\"sysName\"] = emuui_getSystemName(dps[1]);
  }
  string disconnectedDevicesDp = emuui_getDpName(\"disconnected_devices\", deviceParams, ex);
  if (emu_checkException(ex)) { return; }
  dpConnect(\"updateDisconnectedWarningCB\", true, disconnectedDevicesDp);
}

void initGui(dyn_string dps) {
  
  // Fill up the columnNames array. 
  // And if any column name is not found in part of the DPs name then it's removed (e.g. not all chambers have CFEB5 so it's removed from the table)
  int columnCount = tableTemp.columnCount();
  dyn_int columnsToDelete;
  for (int i=0; i < columnCount; i++) {
    string columnName = tableTemp.columnToName(i);
    //check if the column name is part of any dps
    if (dynPartiallyContains(dps, columnName) > 0) {
      dynAppend(columnNames, columnName);
    } else {
      dynAppend(columnsToDelete, i); // register to be deleted
    }
  }
  //delete unnecessary columns
  for (int i = dynlen(columnsToDelete); i >=1; i--) {
    tableTemp.deleteColumn(columnsToDelete[i]);
  }
  
  //set the appropriate width for the table
  tableTemp.appendLine(columnNames[1], \"\");
  emuui_tableCompact(\"tableTemp\", 1);
}" 0
 "main()
{
  emuui_destroyReferences(references);
}" 0
 E E E 1 -1 -1 0  0 0
""0  1
E "//some panel-wide constants and variables
int cfebCount;
mapping deviceParams;
dyn_string columnNames;
string fsmNode;
dyn_string references;
int posX, posY;

void positionChangedCB(string dummyDpName, int dummyValue) {
  int oldPosX = posX,
      oldPosY = posY;
  getValue(\"refPoint\", \"position\", posX, posY);

  emuui_repositionObjectRelatively(references, oldPosX, oldPosY, posX, posY);  
}

void updateTemperatureCB(dyn_string dps, dyn_float temperatures) {
  for (int i=1; i <= dynlen(columnNames); i++) {
    int index = dynPartiallyContains(dps, columnNames[i]);
    if (index > 0) {
      string strValue;
      sprintf(strValue, \"%d °C\", temperatures[index]);
      tableTemp.cellValueRC(0, columnNames[i], strValue);
    }
  }

  lblLastUpdate.text = emuui_getLastUpdateTime(dps[1]);
}

void updateTemperatureAlarmColorsCB(dyn_string dps, dyn_string alarmColors) {
  for (int i=1; i <= dynlen(columnNames); i++) {
    int index = dynPartiallyContains(dps, columnNames[i]);
    if (index > 0) {
      alarmColors[index] = emuui_correctAlarmColor(alarmColors[index]);
      tableTemp.cellBackColRC(0, columnNames[i], alarmColors[index]);
    }
  }
}
    
/** returns index of an element within the container which is first to contain a searchString. -1 is returned if no match is found. */
int dynPartiallyContains(dyn_string container, string searchString) {
  for (int i=1; i <= dynlen(container); i++) {
    if (strpos(container[i], searchString) >= 0) {
      return i;
    }
  }
  return -1;
}

/** if disconnectedDevices contains hvFsmNode then \"no communication\" warning is shown, otherwise it's hidden. */
void updateDisconnectedWarningCB(string dpName, string disconnectedDevices) {
  if (strpos(disconnectedDevices, fsmNode) >= 0) {
    emuui_showTooltipWarning(getShape(\"refPoint\"),
                           getShape(\"warnNoTempCommunication\"), 
                           getShape(\"chamber_temperature_tooltipBack\"));
  } else {
    emuui_hideTooltipWarning(getShape(\"warnNoTempCommunication\"), 
                             getShape(\"chamber_temperature_tooltipBack\"));
  }
}
" 0
 2
"CBRef" "1"
"EClose" "main()
{
  emuui_destroyReferences(references);
  PanelOff();
}" 0

""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
6 10
"chamber_temperature_tooltipBack"
""
1 400 40 E E E 1 E 1 E N {0,0,0} E N {255,255,225} E E
 E E
17 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E 3.18181818181818 0 0.888888888888889 -1272.72727272727 -35.5555555555556 1 E 400 40 510 130
2 1
"PRIMITIVE_TEXT1"
""
1 10 10 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
2 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 10 10 70 24
0 2 2 "0s" 0 0 0 192 0 0  10 10 1
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 11 Temperature
25 2
"tableTemp"
""
1 10 30 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
3 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 8 28 344 69
EE 1 0 1 7 0 "alct.v1" 4 1 0 "s" 1
LANG:1 4 ALCT
E
1
LANG:1 0 

47 "cfeb.v1" 4 1 0 "s" 1
LANG:1 6 CFEB 1
E
1
LANG:1 0 

47 "cfeb.v2" 4 1 0 "s" 1
LANG:1 6 CFEB 2
E
1
LANG:1 0 

47 "cfeb.v3" 4 1 0 "s" 1
LANG:1 6 CFEB 3
E
1
LANG:1 0 

47 "cfeb.v4" 4 1 0 "s" 1
LANG:1 6 CFEB 4
E
1
LANG:1 0 

47 "cfeb.v5" 4 1 0 "s" 1
LANG:1 6 CFEB 5
E
1
LANG:1 0 

47 "dmb.v1" 4 1 0 "s" 1
LANG:1 3 DMB
E
1
LANG:1 0 

47 
14 14 10 10
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
0 0 0 1 7
1 0
2 3
"lblLastUpdate"
""
1 250 10 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
4 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 250 10 297 24
0 2 2 "0s" 0 0 0 192 0 0  250 10 1
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 9 timestamp
2 4
"PRIMITIVE_TEXT3"
""
1 190 10 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
5 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 190 10 249 24
0 2 2 "0s" 0 0 0 192 0 0  190 10 1
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 12 Last update:
7 6
"refPoint"
""
1 140 110 E E E 1 E 0 E N {0,0,0} E N {255,255,255} E E
 E E
9 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E 1 0 1 -140 -110 1 E 140 110 10 10
6 7
"fsmRefPoint"
""
1 110 0 E E E 1 E 0 E N {0,0,0} E N {255,255,255} E E
 E E
11 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E 2.5 0 1 -185 6 1 E 110 0 130 20
2 8
"warnNoTempCommunication"
""
1 12 80 E E E 1 E 0 E N "black" E N "FwStateAttention3" E E
 E E
13 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 12 80 337 94
1 2 2 "0s" 0 0 0 65 0 0  12 80 1
1
LANG:1 101 -*-MS Shell Dlg-bold-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,758,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 16 No Communication
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
0
# ascii dump of database

# DpType
TypeName
_FwFsmObjectType._FwFsmObjectType	1#1
	panel	25#6
	components	9#7
	states	9#8
	actions	9#9
	parameters	9#11
MUDCS_DYN_STRING.MUDCS_DYN_STRING	9#1
MUDCS_STRING.MUDCS_STRING	25#1

# Datapoint/DpId
DpName	TypeName	ID
fwOT_FwWienerMarathon	_FwFsmObjectType	103204
fwOT_FwWienerMarathonChannel	_FwFsmObjectType	103205
fwOT_FwWienerPS	_FwFsmObjectType	104232
fwOT_FwWienerChannel	_FwFsmObjectType	104233
fwOT_CSC_LV_NODES	_FwFsmObjectType	104695
fwOT_CSC_LV_TREE_NODES	_FwFsmObjectType	104696
EMUALIASES	MUDCS_DYN_STRING	105061
CMS_CSC_LV_MRTN_M	MUDCS_STRING	126019

# DpValue
ElementName	TypeName	_original.._value	_original.._status	_original.._stime
fwOT_FwWienerMarathon.panel	_FwFsmObjectType	"FwWienerMarathon.pnl"	0x101	29.05.2008 15:00:26.778
fwOT_FwWienerMarathon.components	_FwFsmObjectType	"bool Status.On
", "", "FwWienerMarathon_initialize(string domain, string device)
{
}
", "FwWienerMarathon_valueChanged( string domain, string device,
      bool Status_dot_On, string &fwState)
{      
      if( Status_dot_On == TRUE )
	{
		fwState = \"ON\";
	}
	else
	{
		fwState = \"OFF\";
	}        
}
", "FwWienerMarathon_doCommand(string domain, string device, string command)
{
      int Time = 30; 
     int m_state, m_on;
	if (command == \"OFF\")
	{
            dpGet(device+\".Settings.OnOffCrate\",m_state);
            dpGet(device+\".Status.On\",m_on);           
            if(m_state==0 && m_on==0){/*delay(2);*/ dpSetWait(device+\".Status.On\",FALSE);return;}
            fwDU_startTimeout(Time, domain, device, \"ERROR\",\"OFF\"); 
		dpSetWait(device+\".Settings.OnOffCrate\",0);            
	}
	if (command == \"ON\")
	{
            dpGet(device+\".Settings.OnOffCrate\",m_state);
            dpGet(device+\".Status.On\",m_on);                       
            if(m_state && m_on){/*delay(2);*/ dpSetWait(device+\".Status.On\",TRUE);return;}
            fwDU_startTimeout(Time, domain, device, \"ERROR\",\"ON\");
            		dpSetWait(device+\".Settings.OnOffCrate\",1); 
	}
}
"	0x101	30.06.2008 08:55:14.984
fwOT_FwWienerMarathon.states	_FwFsmObjectType	"ON", "FwStateOKPhysics", "", "", "", "OFF", "FwStateOKNotPhysics", "", "", "", "RECOVERING", "FwStateAttention2", "", "", "", "ERROR", "FwStateAttention3", "", "", ""	0x101	30.06.2008 08:55:14.984
fwOT_FwWienerMarathon.actions	_FwFsmObjectType	"ON/OFF", "", "1", "", "0", "OFF/ON", "", "1", "", "0", "OFF/OFF", "", "1", "", "0", "ERROR/OFF", "", "1", "", "0", "ERROR/ON", "", "1", "", "0"	0x101	30.06.2008 08:55:14.984
fwOT_FwWienerMarathon.parameters	_FwFsmObjectType	"int estimatedTime = 0"	0x101	29.05.2008 15:00:26.903
fwOT_FwWienerMarathonChannel.panel	_FwFsmObjectType	"FwWienerMarathonChannel.pnl"	0x101	29.05.2008 15:00:26.934
fwOT_FwWienerMarathonChannel.components	_FwFsmObjectType	"bool Status.On
", "", "FwWienerMarathonChannel_initialize(string domain, string device)
{
}
", "FwWienerMarathonChannel_valueChanged( string domain, string device,
      bool Status_dot_On, string &fwState)
{
      bool Stat; 
      int quality;
      
      dpGet(device + \".Status.FailureMaxCurrent\", Stat); 
      if( Stat == TRUE) 
      { 
            fwState = \"ERROR\";//\"OVER_CURRENT\"; 
      } 
      else 
      { 
         dpGet(device + \".Status.FailureMaxSenseVoltage\", Stat); 
         if( Stat == TRUE) 
         { 
            fwState = \"ERROR\";//\"OVER_VOLTAGE\"; 
         } 
         else 
         { 
         dpGet(device + \".Status.FailureMaxTerminalVoltage\", Stat); 
         if( Stat == TRUE ) 
         { 
            fwState = \"ERROR\";//\"OVER_VOLT_PROT\"; 
         }
	   else if(Status_dot_On == TRUE )
	   {
                dpGet(device+\".MeasurementCurrent:_original.._invalid\", quality);
                if(!quality) 
                fwState = \"ON\";
                else fwState = \"ERROR\";
	   }
	   else
	   {
		fwState = \"OFF\";
	   }
	} 
   }        
        
}
", "FwWienerMarathonChannel_doCommand(string domain, string device, string command)
{
// the following is to not to \"hang\" the status of the maraton channels
// in the case of we switch the maraton and there is no communication to maraton
// (PFC is off)  
bool status;
   dpGet(device+\".Status.On\",status);
   dpSet(device+\".Status.On\",status);
}
"	0x101	30.06.2008 08:55:15.250
fwOT_FwWienerMarathonChannel.states	_FwFsmObjectType	"ON", "FwStateOKPhysics", "", "", "", "OFF", "FwStateOKNotPhysics", "", "", "", "RECOVERING", "FwStateAttention2", "", "", "", "ERROR", "FwStateAttention3", "", "", ""	0x101	30.06.2008 08:55:15.234
fwOT_FwWienerMarathonChannel.actions	_FwFsmObjectType	"ON/OFF", "", "1", "", "0", "OFF/ON", "", "1", "", "0", "ERROR/OFF", "", "1", "", "0"	0x101	30.06.2008 08:55:15.234
fwOT_FwWienerMarathonChannel.parameters	_FwFsmObjectType	"int estimatedTime = 0"	0x101	29.05.2008 15:00:27.059
fwOT_FwWienerPS.panel	_FwFsmObjectType	"FwWienerPS.pnl"	0x101	29.05.2008 15:00:27.091
fwOT_FwWienerPS.components	_FwFsmObjectType	"unsigned General.Status.GetCurrentFlags
", "", "FwWienerPS_initialize(string domain, string device)
{
}
", "FwWienerPS_valueChanged( string domain, string device,
      unsigned General_dot_Status_dot_GetCurrentFlags, string &fwState)
{
  
  
  
      bool Stat, IsOn;
      int Stat_Int;
      bool IsError=FALSE; 
      
      dpGet(device + \".General.Status.GetACInLimit\", Stat_Int);
      if( Stat_Int == 0)IsError=TRUE;
      
      dpGet(device + \".General.Status.GetNoErrors\", Stat_Int);
      if( Stat_Int == 0)IsError=TRUE;
      
      dpGet(device + \".Fans.Status.GetFansOK\", Stat_Int);
      if( Stat_Int == 0)IsError=TRUE;
      
      dpGet(device + \".General.Status.GetEEPROMError\", Stat); 
      if( Stat == TRUE)IsError=TRUE;
      
      dpGet(device + \".Temperatures.Status.ExtTempErrorFlag1\", Stat); 
      if( Stat == TRUE)IsError=TRUE;                        

      dpGet(device + \".Temperatures.Status.ExtTempErrorFlag2\", Stat); 
      if( Stat == TRUE)IsError=TRUE;
      
      dpGet(device + \".Temperatures.Status.ExtTempErrorFlag3\", Stat); 
      if( Stat == TRUE)IsError=TRUE;
      
      dpGet(device + \".Temperatures.Status.ExtTempErrorFlag4\", Stat); 
      if( Stat == TRUE)IsError=TRUE;
      
      dpGet(device + \".Temperatures.Status.ExtTempErrorFlag5\", Stat); 
      if( Stat == TRUE)IsError=TRUE;
      
      dpGet(device + \".Temperatures.Status.ExtTempErrorFlag6\", Stat); 
      if( Stat == TRUE)IsError=TRUE;                        
 
      dpGet(device + \".Temperatures.Status.ExtTempErrorFlag7\", Stat); 
      if( Stat == TRUE)IsError=TRUE;
      
      dpGet(device + \".Temperatures.Status.ExtTempErrorFlag8\", Stat); 
      if( Stat == TRUE)IsError=TRUE;
      
      dpGet(device + \".Temperatures.Status.TempErrorFlag1\", Stat); 
      if( Stat == TRUE)IsError=TRUE;
      
      dpGet(device + \".Temperatures.Status.TempErrorFlag2\", Stat); 
      if( Stat == TRUE)IsError=TRUE;
      
      dpGet(device + \".Temperatures.Status.TempErrorFlag3\", Stat); 
      if( Stat == TRUE)IsError=TRUE;                        
 
      dpGet(device + \".Temperatures.Status.TempErrorFlag4\", Stat); 
      if( Stat == TRUE)IsError=TRUE;
      
      dpGet(device + \".Temperatures.Status.TempErrorFlag5\", Stat); 
      if( Stat == TRUE)IsError=TRUE;
      
      dpGet(device + \".Temperatures.Status.TempErrorFlag6\", Stat); 
      if( Stat == TRUE)IsError=TRUE;
      
      dpGet(device + \".Temperatures.Status.TempErrorFlag7\", Stat); 
      if( Stat == TRUE)IsError=TRUE;
      
      dpGet(device + \".Temperatures.Status.TempErrorFlag8\", Stat); 
      if( Stat == TRUE)IsError=TRUE;                        

      
      if(IsError==FALSE){
        dpGet(device + \".General.Status.GetPowerOn\", IsOn);       
        if(IsOn)fwState = \"ON\";
        else fwState = \"OFF\";    
      
      }
      else fwState = \"ERROR\";


}
", "FwWienerPS_doCommand(string domain, string device, string command)
{
        int Time = 5; 

	if (command == \"OFF\")
	{
		dpSet(device+\".Commands.OnOffCrate\",0);
            fwDU_startTimeout(Time, domain, device, \"ERROR\"); 
	}
	if (command == \"ON\")
	{
		dpSet(device+\".Commands.OnOffCrate\",1); 
            fwDU_startTimeout(Time, domain, device, \"ERROR\");
	}
}
"	0x101	30.06.2008 08:55:15.515
fwOT_FwWienerPS.states	_FwFsmObjectType	"ON", "FwStateOKPhysics", "", "", "", "OFF", "FwStateOKNotPhysics", "", "", "", "RECOVERING", "FwStateAttention2", "", "", "", "ERROR", "FwStateAttention3", "", "", ""	0x101	30.06.2008 08:55:15.500
fwOT_FwWienerPS.actions	_FwFsmObjectType	"ON/OFF", "", "1", "", "0", "OFF/ON", "", "1", "", "0", "ERROR/OFF", "", "1", "", "0"	0x101	30.06.2008 08:55:15.500
fwOT_FwWienerPS.parameters	_FwFsmObjectType	"int estimatedTime = 0"	0x101	29.05.2008 15:00:27.216
fwOT_FwWienerChannel.panel	_FwFsmObjectType	"FwWienerChannel.pnl"	0x101	29.05.2008 15:00:27.247
fwOT_FwWienerChannel.components	_FwFsmObjectType	"bool Actual.CurrentFlag
", "", "FwWienerChannel_initialize(string domain, string device)
{
}
", "FwWienerChannel_valueChanged( string domain, string device,
      bool Actual_dot_CurrentFlag, string &fwState)
{
  
      bool Stat;
      bool IsError=FALSE; 
      float voltset, voltmeas, vdiff;
      dpGet(device + \".Actual.CurrentFlag\", Stat); 
      if( Stat == TRUE)IsError=TRUE;
      dpGet(device + \".Actual.OverVoltFlag\", Stat); 
      if( Stat == TRUE)IsError=TRUE;
      dpGet(device + \".Actual.OverVoltProtFlag\", Stat); 
      if( Stat == TRUE)IsError=TRUE;            
      
      if(IsError==FALSE){
        dpGet(device + \".Actual.VoltageValue\", voltmeas);       
        dpGet(device + \".Settings.VoltageSetpoint\", voltset);           
        vdiff=fabs(voltset-voltmeas);
        if(vdiff < 0.5)fwState = \"OFF\";
        else fwState = \"ON\";    
      
      }
      else fwState = \"ERROR\";


}
", "FwWienerChannel_doCommand(string domain, string device, string command)
{
}
"	0x101	30.06.2008 08:55:14.703
fwOT_FwWienerChannel.states	_FwFsmObjectType	"ON", "FwStateOKPhysics", "", "", "", "OFF", "FwStateOKNotPhysics", "", "", "", "RECOVERING", "FwStateAttention2", "", "", "", "ERROR", "FwStateAttention3", "", "", ""	0x101	30.06.2008 08:55:14.687
fwOT_FwWienerChannel.actions	_FwFsmObjectType	"ON/OFF", "", "1", "", "0", "OFF/ON", "", "1", "", "0", "ERROR/OFF", "", "1", "", "0"	0x101	30.06.2008 08:55:14.687
fwOT_FwWienerChannel.parameters	_FwFsmObjectType	"int estimatedTime = 0"	0x101	29.05.2008 15:00:27.372
fwOT_CSC_LV_NODES.panel	_FwFsmObjectType	"CSC_LV_NODES.pnl"	0x101	29.05.2008 15:00:27.403
fwOT_CSC_LV_NODES.states	_FwFsmObjectType	"OFF", "FwStateOKNotPhysics", "when ( $ANY$FwCHILDREN in_state ERROR ) move_to ERROR|        when ( $ALL$FwCHILDREN in_state ON )  move_to ON|", "", "", "ERROR", "FwStateAttention3", "        when ( $ALL$FwCHILDREN in_state ON )  move_to ON|        when ( $ALL$FwCHILDREN in_state {ON,OFF} )  move_to OFF|", "", "", "ON", "FwStateOKPhysics", "   when ( $ANY$FwCHILDREN in_state ERROR )  move_to ERROR|   when ( $ANY$FwCHILDREN in_state OFF )  move_to OFF|", "", "", "STANDBY", "FwStateAttention1", "when ( $ANY$FwCHILDREN in_state ERROR ) move_to ERROR|  when ( $ALL$FwCHILDREN in_state ON )  move_to ON| when ( $ANY$FwCHILDREN in_state OFF )  move_to OFF|", "", ""	0x101	30.06.2008 08:55:15.875
fwOT_CSC_LV_NODES.actions	_FwFsmObjectType	"OFF/ON", "", "1", "do ON $ALL$FwCHILDREN", "0", "OFF/STANDBY", "", "1", "do ON $ALL$FwCHILDREN", "0", "OFF/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0", "ERROR/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0", "ERROR/ON", "", "1", "do ON $ALL$FwCHILDREN", "0", "ERROR/STANDBY", "", "1", "do ON $ALL$FwCHILDREN", "0", "ON/STANDBY", "", "1", "do ON $ALL$FwCHILDREN", "0", "ON/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0", "STANDBY/ON", "", "1", "do ON $ALL$FwCHILDREN", "0", "STANDBY/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0"	0x101	30.06.2008 08:55:15.875
fwOT_CSC_LV_NODES.parameters	_FwFsmObjectType		0x141	29.05.2008 15:00:27.497
fwOT_CSC_LV_TREE_NODES.panel	_FwFsmObjectType	"CSC_LV_TREE_NODES.pnl"	0x101	29.05.2008 15:00:27.528
fwOT_CSC_LV_TREE_NODES.states	_FwFsmObjectType	"OFF", "FwStateOKNotPhysics", "when ( $ANY$FwCHILDREN in_state {ERROR,DEAD} ) move_to ERROR|        when ( $ALL$FwCHILDREN in_state ON )  move_to ON|", "", "", "ERROR", "FwStateAttention3", "        when ( $ALL$FwCHILDREN in_state ON )  move_to ON|        when ( $ALL$FwCHILDREN in_state {ON,OFF,RAMP,STANDBY} )  move_to OFF|", "", "", "ON", "FwStateOKPhysics", "when ( $ANY$FwCHILDREN in_state {ERROR,DEAD} ) move_to ERROR|   when ( $ANY$FwCHILDREN in_state {OFF,RAMP,STANDBY} )  move_to OFF|", "", ""	0x101	30.06.2008 08:55:16.156
fwOT_CSC_LV_TREE_NODES.actions	_FwFsmObjectType	"OFF/ON", "", "1", "do ON $ALL$FwCHILDREN", "0", "OFF/STANDBY", "", "1", "do ON $ALL$FwCHILDREN", "0", "OFF/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0", "ERROR/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0", "ERROR/ON", "", "1", "do ON $ALL$FwCHILDREN", "0", "ERROR/STANDBY", "", "1", "do ON $ALL$FwCHILDREN", "0", "ON/OFF", "", "1", "do OFF $ALL$FwCHILDREN", "0", "ON/STANDBY", "", "1", "do ON $ALL$FwCHILDREN", "0"	0x101	30.06.2008 08:55:16.156
fwOT_CSC_LV_TREE_NODES.parameters	_FwFsmObjectType		0x141	29.05.2008 15:00:27.622

V 10
1
LANG:1 8 (NoName)
PANEL,-1 -1 624 480 N "_3DFace" 1
"$sDpName"
E E E E E 1 -1 -1 0  10 10
""0  1
E "updateDeviceListTable()
{
// Local Variables
// ---------------
  int i;
	
  string sDeviceType;
  string sDeviceName;
  string sChannel;
  string sDPType;
	
  langString lsComment;
	
  dyn_string dsChildren, dsExceptionInfo;
  dyn_string dsTemp;
	
// Executable Code
// ---------------
  // Delete all lines to start
  deviceListTable.deleteAllLines();
	
  if (dpExists($sDpName)) {
    // Check type
    sDPType = dpTypeName($sDpName);
    if (sDPType == ELMB_DO_CONFIG_TYPE_NAME) {
      fwDevice_getChildren($sDpName,
                           fwDevice_HARDWARE,
                           dsChildren,
                           dsExceptionInfo);
    } else if (sDPType == ELMB_TYPE_NAME) {
      fwDevice_getChildren($sDpName + fwDevice_HIERARCHY_SEPARATOR + ELMB_DO_CONFIG_NAME,
                           fwDevice_HARDWARE,
                           dsChildren,
                           dsExceptionInfo);
    }
  }
	
  // Get information for each digital output and populate the table
  for (i = 1; i <= dynlen(dsChildren); i++) {
    sDPType = dpTypeName(dsChildren[i]);

    if (sDPType == ELMB_DO_TYPE_NAME) {
      fwDevice_getType(sDPType, sDeviceType, dsExceptionInfo);
      fwDevice_getName(dsChildren[i], sDeviceName, dsExceptionInfo);
      dpGet(dsChildren[i] + \".id\", sChannel);
      lsComment = dpGetDescription(dsChildren[i] + \".value\");
		
      dsTemp = strsplit(sChannel, \";\");
      sChannel = \"Port: \" + dsTemp[1] + \" Bit: \" + dsTemp[2];
		
      deviceListTable.appendLine(\"deviceName\", sDeviceName,
                                 \"comment\", lsComment,
                                 \"deviceType\", sDeviceType,
                                 \"datapointName\", dsChildren[i],
                                 \"channelNr\", sChannel);
    }
  }
	
  // Return to calling routine
  return;
}" 0
 2
"CBRef" "1"
"EClose" E
""
NC
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
2 7
"lblTitle"
""
1 10 10 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
7 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  1 E 12 12 207 35
0 2 0 "0s" 0 0 0 192 0 0  12 12 1
1
LANG:1 84 -*-Arial-*-r-normal-*-19-*-100-100-*-*-iso8859-1|-19,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 22 Manage Digital Outputs
30 8
"frmShowColumns"
""
1 470 77 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
8 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 470 10 610 80
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 12 Show Columns
25 1
"deviceListTable"
""
1 10 90 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
2 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 8 88 616 432
"main()
{
	// Put table in multiple selection mode
	deviceListTable.tableMode(TABLE_SELECT_MULTIPLE); 
	deviceListTable.selectByClick(TABLE_SELECT_LINE);
	updateDeviceListTable();
}" 0
E 1 0 1 6 1 "deviceName" 22 1 0 "s" 1
LANG:1 11 Output Line
E
1
LANG:1 0 

250 "comment" 17 0 0 "s" 1
LANG:1 7 Comment
E
1
LANG:1 0 

200 "deviceType" 17 1 0 "s" 1
LANG:1 11 Device Type
E
1
LANG:1 0 

200 "datapointName" 22 0 0 "s" 1
LANG:1 15 Data Point Name
E
1
LANG:1 0 

250 "type" 12 0 0 "s" 1
LANG:1 4 Type
E
1
LANG:1 0 

150 "channelNr" 12 1 0 "s" 1
LANG:1 11 Channel Nr.
E
1
LANG:1 0 

150 
26 26 "" 1 1
LANG:1 2 #1
8 30
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
0 1 1 1 7
1 0
13 2
"cmdCreate"
""
1 420 440 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
3 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 418 438 481 467

T 
1
LANG:1 6 Create
"main()
{
// Local Variables
// ---------------
	string sSubDpName = dpSubStr($sDpName, DPSUB_DP);
	
	dyn_float df;
	
	dyn_string ds;
  dyn_string dsTemp = strsplit(sSubDpName, fwDevice_HIERARCHY_SEPARATOR);

// Executable Code
// ---------------
	// Display panel to allow digital outputs to be created  
 	ChildPanelOnCentralModalReturn(	\"fwElmb/objects/fwElmbCreateDigitalOutput.pnl\",
							  									\"Create Device\",
   																makeDynString(\"$sDpName:\" + $sDpName, \"$sElmbLabels:\" + dsTemp[3]),
							   									df, ds);
							   									
	// Update table information
 	updateDeviceListTable();
 	
 	// Return to calling routine
 	return;
}" 0
 E E E
13 3
"cmdDelete"
""
1 487 440 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
4 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 485 438 548 467

T 
1
LANG:1 6 Delete
"main()
{
// Local Variables
// ---------------
	int i;
	
	string sDpName;
	
	dyn_int diSelectedLines;
	
	dyn_float df;
	
	dyn_string dsExceptionInfo;
	dyn_string ds;
	
// Executable Code
// ---------------
	// Get any selected lines
	diSelectedLines = deviceListTable.getSelectedLines();	
	
	if (dynlen(diSelectedLines) > 0) {
	
		// Give user the chance to cancel
		if (dynlen(diSelectedLines) == 1)
			ChildPanelOnCentralReturn(\"vision/MessageInfo\",
																\"Confirm\",
																makeDynString(\"Are you sure you want delete this digital output?\", \"OK\", \"Cancel\"),
																df, ds);
		else
			ChildPanelOnCentralReturn(\"vision/MessageInfo\",
																\"Confirm\",
																makeDynString(\"Are you sure you want delete these \" + dynlen(diSelectedLines) + \" digital outputs?\", \"OK\", \"Cancel\"),
																df, ds);
																
		if (df[1]==1) {
	
			// Indicate system is busy
			fwOpenProgressBar(\"Deleting Digital Outputs\", \"In progress. Please wait...\", 1);

			// Loop through all selected, removing the devices	
			for (i = 1; i <= dynlen(diSelectedLines); i++) {
				getValue(\"deviceListTable\", \"cellValueRC\", diSelectedLines[i], \"datapointName\", sDpName);
				fwDevice_delete(sDpName, dsExceptionInfo);
			}
			
			// Check for errors																
			if (dynlen(dsExceptionInfo) > 0) {
				fwCloseProgressBar(\"Digital Output deletion encountered errors\");
				fwExceptionHandling_display(dsExceptionInfo);
			} else {
				fwCloseProgressBar(\"Digital Output deletion completed successfully\");
			}	
	
			// Update the table information
			updateDeviceListTable();
		}
	} else {
		ChildPanelOnCentral(\"vision/MessageInfo1\",
												\"Nothing to delete\",
												makeDynString(\"No digital outputs have been selected to be deleted\"));
	}
	
	// Return to calling routine
	return;
}" 0
 E E E
13 6
"cmdClose"
""
1 554 440 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
7 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 552 438 615 467

T 
1
LANG:1 5 Close
"main()
{
	PanelOff();
}" 0
 E E E
20 9
"chkShowDescription"
""
1 480 30 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
9 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 478 28 602 72
2
T 
1
LANG:1 11 Output Line

1 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 7 Comment

0 
1
LANG:1 0 
E E
0 0 0 0 0
2
E E
E E
E"main(int button, bool state)
{
	switch (button) {
		case 0:	// ELMB name
			if (state)
				deviceListTable.namedColumnVisibility(\"deviceName\", true);
			else
				deviceListTable.namedColumnVisibility(\"deviceName\", false);
			break;
		case 1:	// Comment
			if (state)
				deviceListTable.namedColumnVisibility(\"comment\", true);
			else
				deviceListTable.namedColumnVisibility(\"comment\", false);
			break;
	}
}" 0
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
0
V 10
1
LANG:1 18 CreateELMBChannels
PANEL,-1 -1 806 620 N "_3DFace" 3
"$iChannelType"
"$sDpName"
"$sElmbLabels"
"main()
{
	int iChannelType = 0;
	
	// Check if $parameter given
	if (isDollarDefined(\"$iChannelType\"))
		iChannelType = $iChannelType;
		
	// Set the correct radio button the selected
	rbChannelType.number = iChannelType;

	modDisplayPanel(iChannelType);
	/*
	addSymbol(myModuleName(),
	          myPanelName(),
	          \"fwElmb/fwElmbAiConfigConfiguration.pnl\", 
	          \"Create analog sensor\", 
	          makeDynString(\"$sElmbLabels:\" + $sElmbLabels, \"$sDpName:\" + $sDpName), 
	          210, 43,
	          0.0,
	          0.0, 0.0);
	*/
}" 0
 E E E E 1 -1 -1 0  382 182
""0  1
E "void modDisplayPanel(int argiChannelType)
{
// Local Variables
// ---------------
  bool bValid = true;
	
  string sPanel;
  string sTitle;

// Executable Code
// ---------------
  // Remove all symbols
  removeSymbol(myModuleName(), myPanelName(), \"Create analog sensor\");
  removeSymbol(myModuleName(), myPanelName(), \"Create analog output\");
  removeSymbol(myModuleName(), myPanelName(), \"Create digital input line\");
  removeSymbol(myModuleName(), myPanelName(), \"Create digital output line\");

  // Check which selection has been made
  switch (argiChannelType) {
    case 0: // AI
      sPanel = \"fwElmb/fwElmbAiConfigConfiguration.pnl\";
      sTitle = \"Create analog sensor\";
      break;
    case 1: // AO
      sPanel = \"fwElmb/objects/fwElmbCreateAnalogOutput.pnl\";
      sTitle = \"Create analog output\";
      break;
    case 2: // DI
      sPanel = \"fwElmb/objects/fwElmbCreateDigitalInput.pnl\";
      sTitle = \"Create digital input line\";
      break;
    case 3: // DO
      sPanel = \"fwElmb/objects/fwElmbCreateDigitalOutput.pnl\";
      sTitle = \"Create digital output line\";
      break;
    default:
      bValid = false;
      break;
  }

  if (bValid) {
    // Add the correct panel symbol
    addSymbol(myModuleName(),
              myPanelName(),
              sPanel,
              sTitle,
              makeDynString(\"$sElmbLabels:\" + $sElmbLabels, \"$sDpName:\" + $sDpName),
              210, 43,
              0.0,
              0.0, 0.0);
  }

  // Return to calling routine
  return;
}
" 0
 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
30 72
"Frame1"
""
1 40 549 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
35 0 0 0 0 0
E E E
1
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 40 50 200 550
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 12 Channel Type
2 75
"txtTitle"
""
1 20 92 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
38 0 0 0 0 0
E E E
0
2
LANG:1 0 
LANG:5 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 22 17 288 41
0 2 0 "0s" 0 0 0 64 0 0  22 17 1
2
LANG:1 84 -*-Arial-*-r-normal-*-21-*-100-100-*-*-iso8859-1|-21,0,0,0,404,0,0,0,0,0,0,0,0,Arial
LANG:5 107 -microsoft windows-Arial-normal-r-normal-*-*-180-100-100-*-*-iso8859-1|-21,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
2
LANG:1 20 Create Elmb Channels
LANG:5 16 Create Elmb Node
19 0
"rbChannelType"
""
1 50 70 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
1 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 48 68 162 152
4
T 
1
LANG:1 12 Analog Input

0 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 13 Analog Output

0 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 13 Digital Input

0 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 14 Digital Output

0 
1
LANG:1 0 
E E
0 0 0 0 0
1
E "main(int button)
{
// Local Variables
// ---------------
// None

// Executable Code
// ---------------
  modDisplayPanel(button);
	
  // Return to calling routine
  return;
}" 0

0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
0
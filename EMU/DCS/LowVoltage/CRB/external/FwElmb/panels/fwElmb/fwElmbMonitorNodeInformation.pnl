V 10
1
LANG:1 29 ELMB Monitor Node Information
PANEL,530 207 539 310 N "_3DFace" 1
"$sDpName"
"main()
{
// Local Variables
// ---------------
	bool bStatus;
	
	string sELMB;
	string sBootupCounter;
	string sEMCounter;
	string sEMBuffer;
	string sEMBufferIndex;
	string sErrorStateCounter;
	string sResetTime;
	
// Executable Code
// ---------------
	// Get ELMB being used
	sELMB = $sDpName;
	
	bStatus = fwElmbMonitorLib_getConnectDPEs(sELMB,
																						sBootupCounter,
																						sEMCounter,
																						sEMBuffer,
																						sEMBufferIndex,
																						sErrorStateCounter,
																						sResetTime);

	if (bStatus) {
	
		// Connect all required fields
		dpConnect(\"cbkBootupCounter\", sBootupCounter);
		dpConnect(\"cbkErrorStateCounter\", sErrorStateCounter);
		dpConnect(\"cbkLastResetTime\", sResetTime);
		dpConnect(\"cbkEmergencyMessages\", sEMCounter, sEMBufferIndex, sEMBuffer);
		
		// Display information regarding the max number of emergency message that will be shown
		lblMaxNumberShown.text = \"Maximum of last \" + ELMB_MONITOR_EM_BUFFER_SIZE + \" displayed\";
	}
	
	dpConnect(\"cbkActiveRunning\",
						ELMB_MONITOR_DPNAME + \".running\", ELMB_MONITOR_DPNAME + \".active\",
						sELMB + \".monitoring.autoActions.active\", sELMB + \".monitoring.active\");
		
	// Return to calling routine
	return;
}

void cbkEmergencyMessages(string sDpeEMCounter, unsigned uEMCounter,
													string sDpeEMBufferIndex, unsigned uEMIndex,
													string sDpeEMBuffer, dyn_string dsEMBuffer)
{
// Local Variables
// ---------------
	int i;
	int iBufferLen;
	int iIndex;
	
	dyn_string dsOrderedBuffer;

// Executable Code
// ---------------
	// Enter the 'easy' bits of information into the relevant fields
	txtEmergencyMessageCounter.text = uEMCounter;
	txtCurrentIndex.text = uEMIndex;
	dynClear(dsOrderedBuffer);
	
	// Now need to order the emergency messages, latest at the top of the list. The index always
	// points to the next entry point (unless no messages exist, in which case the index is zero).
	if (uEMIndex > 0) {
	
		// Get length of buffer given
		iBufferLen = dynlen(dsEMBuffer);
	
		iIndex = uEMIndex;
		for (i = 0; i < iBufferLen; i++) {
			iIndex--;
			if (iIndex < 1)
				iIndex = ELMB_MONITOR_EM_BUFFER_SIZE;
			dynAppend(dsOrderedBuffer, dsEMBuffer[iIndex]);
		}
	}
	
	// Enter the ordered emergency messages into the list box
	lstEmergencyMessages.items = dsOrderedBuffer;
	
	// Return to calling routine
	return;
}

void cbkBootupCounter(string sDpName, unsigned uValue)
{
	txtBootupMessageCounter.text = uValue;
	return;
}

void cbkErrorStateCounter(string sDpName, unsigned uValue)
{
	txtErrorStateCounter.text = uValue;
	return;
}

void cbkLastResetTime(string sDpName, time tValue)
{
	txtLastResetTime.text = tValue;
	return;
}

void cbkActiveRunning(string sDpMonitorRunning, bool bMonitorRunning,
											string sDpMonitorActive, bool bMonitorActive,
											string sDpElmbMonitorRunning, bool bElmbMonitorRunning,
											string sDpAutoActionsActive, bool bAutoActionsActive)
{
// Local Variables
// ---------------
	string sBusAndElmb;
	string sText;
	
// Executable Code
// ---------------
	// Get name of DP without system name (easier to read)
	sBusAndElmb = dpSubStr($sDpName, DPSUB_DP);
	
	// Check for all necessary settings for the 'running' state
	if (bMonitorRunning && bMonitorActive && bElmbMonitorRunning) {
	
		// Check for automatic actions active
		if (bAutoActionsActive)
			sText = sBusAndElmb + \": Monitor and Automatic Actions active\";
		else
			sText = sBusAndElmb + \": Monitor active, Automatic Actions inactive\";
	} else {
		sText = sBusAndElmb + \": Monitor inactive\";
	}
		
	// Display required text
	txtStatus.text = sText;
	
	// Return to calling routine
	return;
}
" 0
EE E E 1 -1 -1 0  10 10
"" 0 1
EE 2
"CBRef""1"
"EClose"E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
30 4
"frmMonitorData"
""
1 10 270 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
5 0 0 0 0 0
EE E
1
1
LANG:1 0 
0
E E 0 1 1 0 1 E U  0 E 10 10 530 270
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 12 Monitor Data
2 7
"lblLastResetTime"
""
1 80 240 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
8 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 82 242 188 258
0 2 0 "s" 0 0 0 64 0 0  82 242
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 16 Last Reset Time:
2 8
"txtLastResetTime"
""
1 200 240 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
9 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 202 242 508 258
1 2 0 "s" 0 0 0 64 0 0  202 242
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 0 
2 9
"lblBootupMessageCounter"
""
1 20 30 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
10 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 22 32 178 48
0 2 0 "s" 0 0 0 64 0 0  22 32
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 23 Bootup Message Counter:
2 10
"txtBootupMessageCounter"
""
1 200 30 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
11 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 202 32 258 48
1 2 0 "s" 0 0 0 65 0 0  202 32
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 0 
2 11
"lblEmergencyMessageCounter"
""
1 20 60 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
12 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 22 62 198 78
0 2 0 "s" 0 0 0 64 0 0  22 62
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 26 Emergency Message Counter:
2 12
"txtEmergencyMessageCounter"
""
1 200 60 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
13 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 202 62 258 78
1 2 0 "s" 0 0 0 65 0 0  202 62
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 0 
2 13
"lblErrorStateCounter"
""
1 270 30 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
14 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 272 32 388 48
0 2 0 "s" 0 0 0 64 0 0  272 32
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 20 Error State Counter:
2 14
"txtErrorStateCounter"
""
1 450 30 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
15 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 452 32 508 48
1 2 0 "s" 0 0 0 65 0 0  452 32
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 0 
2 16
"lblEmergencyMessages"
""
1 20 90 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
17 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 22 92 158 108
0 2 0 "s" 0 0 0 64 0 0  22 92
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 19 Emergency Messages:
2 17
"lblCurrentIndex"
""
1 270 60 E E E 1 E 0 E N "_WindowText" E N "_Transparent" E E
 E E
18 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 272 62 358 78
0 2 0 "s" 0 0 0 64 0 0  272 62
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 14 Current Index:
2 18
"txtCurrentIndex"
""
1 450 60 E E E 1 E 0 E N "_WindowText" E N "_Transparent" E E
 E E
19 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 452 62 508 78
1 2 0 "s" 0 0 0 65 0 0  452 62
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 0 
2 22
"txtStatus"
""
1 10 280 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
22 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 12 282 468 298
0 2 0 "s" 0 0 0 64 0 0  12 282
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 0 
2 23
"lblMaxNumberShown"
""
1 20 120 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
23 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 22 122 188 138
0 2 0 "s" 0 0 0 64 0 0  22 122
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 0 
17 15
"lstEmergencyMessages"
""
1 200 90 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
16 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
198 88 512 232
0
E
E
E

3 1
26 19
"cmdReset"
""
1 20 240 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
20 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
18 238 72 262
0 1
LANG:1 5 Reset
"" 0 0 0 0 0
2 1 1
LANG:1 8 Counters
"cmdResetCounters" 0 0 0 0 0
1 1
LANG:1 6 Buffer
"cmdResetBuffer" 0 0 0 0 0
E "main(string id)
{
// Local Variables
// ---------------
	string sELMB;

// Executable Code
// ---------------
	// Get ELMB being used
	sELMB = $sDpName;
	
	if (id == \"cmdResetCounters\") {
		// Reset the counters for this ELMB
		fwElmbMonitorLib_resetCounters(sELMB);
	} else if (id == \"cmdResetBuffer\") {
		// Reset the emergency message buffer for this ELMB
		fwElmbMonitorLib_resetBuffer(sELMB);
	}

	// Return to calling routine
	return;
}" 0
 0 
13 21
"cmdClose"
""
1 480 280 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
21 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
478 278 532 302
T 
1
LANG:1 5 Close
"main()
{
	PanelOff();
}" 0
 E E E
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
0
V 10
1
LANG:1 0 
PANEL,-1 -1 310 409 N "_3DFace" 1
"$elmbDp"
"main()
{
  //setup the AI channel mapping
  list3v3_1   = makeDynInt(0,2,4,6,8,10,12,14,32);
  list3v3_2   = makeDynInt(1,3,5,7,9,11,13,15,33);
  list5v      = makeDynInt(56,55,54,53,52,51,50,49,48);
  list1v5     = makeDynInt(20,21);
  listCCB     = makeDynInt(35,19);
  listMPC     = makeDynInt(34,57);
  listStandby = makeDynInt(16,17,18);
  
  voltageColors[-1] = \"FwStateOKNotPhysics\"; // OFF
  voltageColors[0] = \"FwStateOKPhysics\";     // ON & OK
  voltageColors[1] = \"FwStateAttention2\";    // Warning
  voltageColors[2] = \"FwStateAttention3\";    // Error
  
  string elmbDp = $elmbDp;

  //connect the monitor to the crate
  dyn_string aiDps = dpNames(elmbDp + \"*\", \"FwElmbAi\");
  for (int i=1; i <= dynlen(aiDps); i++) {
    dpConnect(\"aiUpdatedCB\", true, aiDps[i] + \".channel\", aiDps[i] + \".value\");
  }
  
  // hook up the elmb state
  dpConnect(\"elmbStateUpdatedCB\", true, $elmbDp + \".state.noToggle\");
}
" 0
 E E E E 1 -1 -1 0  0 0
""0  1
E "//AI channel mapping
dyn_int list3v3_1;
dyn_int list3v3_2;
dyn_int list5v;
dyn_int list1v5;
dyn_int listCCB;
dyn_int listMPC;
dyn_int listStandby;
mapping voltageColors;

void elmbStateUpdatedCB(string dpe, int state) {
  if (state == 5) { // OPERATIONAL
    updateAllVoltages();
  } else {
    for (int i=0; i < 11; i++) { // clear the first table
      pairsTable.cellBackColRC(i, \"3v3_1\", \"White\");
      pairsTable.cellBackColRC(i, \"3v3_2\", \"White\");
      pairsTable.cellBackColRC(i, \"5v\", \"White\");
      pairsTable.cellValueRC(i, \"3v3_1\", \"\");
      pairsTable.cellValueRC(i, \"3v3_2\", \"\");
      pairsTable.cellValueRC(i, \"5v\", \"\");
    }
    tableOther.cellBackColRC(0, \"1v5_1\", \"White\");
    tableOther.cellBackColRC(0, \"1v5_2\", \"White\");
    tableOther.cellValueRC(0, \"1v5_1\", \"\");
    tableOther.cellValueRC(0, \"1v5_2\", \"\");
    tableStandby.cellBackColRC(0, \"standby_5v_1\", \"White\");
    tableStandby.cellBackColRC(0, \"standby_5v_2\", \"White\");
    tableStandby.cellBackColRC(0, \"standby_10v\", \"White\");
    tableStandby.cellValueRC(0, \"standby_5v_1\", \"\");
    tableStandby.cellValueRC(0, \"standby_5v_2\", \"\");
    tableStandby.cellValueRC(0, \"standby_10v\", \"\");
  }
}

// ---------============== MONITOR ===============---------------
void aiUpdatedCB(string aiChannelsDpe, dyn_string channels, string aiValueDpe, float voltage){
  int channel = channels[1]; // in theory there can be multiple channels, but actually there's only one
  
  //emu_debug(\"Voltage changed on channel \" + channel + \": \" + voltage + \" V\", emu_DEBUG_DETAIL);
  
  string strVoltage;
  sprintf(strVoltage, \"%.2f\", voltage);
  
  // 3.3V line 1 of TMB/DMB
  int index = dynContains(list3v3_1, channel);
  if (index) {
    pairsTable.cellValueRC(index - 1, \"3v3_1\", strVoltage);
    pairsTable.cellBackColRC(index - 1, \"3v3_1\", voltageColors[checkVoltage(voltage, 3.3)]);
  }
  // 3.3V line 2 of TMB/DMB
  index = dynContains(list3v3_2, channel);
  if (index) {
    pairsTable.cellValueRC(index - 1, \"3v3_2\", strVoltage);
    pairsTable.cellBackColRC(index - 1, \"3v3_2\", voltageColors[checkVoltage(voltage, 3.3)]);
  }
  // 5V line of TMB/DMB
  index = dynContains(list5v, channel);
  if (index) {
    pairsTable.cellValueRC(index - 1, \"5v\", strVoltage);
    pairsTable.cellBackColRC(index - 1, \"5v\", voltageColors[checkVoltage(voltage, 5.0)]);
  }
  
  // CCB
  index = dynContains(listCCB, channel);
  // CCB 3.3V
  if (index == 1) {
    pairsTable.cellValueRC(9, \"3v3_1\", strVoltage);
    pairsTable.cellBackColRC(9, \"3v3_1\", voltageColors[checkVoltage(voltage, 3.3)]);
  }
  // CCB 5V
  if (index == 2) {
    pairsTable.cellValueRC(9, \"5v\", strVoltage);
    pairsTable.cellBackColRC(9, \"5v\", voltageColors[checkVoltage(voltage, 5.0)]);
  }

  // MPC
  index = dynContains(listMPC, channel);
  // MPC 3.3V
  if (index == 1) {
    pairsTable.cellValueRC(10, \"3v3_1\", strVoltage);
    pairsTable.cellBackColRC(10, \"3v3_1\", voltageColors[checkVoltage(voltage, 3.3)]);
  }
  // MPC 5V
  if (index == 2) {
    pairsTable.cellValueRC(10, \"5v\", strVoltage);
    pairsTable.cellBackColRC(10, \"5v\", voltageColors[checkVoltage(voltage, 5.0)]);
  }
  
  // 1.5 V lines
  index = dynContains(list1v5, channel);
  // line 1
  if (index == 1) {
    tableOther.cellValueRC(0, \"1v5_1\", strVoltage);
    tableOther.cellBackColRC(0, \"1v5_1\", voltageColors[checkVoltage(voltage, 1.5)]);
  }
  // line 2
  if (index == 2) {
    tableOther.cellValueRC(0, \"1v5_2\", strVoltage);
    tableOther.cellBackColRC(0, \"1v5_2\", voltageColors[checkVoltage(voltage, 1.5)]);
  }
  
  // 1.5 V lines
  index = dynContains(listStandby, channel);
  // line 1: 5V
  if (index == 1) {
    tableStandby.cellValueRC(0, \"standby_5v_1\", strVoltage);
    tableStandby.cellBackColRC(0, \"standby_5v_1\", voltageColors[checkVoltage(voltage, 5)]);
  }
  // line 2: 5V
  if (index == 2) {
    tableStandby.cellValueRC(0, \"standby_5v_2\", strVoltage);
    tableStandby.cellBackColRC(0, \"standby_5v_2\", voltageColors[checkVoltage(voltage, 5)]);
  }
  // line 3: 10V ??
  if (index == 3) {
    tableStandby.cellValueRC(0, \"standby_10v\", strVoltage);
    tableStandby.cellBackColRC(0, \"standby_10v\", voltageColors[checkVoltage(voltage, 10)]);
  }
}

// returns 0 if OK, 1 if warning, 2 if error, -1 is OFF
int checkVoltage(float actual, float expected) {
  float warnThreshold = ((float) spinWarnThreshold.text) / 1000;
  float errorThreshold = ((float) spinErrorThreshold.text) / 1000;
  float maxOffVoltage = ((float) spinOffVoltage.text) / 1000;
  
  int ret = 0;
  
  if (actual < maxOffVoltage) {
    return -1;
  }
  
  if (actual < (expected - warnThreshold) ||
      actual > (expected + warnThreshold)){
    ret = 1;
  }
  if (actual < (expected - errorThreshold) ||
      actual > (expected + errorThreshold)){
    ret = 2;
  }
  
  return ret;
}

void updateAllVoltages() {
  dyn_string aiDps = dpNames($elmbDp + \"*\", \"FwElmbAi\");
  for (int i=1; i <= dynlen(aiDps); i++) {
    float voltage;
    dyn_string channels;
    dpGet(aiDps[i] + \".value\", voltage);
    dpGet(aiDps[i] + \".channel\", channels);
    aiUpdatedCB(aiDps[i] + \".channel\", channels, aiDps[i] + \".value\", voltage);
  }
}" 0
 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
25 1
"pairsTable"
""
1 258.571428571429 214 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
3 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 8 118 302 298
"main()
{
  //write slot numbers
  for (int i=1; i <= 9; i++) {
    this.appendLine(\"board\", \"TMB/DMB \" + i);
    //sthis.appendLine(\"5v\", \"\");
  }
  this.appendLine(\"board\", \"CCB/MPC\");
  this.appendLine(\"board\", \"VCC\");
}" 0
E 1 0 1 4 9 "board" 8 1 0 "s" 1
LANG:1 5 Board
E
1
LANG:1 0 

85 "3v3_1" 6 1 0 "s" 1
LANG:1 11 3.3V line 1
E
1
LANG:1 0 

70 "3v3_2" 6 1 0 "s" 1
LANG:1 11 3.3V line 2
E
1
LANG:1 0 

70 "5v" 6 1 0 "s" 1
LANG:1 7 5V line
E
1
LANG:1 0 

70 
14 14 "" 1 1
LANG:1 6 Slot 1
"" 1 1
LANG:1 6 Slot 2
"" 1 1
LANG:1 6 Slot 3
"" 1 1
LANG:1 6 Slot 4
"" 1 1
LANG:1 6 Slot 5
"" 1 1
LANG:1 6 Slot 6
"" 1 1
LANG:1 6 Slot 7
"" 1 1
LANG:1 6 Slot 3
"" 1 1
LANG:1 6 Slot 9
10 46
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
0 0 0 1 7
1 0
25 2
"tableOther"
""
1 155.714285714286 214 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
5 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 8 308 182 349
"main()
{
  this.appendLine(\"1v5_1\", \"\");
}" 0
E 1 0 1 2 9 "1v5_1" 9 1 0 "s" 1
LANG:1 11 1.5V line 1
E
1
LANG:1 0 

90 "1v5_2" 8 1 0 "s" 1
LANG:1 11 1.5V line 2
E
1
LANG:1 0 

80 
14 14 "" 1 1
LANG:1 6 Slot 1
"" 1 1
LANG:1 6 Slot 2
"" 1 1
LANG:1 6 Slot 3
"" 1 1
LANG:1 6 Slot 4
"" 1 1
LANG:1 6 Slot 5
"" 1 1
LANG:1 6 Slot 6
"" 1 1
LANG:1 6 Slot 7
"" 1 1
LANG:1 6 Slot 3
"" 1 1
LANG:1 6 Slot 9
10 46
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
0 0 0 1 7
1 0
21 3
"spinWarnThreshold"
""
1 132 42 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
6 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 130 40 254 63
0

E
"main()
{
  updateAllVoltages();
}" 0

E

N 0 5000 1 200 1 1
2 4
"PRIMITIVE_TEXT1"
""
1 12 42 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
7 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 12 42 125 56
0 2 2 "0s" 0 0 0 192 0 0  12 42 1
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 23 Warning threshold (mV):
2 5
"PRIMITIVE_TEXT2"
""
1 14 74 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
9 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 14 74 109 88
0 2 2 "0s" 0 0 0 192 0 0  14 74 1
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 21 Error threshold (mV):
21 6
"spinErrorThreshold"
""
1 132 72 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
11 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 130 70 254 93
0

E
"main()
{
  updateAllVoltages();
}" 0

E

N 0 5000 1 500 1 1
21 7
"spinOffVoltage"
""
1 132 12 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
13 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 130 10 254 33
0

E
"main()
{
  updateAllVoltages();
}" 0

E

N 0 5000 1 100 1 1
2 8
"PRIMITIVE_TEXT3"
""
1 12 12 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
15 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 12 12 120 26
0 2 2 "0s" 0 0 0 192 0 0  12 12 1
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 21 Max OFF voltage (mV):
25 9
"tableStandby"
""
1 258.571428571429 264 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
17 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 8 358 302 399
"main()
{
  this.appendLine(\"1v5_1\", \"\");
}" 0
E 1 0 1 3 9 "standby_5v_1" 9 1 0 "s" 1
LANG:1 12 5V Standby 1
E
1
LANG:1 0 

90 "standby_5v_2" 8 1 0 "s" 1
LANG:1 12 5V Standby 2
E
1
LANG:1 0 

80 "standby_10v" 12 1 0 "s" 1
LANG:1 15 10V?? Standby 3
E
1
LANG:1 0 

118 
14 14 "" 1 1
LANG:1 6 Slot 1
"" 1 1
LANG:1 6 Slot 2
"" 1 1
LANG:1 6 Slot 3
"" 1 1
LANG:1 6 Slot 4
"" 1 1
LANG:1 6 Slot 5
"" 1 1
LANG:1 6 Slot 6
"" 1 1
LANG:1 6 Slot 7
"" 1 1
LANG:1 6 Slot 3
"" 1 1
LANG:1 6 Slot 9
10 46
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
0 0 0 1 7
1 0
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
0
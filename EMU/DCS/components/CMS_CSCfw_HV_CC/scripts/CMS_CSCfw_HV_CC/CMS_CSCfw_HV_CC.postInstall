#uses "CMS_CSCfw_HV_CC/emuDcs.ctl"
#uses "CMS_CSCfw_HV_CC/emuDcs2.ctl"
#uses "CMS_CSCfw_HV_CC/emuDcs3.ctl"
#uses "CMS_CSCfw_HV_CC/emuDcs4.ctl"
#uses "CMS_CSCfw_HV_CC/emuDcsDim.ctl"
#uses "CMS_CSCfw_HV_CC/emuAlert.ctl"
#uses "CMS_CSCfw_HV_CC/emufw.ctl"

#uses "CMS_CSCfw_HV_CC/mudcs0CreateAllTypes.ctl"
#uses "CMS_CSCfw_HV_CC/mudcs1DbCreate.ctl"
#uses "CMS_CSCfw_HV_CC/mudcs2FsmCreate.ctl"
#uses "CMS_CSCfw_HV_CC/mudcs3AlertCreate.ctl"
#uses "CMS_CSCfw_HV_CC/mudcs4SetFsmPanels.ctl"
#uses "CMS_CSCfw_HV_CC/mudcs5Archive.ctl"

#uses "CMS_CSCfw_LV_CRB/mudcs9XAlertReconfigAllSlowControls.ctl"
#uses "aes.ctl"

#uses "CMS_CSC_common/emu_common.ctl"
#uses "CMS_CSC_common/emu_alert.ctl"

/** if this flag is set to true the full component installation is performed, otherwise only patch() is called. */
global const bool EMU_HVCC_INSTALLATION_FULL = true;


main(){



  int i;
dyn_int disk_numbers;


//------------------------------------
dyn_int dist_connections;
int n, found;

while(1){
 dpGet("_DistConnections.Dist.ManNums",dist_connections);
 n=dynlen(dist_connections);

 delay(3);
 if(n >= 1){
 found=0;
  for(i=1;i <= n ;i++){
   if(dist_connections[i]==161 || dist_connections[i]==162 || dist_connections[i]==163 )
   found++;  // the LV project should be connected
  }
  if(found>=1){
   delay(20);
   break;
  }
 }
 DebugTN("postinstall: NOT ENOUGH DISTANT CONNECTIONS: CHECK THE CHILD PROJECTS ARE RUNNING  ========================== "+ dist_connections);   
  
}
//-------------------------------------
dyn_string watch_dps=dpNames("WATCH_TIME*","MUDCS_TIME");
for(i=1;i<=dynlen(watch_dps);i++)dpDelete(watch_dps[i]);

//-------------------------------------

string os=getenv("OS");
string add_to_system_command="";
if (os !="Linux")add_to_system_command="cmd /c ";
 
 mudcsInit();
  
fwInstallation_appendManager(TRUE, "fwCMS_CSCfw_HV_CC Visual Server", "PVSS00ui", 
"always", 30, 2, 2, "-m vision -p CMS_CSCfw_HV_CC/emuEmuVisualServerNew.pnl");

fwInstallation_appendManager(TRUE, "fwInstallation", "PVSS00ui", 
"manual", 30, 2, 2, "-m vision -p fwInstallation/fwInstallation.pnl");
 
//if (os =="Linux")fwInstallation_appendManager(TRUE, "fwCMS_CSCfw_HV_CC delete_old_lib_versions", "PVSS00ctrl", 
//"manual", 30, 2, 2, "-num 11 CMS_CSCfw_HV_CC/delete_old_lib_versions.ctl");

fwInstallation_appendManager(TRUE, "fwCMS_CSCfw_HV_CC server", "PVSS00ctrl", 
"always", 30, 2, 2, "-num 11 CMS_CSCfw_HV_CC/emuEmuVisualServer.ctl");

fwInstallation_appendManager(TRUE, "fwCMS_CSCfw_HV_CC server", "PVSS00ctrl", 
"manual", 30, 2, 2, "-num 12 CMS_CSCfw_HV_CC/mudcsServer.ctl");

fwInstallation_appendManager(TRUE, "X2P data handler", "PVSS00ctrl", 
"always", 30, 2, 2, "-num 18 libs/CMS_CSCfw_HV_CC/emu_x2pDataProcessing.ctl");

fwInstallation_appendManager(TRUE, "Communication Timeout Handler", "PVSS00ctrl", 
"always", 30, 2, 2, "-num 19 libs/CMS_CSCfw_HV_CC/emu_commTimeoutHandling.ctl");

if (os =="Linux")system("cd "+CSC_fwG_g_project_name_home+"/source/"+CSC_fwG_g_Component+"/delete_processes_by_name;make");
if (os =="Linux")system("dos2unix "+CSC_fwG_g_project_name_home+"/source/"+CSC_fwG_g_Component+"/special_stuff/*");
if (os =="Linux")system("chmod 755 "+CSC_fwG_g_project_name_home+"/source/"+CSC_fwG_g_Component+"/special_stuff/*");
if (os =="Linux")system("chmod 755 "+CSC_fwG_g_project_name_home+"/source/"+CSC_fwG_g_Component+"/unix2dos/*");
if (os =="Linux")system("cp "+CSC_fwG_g_project_name_home+"/source/"+CSC_fwG_g_Component+"/special_stuff/start_servers "+CSC_fwG_g_project_name_home+"/bin/.");
if (os =="Linux")system("ln -s /usr/bin/X11/nedit $HOME/bin/xemacs");

//-------------------------------------------------------
dynClear(disk_numbers);

for(i=1;i<=dynlen(CSC_fwG_g_idisk_cross_numbers);i++){
  dynAppend(disk_numbers,CSC_fwG_g_idisk_cross_numbers[i]);
}
  
//------------------------------------------------------

//  mudcsSynchSystemPoratbleOS(os,"cat "+CSC_fwG_g_project_name_home+"/source/"+CSC_fwG_g_Component+"/config/CMS_CSCfw_HV_CC_add.config >> "+CSC_fwG_g_project_name_home+"/config/config");
// if(!dynContains(disk_numbers,CSC_fwG_g_StationWithFsmHwTree)){
//   if(!CSC_fwG_g_904)   
//  mudcsSynchSystemPoratbleOS(os,"cat "+CSC_fwG_g_project_name_home+"/source/"+CSC_fwG_g_Component+"/config/CMS_CSCfw_HV_CC_add2.config >> "+CSC_fwG_g_project_name_home+"/config/config");
//   else 
//  mudcsSynchSystemPoratbleOS(os,"cat "+CSC_fwG_g_project_name_home+"/source/"+CSC_fwG_g_Component+"/config/CMS_CSCfw_HV_CC_add2_904.config >> "+CSC_fwG_g_project_name_home+"/config/config");     
// }

dpDelete("CMS_CSC_GAS");

mudcsStartHvCcInstallation();

//  if(os=="Linux"){
//   system("PVSS00ctrl -num 15 CMS_CSCfw_HV_CC/mudcsCreateHV_CC.ctl &");
//        
//  }
//  else{ 
//   system("cmd /c PVSS00ctrl -num 15 CMS_CSCfw_HV_CC/mudcsCreateHV_CC.ctl");
//  }
// 
} 
 




// **************============= HV CC installation ==========************

mudcsStartHvCcInstallation(){
  
  for (int i=2; i <= 7; i++) {
    string dimConfDp = "_DimClient_" + i;
    if (!dpExists(dimConfDp)) {
      dpCreate(dimConfDp, "_FwDimConfig");
    }
  }
  
  mudcsInit();

  dpSetWait(CSC_fwG_g_SYSTEM_NAME+":MYWARNING.value","postinstall_start");
  
  if (!EMU_HVCC_INSTALLATION_FULL) {
    patch();
    dpSetWait(CSC_fwG_g_SYSTEM_NAME+":MYWARNING.value","postinstall_finish");
    return;
  }
  
//int is_exist=fwFsmTree_isNode(CSC_fwG_g_csc_part);
//if(is_exist)
mudcsDeleteAllTrees();

  mudcsCreateAllTypesMain();
  mudcsDbCreateMain(); 
  mudcsFsmCreateMain();
  mudcsAlertCreateMain(); 
  mudcsSetFsmPanelsMain();
// obsolete: mudcsArchiveMain(true);
//  setupArchiving(CSC_fwG_g_idisk_cross_numbers); // Xiaofeng+Evaldas Archiving

  dpSetWait(CSC_fwG_g_SYSTEM_NAME+":MYWARNING.value","postinstall_finish");
}

/**
  * This function is called when EMU_HVCC_INSTALLATION_FULL is FALSE. Put the desired patch actions here.
  */
void patch() {
  emu_info("Updating all alert classes");
  emuAlert_updateAllAlertClasses();
  emu_info("Done updating alert classes");
  
  dyn_string list;
  dpGet("Db_o.PCToManID", list);
  for (int i=1; i <= dynlen(list); i++) {
    string host = list[i];
    host = strtolower(host);
    if (host == "dcspcs2g19-06") {
      list[i] = "csc-dcs-pc1";
    }
    if (host == "dcspcs2g19-04") {
      list[i] = "csc-dcs-pc2";
    }
  }
  dpSet("Db_o.PCToManID", list);
  
  dpGet("Db_o.DimServerComputerList", list);
  for (int i=1; i <= dynlen(list); i++) {
    string host = list[i];
    host = strtolower(host);
    if (host == "dcspcs2g19-06") {
      list[i] = "csc-dcs-pc1";
    }
    if (host == "dcspcs2g19-04") {
      list[i] = "csc-dcs-pc2";
    }
  }
  dpSet("Db_o.DimServerComputerList", list);
  
}

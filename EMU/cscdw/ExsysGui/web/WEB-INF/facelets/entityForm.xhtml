<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:ice="http://www.icesoft.com/icefaces/component"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:c="http://java.sun.com/jstl/core"
      xmlns:exs="http://www.cern.ch/cms/csc/exsys/gui"
      xmlns:u1="http://www.cern.ch/cms/csc/exsys/gui">

    <body>

        <ui:composition>
            <ice:commandButton value="Discard new value" action="#{CreateRule.discardAndGoBack}"
                               rendered="#{(editor.inputType == 'SELECT_ONE_MENU') and (editor.valueNew)}"
                               immediate="true"/>
            <ice:commandButton value="Go back" action="#{CreateRule.goBack}"
                               rendered="#{editor.parentEditor != null}"/>

            <ice:panelGrid columns="3">
                <c:forEach var="propEditor" items="#{editor.propertyEditors}">

                    <ice:outputLabel for="input_#{propEditor.id}">
                        <ice:outputText value="#{propEditor.metadata.title}: "/>
                    </ice:outputLabel>
                    <ice:panelGrid columns="1">
                        <!-- DEFAULT editor - simple inputText -->
                        <ice:inputText id="input_#{propEditor.id}" value="#{propEditor.value}" partialSubmit="true"
                                       converter="#{propEditor.converter}"
                                       validator="#{propEditor.validate}"
                                       required="#{propEditor.metadata.isMandatory}"
                                       requiredMessage="This field is mandatory - value cannot be blank"
                                       rendered="#{propEditor.inputType == 'DEFAULT'}"/>
                        <!-- TEXT_AREA editor - used for larger string properties -->
                        <ice:inputTextarea id="input_#{propEditor.id}" value="#{propEditor.value}" partialSubmit="true"
                                           converter="#{propEditor.converter}"
                                           validator="#{propEditor.validate}"
                                           required="#{propEditor.metadata.isMandatory}"
                                           requiredMessage="This field is mandatory - value cannot be blank"
                                           rendered="#{propEditor.inputType == 'TEXT_AREA'}"/>
                        <!-- DATE_PICKER editor - used for date properties -->
                        <ice:selectInputDate id="input_#{propEditor.id}" value="#{propEditor.value}" partialSubmit="true"
                                             validator="#{propEditor.validate}"
                                             required="#{propEditor.metadata.isMandatory}"
                                             requiredMessage="This field is mandatory - value cannot be blank"
                                             renderAsPopup="true"
                                             rendered="#{propEditor.inputType == 'DATE_PICKER'}"/>
                        <!-- SELECT_ONE_MENU editor - used for enumerated properties and many-to-one relations -->
                        <ice:panelGroup rendered="#{propEditor.inputType == 'SELECT_ONE_MENU'}">
                            <ice:selectOneMenu id="input_#{propEditor.id}" value="#{propEditor.value}" partialSubmit="true"
                                               converter="#{propEditor.converter}"
                                               validator="#{propEditor.validate}"
                                               required="#{propEditor.metadata.isMandatory}"
                                               requiredMessage="This field is mandatory - value cannot be blank">
                                <f:selectItems value="#{propEditor.listOfValues}"/>
                            </ice:selectOneMenu>
                            <ice:commandButton value="Edit"
                                               immediate="true"
                                               rendered="#{!propEditor.restrictionStrict}">
                                <f:setPropertyActionListener target="#{CreateRule.editor}" value="#{propEditor}"/>
                            </ice:commandButton>
                            <ice:commandButton value="Create New"
                                               immediate="true"
                                               actionListener="#{propEditor.createAndAssignNewLovItem}"
                                               rendered="#{!propEditor.restrictionStrict}">
                                <f:setPropertyActionListener target="#{CreateRule.editor}" value="#{propEditor}"/>
                            </ice:commandButton>
                        </ice:panelGroup>
                        <!-- ONE-TO-ONE editor - input text just so that validation would be applied -->
                        <ice:panelGroup rendered="#{propEditor.inputType == 'ONE_TO_ONE'}">
                            <ice:inputText id="input_#{propEditor.id}" value="#{propEditor.value.entityTitle}"
                                           rendered="#{propEditor.inputType == 'ONE_TO_ONE'}"
                                           required="#{propEditor.metadata.isMandatory}"
                                           requiredMessage="This field is mandatory - value cannot be blank"
                                           validator="#{propEditor.validate}"
                                           readonly="true"
                                           partialSubmit="true"/>
                            <ice:commandButton type="submit" value="Edit"
                                               rendered="#{propEditor.inputType == 'ONE_TO_ONE'}"
                                               immediate="true">
                                <f:setPropertyActionListener target="#{CreateRule.editor}" value="#{propEditor}"/>
                            </ice:commandButton>
                        </ice:panelGroup>
                        <!-- COMPONENT editor - select input text -->
                        <ice:panelGrid columns="2"
                                       rendered="#{propEditor.inputType == 'COMPONENT'}">
                            <ice:panelGrid columns="1">
                                <ice:selectInputText id="input_#{propEditor.id}"
                                    rows="#{propEditor.matchesToDisplay}"
                                    width="300"
                                    value="#{propEditor.componentName}"
                                    valueChangeListener="#{propEditor.componentInputValueChanged}"
                                    listVar="cmp"
                                    required="#{propEditor.metadata.isMandatory}"
                                    requiredMessage="This field is mandatory - value cannot be blank"
                                    listValue="#{propEditor.componentMatches}">
                                    <f:facet name="selectInputText">
                                        <ice:panelGrid columns="2" columnClasses="componentMatchesName componentMatchesType">
                                            <ice:outputText value="#{cmp.name}"/>
                                            <ice:outputText value="#{cmp.type.type.value}" style="font-style: italic" />
                                        </ice:panelGrid>
                                    </f:facet>
                                </ice:selectInputText>
                                <ice:panelGroup rendered="#{propEditor.componentClassLimited}">
                                    <h:outputText value="Limited to class "/>
                                    <ice:panelSeries value="#{propEditor.componentClassLimit}" var="cc" varStatus="status">
                                        <h:outputText value="#{cc.type.value} "/>
                                        <ice:outputText value="," rendered="#{!(status.index == status.end)}"/>
                                    </ice:panelSeries>
                                </ice:panelGroup>
                            </ice:panelGrid>
                        </ice:panelGrid>

                        <!-- Error messages here -->
                        <h:message for="input_#{propEditor.id}" styleClass="error"/>
                    </ice:panelGrid>
                    <ice:panelGroup>
                        <ice:outputText value="*" rendered="#{propEditor.metadata.isMandatory}" styleClass="requiredFieldIndicator"/>
                    </ice:panelGroup>


                </c:forEach>
            </ice:panelGrid>
        </ui:composition>

        <ice:commandButton value="up" action="#{CreateRule.goUp}"
                           rendered="#{editor.parentEditor != null}"
                           immediate="true"/>

        <ice:dataTable var="propEditor" value="#{editor.propertyEditors}" varStatus="statusVar">
            <ice:column>
                <ice:outputLabel for="input_#{propEditor.inputType}">
                    <ice:outputText value="#{propEditor.metadata.title}: "/>
                </ice:outputLabel>
            </ice:column>
            <ice:column>
                <ice:outputText value="#{propEditor.id}"/>
            </ice:column>
            <ice:column>
                <!-- DEFAULT editor - simple inputText -->
                <ice:inputText id="input_DEFAULT" value="#{propEditor.value}" partialSubmit="true"
                               converter="#{propEditor.converter}"
                               validator="#{propEditor.validate}"
                               required="#{propEditor.metadata.isMandatory}"
                               requiredMessage="This field is mandatory - value cannot be blank"
                               rendered="#{propEditor.inputType == 'DEFAULT'}"/>
                <!-- TEXT_AREA editor - used for larger string properties -->
                <ice:inputTextarea id="input_TEXT_AREA" value="#{propEditor.value}" partialSubmit="true"
                                   converter="#{propEditor.converter}"
                                   validator="#{propEditor.validate}"
                                   required="#{propEditor.metadata.isMandatory}"
                                   requiredMessage="This field is mandatory - value cannot be blank"
                                   rendered="#{propEditor.inputType == 'TEXT_AREA'}"/>
                <!-- DATE_PICKER editor - used for date properties -->
                <ice:selectInputDate id="input_DATE_PICKER" value="#{propEditor.value}" partialSubmit="true"
                                     validator="#{propEditor.validate}"
                                     required="#{propEditor.metadata.isMandatory}"
                                     requiredMessage="This field is mandatory - value cannot be blank"
                                     renderAsPopup="true"
                                     rendered="#{propEditor.inputType == 'DATE_PICKER'}"/>
                <!-- SELECT_ONE_MENU editor - used for enumerated properties and many-to-one relations -->
                <ice:selectOneMenu id="input_SELECT_ONE_MENU" value="#{propEditor.value}" partialSubmit="true"
                                   converter="#{propEditor.converter}"
                                   validator="#{propEditor.validate}"
                                   required="#{propEditor.metadata.isMandatory}"
                                   requiredMessage="This field is mandatory - value cannot be blank"
                                   rendered="#{propEditor.inputType == 'SELECT_ONE_MENU'}">
                    <f:selectItems value="#{propEditor.listOfValues}"/>
                </ice:selectOneMenu>
                <ice:commandButton value="Create / Edit"
                                   rendered="#{propEditor.inputType == 'SELECT_ONE_MENU'}"
                                   immediate="true">
                    <f:setPropertyActionListener target="#{CreateRule.editor}" value="#{propEditor}"/>
                </ice:commandButton>
                <!-- ONE-TO-ONE editor - input text just so that validation would be applied -->
                <ice:inputText id="input_ONE_TO_ONE" value="#{propEditor.value.entityTitle}"
                               rendered="#{propEditor.inputType == 'ONE_TO_ONE'}"
                               required="#{propEditor.metadata.isMandatory}"
                               requiredMessage="This field is mandatory - value cannot be blank"
                               validator="#{propEditor.validate}"
                               readonly="true"
                               partialSubmit="true"/>
                <ice:commandButton type="submit" value="Edit"
                                   rendered="#{propEditor.inputType == 'ONE_TO_ONE'}"
                                   immediate="true">
                    <f:setPropertyActionListener target="#{CreateRule.editor}" value="#{propEditor}"/>
                </ice:commandButton>
                <!-- Error messages here -->
                <h:message for="input_#{propEditor.inputType}" styleClass="error"/>
            </ice:column>
            <ice:column>
                <ice:outputText value="*" rendered="#{propEditor.metadata.isMandatory}" styleClass="requiredFieldIndicator"/>
            </ice:column>
        </ice:dataTable>

        <!--
        <ice:panelGrid columns="2">
            <ui:repeat value="#{entity.propertyMetadata}" var="propMeta">
                <ice:outputLabel for="#{propMeta.name}_input">
                    <ice:outputText value="#{propMeta.title}: "/>
                </ice:outputLabel>
                <ice:inputText id="#{propMeta.name}_input" value=""/>
            </ui:repeat>
        </ice:panelGrid>
        -->

        <!--
        <ice:panelGrid columns="4">
            <ice:outputText value="jou"/>
            <ice:outputText value="jou"/>
            <ice:outputText value="  #{entity.propertyMetadata[0].name}  "/>
            <ice:outputText value="jou"/>
            <ui:repeat value="#{entity.propertyMetadata}" var="propMeta">
                <ice:panelGroup>
                    <ice:outputText value="Property title: "/>
                    <ice:outputText value="#{propMeta.title}"/>
                    <br/>
                    <ice:outputText value="Property name: "/>
                    <ice:outputText value="#{propMeta.name}      "/>
                    <br/>
                    <ice:outputText value="Property type: "/>
                    <ice:outputText value="#{propMeta.type.name}"/>
                    <br/>
                    <br/>
                    <br/>
                </ice:panelGroup>
            </ui:repeat>
        </ice:panelGrid>
        -->
    </body>
</html>
